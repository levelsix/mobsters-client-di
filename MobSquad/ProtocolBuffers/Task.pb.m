// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "Task.pb.h"

@implementation TaskRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [TaskRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    [MonsterStuffRoot registerAllExtensions:registry];
    [SharedEnumConfigRoot registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface TaskStageProto ()
@property int32_t stageId;
@property (retain) NSMutableArray* mutableStageMonstersList;
@end

@implementation TaskStageProto

- (BOOL) hasStageId {
  return !!hasStageId_;
}
- (void) setHasStageId:(BOOL) value {
  hasStageId_ = !!value;
}
@synthesize stageId;
@synthesize mutableStageMonstersList;
- (void) dealloc {
  self.mutableStageMonstersList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.stageId = 0;
  }
  return self;
}
static TaskStageProto* defaultTaskStageProtoInstance = nil;
+ (void) initialize {
  if (self == [TaskStageProto class]) {
    defaultTaskStageProtoInstance = [[TaskStageProto alloc] init];
  }
}
+ (TaskStageProto*) defaultInstance {
  return defaultTaskStageProtoInstance;
}
- (TaskStageProto*) defaultInstance {
  return defaultTaskStageProtoInstance;
}
- (NSArray*) stageMonstersList {
  return mutableStageMonstersList;
}
- (TaskStageMonsterProto*) stageMonstersAtIndex:(int32_t) index {
  id value = [mutableStageMonstersList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasStageId) {
    [output writeInt32:1 value:self.stageId];
  }
  for (TaskStageMonsterProto* element in self.stageMonstersList) {
    [output writeMessage:2 value:element];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasStageId) {
    size += computeInt32Size(1, self.stageId);
  }
  for (TaskStageMonsterProto* element in self.stageMonstersList) {
    size += computeMessageSize(2, element);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (TaskStageProto*) parseFromData:(NSData*) data {
  return (TaskStageProto*)[[[TaskStageProto builder] mergeFromData:data] build];
}
+ (TaskStageProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TaskStageProto*)[[[TaskStageProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TaskStageProto*) parseFromInputStream:(NSInputStream*) input {
  return (TaskStageProto*)[[[TaskStageProto builder] mergeFromInputStream:input] build];
}
+ (TaskStageProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TaskStageProto*)[[[TaskStageProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TaskStageProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TaskStageProto*)[[[TaskStageProto builder] mergeFromCodedInputStream:input] build];
}
+ (TaskStageProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TaskStageProto*)[[[TaskStageProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TaskStageProto_Builder*) builder {
  return [[[TaskStageProto_Builder alloc] init] autorelease];
}
+ (TaskStageProto_Builder*) builderWithPrototype:(TaskStageProto*) prototype {
  return [[TaskStageProto builder] mergeFrom:prototype];
}
- (TaskStageProto_Builder*) builder {
  return [TaskStageProto builder];
}
@end

@interface TaskStageProto_Builder()
@property (retain) TaskStageProto* result;
@end

@implementation TaskStageProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[TaskStageProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (TaskStageProto_Builder*) clear {
  self.result = [[[TaskStageProto alloc] init] autorelease];
  return self;
}
- (TaskStageProto_Builder*) clone {
  return [TaskStageProto builderWithPrototype:result];
}
- (TaskStageProto*) defaultInstance {
  return [TaskStageProto defaultInstance];
}
- (TaskStageProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TaskStageProto*) buildPartial {
  TaskStageProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (TaskStageProto_Builder*) mergeFrom:(TaskStageProto*) other {
  if (other == [TaskStageProto defaultInstance]) {
    return self;
  }
  if (other.hasStageId) {
    [self setStageId:other.stageId];
  }
  if (other.mutableStageMonstersList.count > 0) {
    if (result.mutableStageMonstersList == nil) {
      result.mutableStageMonstersList = [NSMutableArray array];
    }
    [result.mutableStageMonstersList addObjectsFromArray:other.mutableStageMonstersList];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TaskStageProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TaskStageProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setStageId:[input readInt32]];
        break;
      }
      case 18: {
        TaskStageMonsterProto_Builder* subBuilder = [TaskStageMonsterProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addStageMonsters:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasStageId {
  return result.hasStageId;
}
- (int32_t) stageId {
  return result.stageId;
}
- (TaskStageProto_Builder*) setStageId:(int32_t) value {
  result.hasStageId = YES;
  result.stageId = value;
  return self;
}
- (TaskStageProto_Builder*) clearStageId {
  result.hasStageId = NO;
  result.stageId = 0;
  return self;
}
- (NSArray*) stageMonstersList {
  if (result.mutableStageMonstersList == nil) { return [NSArray array]; }
  return result.mutableStageMonstersList;
}
- (TaskStageMonsterProto*) stageMonstersAtIndex:(int32_t) index {
  return [result stageMonstersAtIndex:index];
}
- (TaskStageProto_Builder*) replaceStageMonstersAtIndex:(int32_t) index with:(TaskStageMonsterProto*) value {
  [result.mutableStageMonstersList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (TaskStageProto_Builder*) addAllStageMonsters:(NSArray*) values {
  if (result.mutableStageMonstersList == nil) {
    result.mutableStageMonstersList = [NSMutableArray array];
  }
  [result.mutableStageMonstersList addObjectsFromArray:values];
  return self;
}
- (TaskStageProto_Builder*) clearStageMonstersList {
  result.mutableStageMonstersList = nil;
  return self;
}
- (TaskStageProto_Builder*) addStageMonsters:(TaskStageMonsterProto*) value {
  if (result.mutableStageMonstersList == nil) {
    result.mutableStageMonstersList = [NSMutableArray array];
  }
  [result.mutableStageMonstersList addObject:value];
  return self;
}
@end

@interface FullTaskProto ()
@property int32_t taskId;
@property (retain) NSString* name;
@property (retain) NSString* description;
@property int32_t cityId;
@property int32_t assetNumWithinCity;
@property int32_t prerequisiteTaskId;
@property int32_t prerequisiteQuestId;
@end

@implementation FullTaskProto

- (BOOL) hasTaskId {
  return !!hasTaskId_;
}
- (void) setHasTaskId:(BOOL) value {
  hasTaskId_ = !!value;
}
@synthesize taskId;
- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) value {
  hasName_ = !!value;
}
@synthesize name;
- (BOOL) hasDescription {
  return !!hasDescription_;
}
- (void) setHasDescription:(BOOL) value {
  hasDescription_ = !!value;
}
@synthesize description;
- (BOOL) hasCityId {
  return !!hasCityId_;
}
- (void) setHasCityId:(BOOL) value {
  hasCityId_ = !!value;
}
@synthesize cityId;
- (BOOL) hasAssetNumWithinCity {
  return !!hasAssetNumWithinCity_;
}
- (void) setHasAssetNumWithinCity:(BOOL) value {
  hasAssetNumWithinCity_ = !!value;
}
@synthesize assetNumWithinCity;
- (BOOL) hasPrerequisiteTaskId {
  return !!hasPrerequisiteTaskId_;
}
- (void) setHasPrerequisiteTaskId:(BOOL) value {
  hasPrerequisiteTaskId_ = !!value;
}
@synthesize prerequisiteTaskId;
- (BOOL) hasPrerequisiteQuestId {
  return !!hasPrerequisiteQuestId_;
}
- (void) setHasPrerequisiteQuestId:(BOOL) value {
  hasPrerequisiteQuestId_ = !!value;
}
@synthesize prerequisiteQuestId;
- (void) dealloc {
  self.name = nil;
  self.description = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.taskId = 0;
    self.name = @"";
    self.description = @"";
    self.cityId = 0;
    self.assetNumWithinCity = 0;
    self.prerequisiteTaskId = 0;
    self.prerequisiteQuestId = 0;
  }
  return self;
}
static FullTaskProto* defaultFullTaskProtoInstance = nil;
+ (void) initialize {
  if (self == [FullTaskProto class]) {
    defaultFullTaskProtoInstance = [[FullTaskProto alloc] init];
  }
}
+ (FullTaskProto*) defaultInstance {
  return defaultFullTaskProtoInstance;
}
- (FullTaskProto*) defaultInstance {
  return defaultFullTaskProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasTaskId) {
    [output writeInt32:1 value:self.taskId];
  }
  if (self.hasName) {
    [output writeString:2 value:self.name];
  }
  if (self.hasDescription) {
    [output writeString:3 value:self.description];
  }
  if (self.hasCityId) {
    [output writeInt32:4 value:self.cityId];
  }
  if (self.hasAssetNumWithinCity) {
    [output writeInt32:5 value:self.assetNumWithinCity];
  }
  if (self.hasPrerequisiteTaskId) {
    [output writeInt32:6 value:self.prerequisiteTaskId];
  }
  if (self.hasPrerequisiteQuestId) {
    [output writeInt32:7 value:self.prerequisiteQuestId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasTaskId) {
    size += computeInt32Size(1, self.taskId);
  }
  if (self.hasName) {
    size += computeStringSize(2, self.name);
  }
  if (self.hasDescription) {
    size += computeStringSize(3, self.description);
  }
  if (self.hasCityId) {
    size += computeInt32Size(4, self.cityId);
  }
  if (self.hasAssetNumWithinCity) {
    size += computeInt32Size(5, self.assetNumWithinCity);
  }
  if (self.hasPrerequisiteTaskId) {
    size += computeInt32Size(6, self.prerequisiteTaskId);
  }
  if (self.hasPrerequisiteQuestId) {
    size += computeInt32Size(7, self.prerequisiteQuestId);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (FullTaskProto*) parseFromData:(NSData*) data {
  return (FullTaskProto*)[[[FullTaskProto builder] mergeFromData:data] build];
}
+ (FullTaskProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FullTaskProto*)[[[FullTaskProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (FullTaskProto*) parseFromInputStream:(NSInputStream*) input {
  return (FullTaskProto*)[[[FullTaskProto builder] mergeFromInputStream:input] build];
}
+ (FullTaskProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FullTaskProto*)[[[FullTaskProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FullTaskProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (FullTaskProto*)[[[FullTaskProto builder] mergeFromCodedInputStream:input] build];
}
+ (FullTaskProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FullTaskProto*)[[[FullTaskProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FullTaskProto_Builder*) builder {
  return [[[FullTaskProto_Builder alloc] init] autorelease];
}
+ (FullTaskProto_Builder*) builderWithPrototype:(FullTaskProto*) prototype {
  return [[FullTaskProto builder] mergeFrom:prototype];
}
- (FullTaskProto_Builder*) builder {
  return [FullTaskProto builder];
}
@end

@interface FullTaskProto_Builder()
@property (retain) FullTaskProto* result;
@end

@implementation FullTaskProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[FullTaskProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (FullTaskProto_Builder*) clear {
  self.result = [[[FullTaskProto alloc] init] autorelease];
  return self;
}
- (FullTaskProto_Builder*) clone {
  return [FullTaskProto builderWithPrototype:result];
}
- (FullTaskProto*) defaultInstance {
  return [FullTaskProto defaultInstance];
}
- (FullTaskProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (FullTaskProto*) buildPartial {
  FullTaskProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (FullTaskProto_Builder*) mergeFrom:(FullTaskProto*) other {
  if (other == [FullTaskProto defaultInstance]) {
    return self;
  }
  if (other.hasTaskId) {
    [self setTaskId:other.taskId];
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.hasDescription) {
    [self setDescription:other.description];
  }
  if (other.hasCityId) {
    [self setCityId:other.cityId];
  }
  if (other.hasAssetNumWithinCity) {
    [self setAssetNumWithinCity:other.assetNumWithinCity];
  }
  if (other.hasPrerequisiteTaskId) {
    [self setPrerequisiteTaskId:other.prerequisiteTaskId];
  }
  if (other.hasPrerequisiteQuestId) {
    [self setPrerequisiteQuestId:other.prerequisiteQuestId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (FullTaskProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (FullTaskProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setTaskId:[input readInt32]];
        break;
      }
      case 18: {
        [self setName:[input readString]];
        break;
      }
      case 26: {
        [self setDescription:[input readString]];
        break;
      }
      case 32: {
        [self setCityId:[input readInt32]];
        break;
      }
      case 40: {
        [self setAssetNumWithinCity:[input readInt32]];
        break;
      }
      case 48: {
        [self setPrerequisiteTaskId:[input readInt32]];
        break;
      }
      case 56: {
        [self setPrerequisiteQuestId:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasTaskId {
  return result.hasTaskId;
}
- (int32_t) taskId {
  return result.taskId;
}
- (FullTaskProto_Builder*) setTaskId:(int32_t) value {
  result.hasTaskId = YES;
  result.taskId = value;
  return self;
}
- (FullTaskProto_Builder*) clearTaskId {
  result.hasTaskId = NO;
  result.taskId = 0;
  return self;
}
- (BOOL) hasName {
  return result.hasName;
}
- (NSString*) name {
  return result.name;
}
- (FullTaskProto_Builder*) setName:(NSString*) value {
  result.hasName = YES;
  result.name = value;
  return self;
}
- (FullTaskProto_Builder*) clearName {
  result.hasName = NO;
  result.name = @"";
  return self;
}
- (BOOL) hasDescription {
  return result.hasDescription;
}
- (NSString*) description {
  return result.description;
}
- (FullTaskProto_Builder*) setDescription:(NSString*) value {
  result.hasDescription = YES;
  result.description = value;
  return self;
}
- (FullTaskProto_Builder*) clearDescription {
  result.hasDescription = NO;
  result.description = @"";
  return self;
}
- (BOOL) hasCityId {
  return result.hasCityId;
}
- (int32_t) cityId {
  return result.cityId;
}
- (FullTaskProto_Builder*) setCityId:(int32_t) value {
  result.hasCityId = YES;
  result.cityId = value;
  return self;
}
- (FullTaskProto_Builder*) clearCityId {
  result.hasCityId = NO;
  result.cityId = 0;
  return self;
}
- (BOOL) hasAssetNumWithinCity {
  return result.hasAssetNumWithinCity;
}
- (int32_t) assetNumWithinCity {
  return result.assetNumWithinCity;
}
- (FullTaskProto_Builder*) setAssetNumWithinCity:(int32_t) value {
  result.hasAssetNumWithinCity = YES;
  result.assetNumWithinCity = value;
  return self;
}
- (FullTaskProto_Builder*) clearAssetNumWithinCity {
  result.hasAssetNumWithinCity = NO;
  result.assetNumWithinCity = 0;
  return self;
}
- (BOOL) hasPrerequisiteTaskId {
  return result.hasPrerequisiteTaskId;
}
- (int32_t) prerequisiteTaskId {
  return result.prerequisiteTaskId;
}
- (FullTaskProto_Builder*) setPrerequisiteTaskId:(int32_t) value {
  result.hasPrerequisiteTaskId = YES;
  result.prerequisiteTaskId = value;
  return self;
}
- (FullTaskProto_Builder*) clearPrerequisiteTaskId {
  result.hasPrerequisiteTaskId = NO;
  result.prerequisiteTaskId = 0;
  return self;
}
- (BOOL) hasPrerequisiteQuestId {
  return result.hasPrerequisiteQuestId;
}
- (int32_t) prerequisiteQuestId {
  return result.prerequisiteQuestId;
}
- (FullTaskProto_Builder*) setPrerequisiteQuestId:(int32_t) value {
  result.hasPrerequisiteQuestId = YES;
  result.prerequisiteQuestId = value;
  return self;
}
- (FullTaskProto_Builder*) clearPrerequisiteQuestId {
  result.hasPrerequisiteQuestId = NO;
  result.prerequisiteQuestId = 0;
  return self;
}
@end

@interface MinimumUserTaskProto ()
@property int32_t userId;
@property int32_t taskId;
@property int32_t curTaskStageId;
@property int64_t userTaskId;
@end

@implementation MinimumUserTaskProto

- (BOOL) hasUserId {
  return !!hasUserId_;
}
- (void) setHasUserId:(BOOL) value {
  hasUserId_ = !!value;
}
@synthesize userId;
- (BOOL) hasTaskId {
  return !!hasTaskId_;
}
- (void) setHasTaskId:(BOOL) value {
  hasTaskId_ = !!value;
}
@synthesize taskId;
- (BOOL) hasCurTaskStageId {
  return !!hasCurTaskStageId_;
}
- (void) setHasCurTaskStageId:(BOOL) value {
  hasCurTaskStageId_ = !!value;
}
@synthesize curTaskStageId;
- (BOOL) hasUserTaskId {
  return !!hasUserTaskId_;
}
- (void) setHasUserTaskId:(BOOL) value {
  hasUserTaskId_ = !!value;
}
@synthesize userTaskId;
- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.userId = 0;
    self.taskId = 0;
    self.curTaskStageId = 0;
    self.userTaskId = 0L;
  }
  return self;
}
static MinimumUserTaskProto* defaultMinimumUserTaskProtoInstance = nil;
+ (void) initialize {
  if (self == [MinimumUserTaskProto class]) {
    defaultMinimumUserTaskProtoInstance = [[MinimumUserTaskProto alloc] init];
  }
}
+ (MinimumUserTaskProto*) defaultInstance {
  return defaultMinimumUserTaskProtoInstance;
}
- (MinimumUserTaskProto*) defaultInstance {
  return defaultMinimumUserTaskProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUserId) {
    [output writeInt32:1 value:self.userId];
  }
  if (self.hasTaskId) {
    [output writeInt32:2 value:self.taskId];
  }
  if (self.hasCurTaskStageId) {
    [output writeInt32:3 value:self.curTaskStageId];
  }
  if (self.hasUserTaskId) {
    [output writeInt64:4 value:self.userTaskId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasUserId) {
    size += computeInt32Size(1, self.userId);
  }
  if (self.hasTaskId) {
    size += computeInt32Size(2, self.taskId);
  }
  if (self.hasCurTaskStageId) {
    size += computeInt32Size(3, self.curTaskStageId);
  }
  if (self.hasUserTaskId) {
    size += computeInt64Size(4, self.userTaskId);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (MinimumUserTaskProto*) parseFromData:(NSData*) data {
  return (MinimumUserTaskProto*)[[[MinimumUserTaskProto builder] mergeFromData:data] build];
}
+ (MinimumUserTaskProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MinimumUserTaskProto*)[[[MinimumUserTaskProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (MinimumUserTaskProto*) parseFromInputStream:(NSInputStream*) input {
  return (MinimumUserTaskProto*)[[[MinimumUserTaskProto builder] mergeFromInputStream:input] build];
}
+ (MinimumUserTaskProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MinimumUserTaskProto*)[[[MinimumUserTaskProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MinimumUserTaskProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (MinimumUserTaskProto*)[[[MinimumUserTaskProto builder] mergeFromCodedInputStream:input] build];
}
+ (MinimumUserTaskProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MinimumUserTaskProto*)[[[MinimumUserTaskProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MinimumUserTaskProto_Builder*) builder {
  return [[[MinimumUserTaskProto_Builder alloc] init] autorelease];
}
+ (MinimumUserTaskProto_Builder*) builderWithPrototype:(MinimumUserTaskProto*) prototype {
  return [[MinimumUserTaskProto builder] mergeFrom:prototype];
}
- (MinimumUserTaskProto_Builder*) builder {
  return [MinimumUserTaskProto builder];
}
@end

@interface MinimumUserTaskProto_Builder()
@property (retain) MinimumUserTaskProto* result;
@end

@implementation MinimumUserTaskProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[MinimumUserTaskProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (MinimumUserTaskProto_Builder*) clear {
  self.result = [[[MinimumUserTaskProto alloc] init] autorelease];
  return self;
}
- (MinimumUserTaskProto_Builder*) clone {
  return [MinimumUserTaskProto builderWithPrototype:result];
}
- (MinimumUserTaskProto*) defaultInstance {
  return [MinimumUserTaskProto defaultInstance];
}
- (MinimumUserTaskProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (MinimumUserTaskProto*) buildPartial {
  MinimumUserTaskProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (MinimumUserTaskProto_Builder*) mergeFrom:(MinimumUserTaskProto*) other {
  if (other == [MinimumUserTaskProto defaultInstance]) {
    return self;
  }
  if (other.hasUserId) {
    [self setUserId:other.userId];
  }
  if (other.hasTaskId) {
    [self setTaskId:other.taskId];
  }
  if (other.hasCurTaskStageId) {
    [self setCurTaskStageId:other.curTaskStageId];
  }
  if (other.hasUserTaskId) {
    [self setUserTaskId:other.userTaskId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (MinimumUserTaskProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (MinimumUserTaskProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setUserId:[input readInt32]];
        break;
      }
      case 16: {
        [self setTaskId:[input readInt32]];
        break;
      }
      case 24: {
        [self setCurTaskStageId:[input readInt32]];
        break;
      }
      case 32: {
        [self setUserTaskId:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasUserId {
  return result.hasUserId;
}
- (int32_t) userId {
  return result.userId;
}
- (MinimumUserTaskProto_Builder*) setUserId:(int32_t) value {
  result.hasUserId = YES;
  result.userId = value;
  return self;
}
- (MinimumUserTaskProto_Builder*) clearUserId {
  result.hasUserId = NO;
  result.userId = 0;
  return self;
}
- (BOOL) hasTaskId {
  return result.hasTaskId;
}
- (int32_t) taskId {
  return result.taskId;
}
- (MinimumUserTaskProto_Builder*) setTaskId:(int32_t) value {
  result.hasTaskId = YES;
  result.taskId = value;
  return self;
}
- (MinimumUserTaskProto_Builder*) clearTaskId {
  result.hasTaskId = NO;
  result.taskId = 0;
  return self;
}
- (BOOL) hasCurTaskStageId {
  return result.hasCurTaskStageId;
}
- (int32_t) curTaskStageId {
  return result.curTaskStageId;
}
- (MinimumUserTaskProto_Builder*) setCurTaskStageId:(int32_t) value {
  result.hasCurTaskStageId = YES;
  result.curTaskStageId = value;
  return self;
}
- (MinimumUserTaskProto_Builder*) clearCurTaskStageId {
  result.hasCurTaskStageId = NO;
  result.curTaskStageId = 0;
  return self;
}
- (BOOL) hasUserTaskId {
  return result.hasUserTaskId;
}
- (int64_t) userTaskId {
  return result.userTaskId;
}
- (MinimumUserTaskProto_Builder*) setUserTaskId:(int64_t) value {
  result.hasUserTaskId = YES;
  result.userTaskId = value;
  return self;
}
- (MinimumUserTaskProto_Builder*) clearUserTaskId {
  result.hasUserTaskId = NO;
  result.userTaskId = 0L;
  return self;
}
@end

@interface TaskStageMonsterProto ()
@property int32_t monsterId;
@property TaskStageMonsterProto_MonsterType monsterType;
@property int32_t expReward;
@property int32_t cashReward;
@property int32_t oilReward;
@property BOOL puzzlePieceDropped;
@property int32_t level;
@property int32_t itemId;
@end

@implementation TaskStageMonsterProto

- (BOOL) hasMonsterId {
  return !!hasMonsterId_;
}
- (void) setHasMonsterId:(BOOL) value {
  hasMonsterId_ = !!value;
}
@synthesize monsterId;
- (BOOL) hasMonsterType {
  return !!hasMonsterType_;
}
- (void) setHasMonsterType:(BOOL) value {
  hasMonsterType_ = !!value;
}
@synthesize monsterType;
- (BOOL) hasExpReward {
  return !!hasExpReward_;
}
- (void) setHasExpReward:(BOOL) value {
  hasExpReward_ = !!value;
}
@synthesize expReward;
- (BOOL) hasCashReward {
  return !!hasCashReward_;
}
- (void) setHasCashReward:(BOOL) value {
  hasCashReward_ = !!value;
}
@synthesize cashReward;
- (BOOL) hasOilReward {
  return !!hasOilReward_;
}
- (void) setHasOilReward:(BOOL) value {
  hasOilReward_ = !!value;
}
@synthesize oilReward;
- (BOOL) hasPuzzlePieceDropped {
  return !!hasPuzzlePieceDropped_;
}
- (void) setHasPuzzlePieceDropped:(BOOL) value {
  hasPuzzlePieceDropped_ = !!value;
}
- (BOOL) puzzlePieceDropped {
  return !!puzzlePieceDropped_;
}
- (void) setPuzzlePieceDropped:(BOOL) value {
  puzzlePieceDropped_ = !!value;
}
- (BOOL) hasLevel {
  return !!hasLevel_;
}
- (void) setHasLevel:(BOOL) value {
  hasLevel_ = !!value;
}
@synthesize level;
- (BOOL) hasItemId {
  return !!hasItemId_;
}
- (void) setHasItemId:(BOOL) value {
  hasItemId_ = !!value;
}
@synthesize itemId;
- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.monsterId = 0;
    self.monsterType = TaskStageMonsterProto_MonsterTypeRegular;
    self.expReward = 0;
    self.cashReward = 0;
    self.oilReward = 0;
    self.puzzlePieceDropped = NO;
    self.level = 0;
    self.itemId = 0;
  }
  return self;
}
static TaskStageMonsterProto* defaultTaskStageMonsterProtoInstance = nil;
+ (void) initialize {
  if (self == [TaskStageMonsterProto class]) {
    defaultTaskStageMonsterProtoInstance = [[TaskStageMonsterProto alloc] init];
  }
}
+ (TaskStageMonsterProto*) defaultInstance {
  return defaultTaskStageMonsterProtoInstance;
}
- (TaskStageMonsterProto*) defaultInstance {
  return defaultTaskStageMonsterProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasMonsterId) {
    [output writeInt32:1 value:self.monsterId];
  }
  if (self.hasMonsterType) {
    [output writeEnum:2 value:self.monsterType];
  }
  if (self.hasExpReward) {
    [output writeInt32:3 value:self.expReward];
  }
  if (self.hasCashReward) {
    [output writeInt32:4 value:self.cashReward];
  }
  if (self.hasPuzzlePieceDropped) {
    [output writeBool:5 value:self.puzzlePieceDropped];
  }
  if (self.hasLevel) {
    [output writeInt32:6 value:self.level];
  }
  if (self.hasItemId) {
    [output writeInt32:7 value:self.itemId];
  }
  if (self.hasOilReward) {
    [output writeInt32:8 value:self.oilReward];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasMonsterId) {
    size += computeInt32Size(1, self.monsterId);
  }
  if (self.hasMonsterType) {
    size += computeEnumSize(2, self.monsterType);
  }
  if (self.hasExpReward) {
    size += computeInt32Size(3, self.expReward);
  }
  if (self.hasCashReward) {
    size += computeInt32Size(4, self.cashReward);
  }
  if (self.hasPuzzlePieceDropped) {
    size += computeBoolSize(5, self.puzzlePieceDropped);
  }
  if (self.hasLevel) {
    size += computeInt32Size(6, self.level);
  }
  if (self.hasItemId) {
    size += computeInt32Size(7, self.itemId);
  }
  if (self.hasOilReward) {
    size += computeInt32Size(8, self.oilReward);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (TaskStageMonsterProto*) parseFromData:(NSData*) data {
  return (TaskStageMonsterProto*)[[[TaskStageMonsterProto builder] mergeFromData:data] build];
}
+ (TaskStageMonsterProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TaskStageMonsterProto*)[[[TaskStageMonsterProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TaskStageMonsterProto*) parseFromInputStream:(NSInputStream*) input {
  return (TaskStageMonsterProto*)[[[TaskStageMonsterProto builder] mergeFromInputStream:input] build];
}
+ (TaskStageMonsterProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TaskStageMonsterProto*)[[[TaskStageMonsterProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TaskStageMonsterProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TaskStageMonsterProto*)[[[TaskStageMonsterProto builder] mergeFromCodedInputStream:input] build];
}
+ (TaskStageMonsterProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TaskStageMonsterProto*)[[[TaskStageMonsterProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TaskStageMonsterProto_Builder*) builder {
  return [[[TaskStageMonsterProto_Builder alloc] init] autorelease];
}
+ (TaskStageMonsterProto_Builder*) builderWithPrototype:(TaskStageMonsterProto*) prototype {
  return [[TaskStageMonsterProto builder] mergeFrom:prototype];
}
- (TaskStageMonsterProto_Builder*) builder {
  return [TaskStageMonsterProto builder];
}
@end

BOOL TaskStageMonsterProto_MonsterTypeIsValidValue(TaskStageMonsterProto_MonsterType value) {
  switch (value) {
    case TaskStageMonsterProto_MonsterTypeRegular:
    case TaskStageMonsterProto_MonsterTypeMiniBoss:
    case TaskStageMonsterProto_MonsterTypeBoss:
      return YES;
    default:
      return NO;
  }
}
@interface TaskStageMonsterProto_Builder()
@property (retain) TaskStageMonsterProto* result;
@end

@implementation TaskStageMonsterProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[TaskStageMonsterProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (TaskStageMonsterProto_Builder*) clear {
  self.result = [[[TaskStageMonsterProto alloc] init] autorelease];
  return self;
}
- (TaskStageMonsterProto_Builder*) clone {
  return [TaskStageMonsterProto builderWithPrototype:result];
}
- (TaskStageMonsterProto*) defaultInstance {
  return [TaskStageMonsterProto defaultInstance];
}
- (TaskStageMonsterProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TaskStageMonsterProto*) buildPartial {
  TaskStageMonsterProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (TaskStageMonsterProto_Builder*) mergeFrom:(TaskStageMonsterProto*) other {
  if (other == [TaskStageMonsterProto defaultInstance]) {
    return self;
  }
  if (other.hasMonsterId) {
    [self setMonsterId:other.monsterId];
  }
  if (other.hasMonsterType) {
    [self setMonsterType:other.monsterType];
  }
  if (other.hasExpReward) {
    [self setExpReward:other.expReward];
  }
  if (other.hasCashReward) {
    [self setCashReward:other.cashReward];
  }
  if (other.hasOilReward) {
    [self setOilReward:other.oilReward];
  }
  if (other.hasPuzzlePieceDropped) {
    [self setPuzzlePieceDropped:other.puzzlePieceDropped];
  }
  if (other.hasLevel) {
    [self setLevel:other.level];
  }
  if (other.hasItemId) {
    [self setItemId:other.itemId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TaskStageMonsterProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TaskStageMonsterProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setMonsterId:[input readInt32]];
        break;
      }
      case 16: {
        int32_t value = [input readEnum];
        if (TaskStageMonsterProto_MonsterTypeIsValidValue(value)) {
          [self setMonsterType:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
      case 24: {
        [self setExpReward:[input readInt32]];
        break;
      }
      case 32: {
        [self setCashReward:[input readInt32]];
        break;
      }
      case 40: {
        [self setPuzzlePieceDropped:[input readBool]];
        break;
      }
      case 48: {
        [self setLevel:[input readInt32]];
        break;
      }
      case 56: {
        [self setItemId:[input readInt32]];
        break;
      }
      case 64: {
        [self setOilReward:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasMonsterId {
  return result.hasMonsterId;
}
- (int32_t) monsterId {
  return result.monsterId;
}
- (TaskStageMonsterProto_Builder*) setMonsterId:(int32_t) value {
  result.hasMonsterId = YES;
  result.monsterId = value;
  return self;
}
- (TaskStageMonsterProto_Builder*) clearMonsterId {
  result.hasMonsterId = NO;
  result.monsterId = 0;
  return self;
}
- (BOOL) hasMonsterType {
  return result.hasMonsterType;
}
- (TaskStageMonsterProto_MonsterType) monsterType {
  return result.monsterType;
}
- (TaskStageMonsterProto_Builder*) setMonsterType:(TaskStageMonsterProto_MonsterType) value {
  result.hasMonsterType = YES;
  result.monsterType = value;
  return self;
}
- (TaskStageMonsterProto_Builder*) clearMonsterType {
  result.hasMonsterType = NO;
  result.monsterType = TaskStageMonsterProto_MonsterTypeRegular;
  return self;
}
- (BOOL) hasExpReward {
  return result.hasExpReward;
}
- (int32_t) expReward {
  return result.expReward;
}
- (TaskStageMonsterProto_Builder*) setExpReward:(int32_t) value {
  result.hasExpReward = YES;
  result.expReward = value;
  return self;
}
- (TaskStageMonsterProto_Builder*) clearExpReward {
  result.hasExpReward = NO;
  result.expReward = 0;
  return self;
}
- (BOOL) hasCashReward {
  return result.hasCashReward;
}
- (int32_t) cashReward {
  return result.cashReward;
}
- (TaskStageMonsterProto_Builder*) setCashReward:(int32_t) value {
  result.hasCashReward = YES;
  result.cashReward = value;
  return self;
}
- (TaskStageMonsterProto_Builder*) clearCashReward {
  result.hasCashReward = NO;
  result.cashReward = 0;
  return self;
}
- (BOOL) hasOilReward {
  return result.hasOilReward;
}
- (int32_t) oilReward {
  return result.oilReward;
}
- (TaskStageMonsterProto_Builder*) setOilReward:(int32_t) value {
  result.hasOilReward = YES;
  result.oilReward = value;
  return self;
}
- (TaskStageMonsterProto_Builder*) clearOilReward {
  result.hasOilReward = NO;
  result.oilReward = 0;
  return self;
}
- (BOOL) hasPuzzlePieceDropped {
  return result.hasPuzzlePieceDropped;
}
- (BOOL) puzzlePieceDropped {
  return result.puzzlePieceDropped;
}
- (TaskStageMonsterProto_Builder*) setPuzzlePieceDropped:(BOOL) value {
  result.hasPuzzlePieceDropped = YES;
  result.puzzlePieceDropped = value;
  return self;
}
- (TaskStageMonsterProto_Builder*) clearPuzzlePieceDropped {
  result.hasPuzzlePieceDropped = NO;
  result.puzzlePieceDropped = NO;
  return self;
}
- (BOOL) hasLevel {
  return result.hasLevel;
}
- (int32_t) level {
  return result.level;
}
- (TaskStageMonsterProto_Builder*) setLevel:(int32_t) value {
  result.hasLevel = YES;
  result.level = value;
  return self;
}
- (TaskStageMonsterProto_Builder*) clearLevel {
  result.hasLevel = NO;
  result.level = 0;
  return self;
}
- (BOOL) hasItemId {
  return result.hasItemId;
}
- (int32_t) itemId {
  return result.itemId;
}
- (TaskStageMonsterProto_Builder*) setItemId:(int32_t) value {
  result.hasItemId = YES;
  result.itemId = value;
  return self;
}
- (TaskStageMonsterProto_Builder*) clearItemId {
  result.hasItemId = NO;
  result.itemId = 0;
  return self;
}
@end

@interface PersistentEventProto ()
@property int32_t eventId;
@property DayOfWeek dayOfWeek;
@property int32_t startHour;
@property int32_t eventDurationMinutes;
@property int32_t taskId;
@property int32_t cooldownMinutes;
@property PersistentEventProto_EventType type;
@property Element monsterElement;
@end

@implementation PersistentEventProto

- (BOOL) hasEventId {
  return !!hasEventId_;
}
- (void) setHasEventId:(BOOL) value {
  hasEventId_ = !!value;
}
@synthesize eventId;
- (BOOL) hasDayOfWeek {
  return !!hasDayOfWeek_;
}
- (void) setHasDayOfWeek:(BOOL) value {
  hasDayOfWeek_ = !!value;
}
@synthesize dayOfWeek;
- (BOOL) hasStartHour {
  return !!hasStartHour_;
}
- (void) setHasStartHour:(BOOL) value {
  hasStartHour_ = !!value;
}
@synthesize startHour;
- (BOOL) hasEventDurationMinutes {
  return !!hasEventDurationMinutes_;
}
- (void) setHasEventDurationMinutes:(BOOL) value {
  hasEventDurationMinutes_ = !!value;
}
@synthesize eventDurationMinutes;
- (BOOL) hasTaskId {
  return !!hasTaskId_;
}
- (void) setHasTaskId:(BOOL) value {
  hasTaskId_ = !!value;
}
@synthesize taskId;
- (BOOL) hasCooldownMinutes {
  return !!hasCooldownMinutes_;
}
- (void) setHasCooldownMinutes:(BOOL) value {
  hasCooldownMinutes_ = !!value;
}
@synthesize cooldownMinutes;
- (BOOL) hasType {
  return !!hasType_;
}
- (void) setHasType:(BOOL) value {
  hasType_ = !!value;
}
@synthesize type;
- (BOOL) hasMonsterElement {
  return !!hasMonsterElement_;
}
- (void) setHasMonsterElement:(BOOL) value {
  hasMonsterElement_ = !!value;
}
@synthesize monsterElement;
- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.eventId = 0;
    self.dayOfWeek = DayOfWeekMonday;
    self.startHour = 0;
    self.eventDurationMinutes = 0;
    self.taskId = 0;
    self.cooldownMinutes = 0;
    self.type = PersistentEventProto_EventTypeEnhance;
    self.monsterElement = ElementNoElement;
  }
  return self;
}
static PersistentEventProto* defaultPersistentEventProtoInstance = nil;
+ (void) initialize {
  if (self == [PersistentEventProto class]) {
    defaultPersistentEventProtoInstance = [[PersistentEventProto alloc] init];
  }
}
+ (PersistentEventProto*) defaultInstance {
  return defaultPersistentEventProtoInstance;
}
- (PersistentEventProto*) defaultInstance {
  return defaultPersistentEventProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasEventId) {
    [output writeInt32:1 value:self.eventId];
  }
  if (self.hasDayOfWeek) {
    [output writeEnum:2 value:self.dayOfWeek];
  }
  if (self.hasStartHour) {
    [output writeInt32:3 value:self.startHour];
  }
  if (self.hasEventDurationMinutes) {
    [output writeInt32:4 value:self.eventDurationMinutes];
  }
  if (self.hasTaskId) {
    [output writeInt32:5 value:self.taskId];
  }
  if (self.hasCooldownMinutes) {
    [output writeInt32:6 value:self.cooldownMinutes];
  }
  if (self.hasType) {
    [output writeEnum:7 value:self.type];
  }
  if (self.hasMonsterElement) {
    [output writeEnum:8 value:self.monsterElement];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasEventId) {
    size += computeInt32Size(1, self.eventId);
  }
  if (self.hasDayOfWeek) {
    size += computeEnumSize(2, self.dayOfWeek);
  }
  if (self.hasStartHour) {
    size += computeInt32Size(3, self.startHour);
  }
  if (self.hasEventDurationMinutes) {
    size += computeInt32Size(4, self.eventDurationMinutes);
  }
  if (self.hasTaskId) {
    size += computeInt32Size(5, self.taskId);
  }
  if (self.hasCooldownMinutes) {
    size += computeInt32Size(6, self.cooldownMinutes);
  }
  if (self.hasType) {
    size += computeEnumSize(7, self.type);
  }
  if (self.hasMonsterElement) {
    size += computeEnumSize(8, self.monsterElement);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (PersistentEventProto*) parseFromData:(NSData*) data {
  return (PersistentEventProto*)[[[PersistentEventProto builder] mergeFromData:data] build];
}
+ (PersistentEventProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PersistentEventProto*)[[[PersistentEventProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PersistentEventProto*) parseFromInputStream:(NSInputStream*) input {
  return (PersistentEventProto*)[[[PersistentEventProto builder] mergeFromInputStream:input] build];
}
+ (PersistentEventProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PersistentEventProto*)[[[PersistentEventProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PersistentEventProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PersistentEventProto*)[[[PersistentEventProto builder] mergeFromCodedInputStream:input] build];
}
+ (PersistentEventProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PersistentEventProto*)[[[PersistentEventProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PersistentEventProto_Builder*) builder {
  return [[[PersistentEventProto_Builder alloc] init] autorelease];
}
+ (PersistentEventProto_Builder*) builderWithPrototype:(PersistentEventProto*) prototype {
  return [[PersistentEventProto builder] mergeFrom:prototype];
}
- (PersistentEventProto_Builder*) builder {
  return [PersistentEventProto builder];
}
@end

BOOL PersistentEventProto_EventTypeIsValidValue(PersistentEventProto_EventType value) {
  switch (value) {
    case PersistentEventProto_EventTypeEnhance:
    case PersistentEventProto_EventTypeEvolution:
      return YES;
    default:
      return NO;
  }
}
@interface PersistentEventProto_Builder()
@property (retain) PersistentEventProto* result;
@end

@implementation PersistentEventProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[PersistentEventProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PersistentEventProto_Builder*) clear {
  self.result = [[[PersistentEventProto alloc] init] autorelease];
  return self;
}
- (PersistentEventProto_Builder*) clone {
  return [PersistentEventProto builderWithPrototype:result];
}
- (PersistentEventProto*) defaultInstance {
  return [PersistentEventProto defaultInstance];
}
- (PersistentEventProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PersistentEventProto*) buildPartial {
  PersistentEventProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (PersistentEventProto_Builder*) mergeFrom:(PersistentEventProto*) other {
  if (other == [PersistentEventProto defaultInstance]) {
    return self;
  }
  if (other.hasEventId) {
    [self setEventId:other.eventId];
  }
  if (other.hasDayOfWeek) {
    [self setDayOfWeek:other.dayOfWeek];
  }
  if (other.hasStartHour) {
    [self setStartHour:other.startHour];
  }
  if (other.hasEventDurationMinutes) {
    [self setEventDurationMinutes:other.eventDurationMinutes];
  }
  if (other.hasTaskId) {
    [self setTaskId:other.taskId];
  }
  if (other.hasCooldownMinutes) {
    [self setCooldownMinutes:other.cooldownMinutes];
  }
  if (other.hasType) {
    [self setType:other.type];
  }
  if (other.hasMonsterElement) {
    [self setMonsterElement:other.monsterElement];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PersistentEventProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PersistentEventProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setEventId:[input readInt32]];
        break;
      }
      case 16: {
        int32_t value = [input readEnum];
        if (DayOfWeekIsValidValue(value)) {
          [self setDayOfWeek:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
      case 24: {
        [self setStartHour:[input readInt32]];
        break;
      }
      case 32: {
        [self setEventDurationMinutes:[input readInt32]];
        break;
      }
      case 40: {
        [self setTaskId:[input readInt32]];
        break;
      }
      case 48: {
        [self setCooldownMinutes:[input readInt32]];
        break;
      }
      case 56: {
        int32_t value = [input readEnum];
        if (PersistentEventProto_EventTypeIsValidValue(value)) {
          [self setType:value];
        } else {
          [unknownFields mergeVarintField:7 value:value];
        }
        break;
      }
      case 64: {
        int32_t value = [input readEnum];
        if (ElementIsValidValue(value)) {
          [self setMonsterElement:value];
        } else {
          [unknownFields mergeVarintField:8 value:value];
        }
        break;
      }
    }
  }
}
- (BOOL) hasEventId {
  return result.hasEventId;
}
- (int32_t) eventId {
  return result.eventId;
}
- (PersistentEventProto_Builder*) setEventId:(int32_t) value {
  result.hasEventId = YES;
  result.eventId = value;
  return self;
}
- (PersistentEventProto_Builder*) clearEventId {
  result.hasEventId = NO;
  result.eventId = 0;
  return self;
}
- (BOOL) hasDayOfWeek {
  return result.hasDayOfWeek;
}
- (DayOfWeek) dayOfWeek {
  return result.dayOfWeek;
}
- (PersistentEventProto_Builder*) setDayOfWeek:(DayOfWeek) value {
  result.hasDayOfWeek = YES;
  result.dayOfWeek = value;
  return self;
}
- (PersistentEventProto_Builder*) clearDayOfWeek {
  result.hasDayOfWeek = NO;
  result.dayOfWeek = DayOfWeekMonday;
  return self;
}
- (BOOL) hasStartHour {
  return result.hasStartHour;
}
- (int32_t) startHour {
  return result.startHour;
}
- (PersistentEventProto_Builder*) setStartHour:(int32_t) value {
  result.hasStartHour = YES;
  result.startHour = value;
  return self;
}
- (PersistentEventProto_Builder*) clearStartHour {
  result.hasStartHour = NO;
  result.startHour = 0;
  return self;
}
- (BOOL) hasEventDurationMinutes {
  return result.hasEventDurationMinutes;
}
- (int32_t) eventDurationMinutes {
  return result.eventDurationMinutes;
}
- (PersistentEventProto_Builder*) setEventDurationMinutes:(int32_t) value {
  result.hasEventDurationMinutes = YES;
  result.eventDurationMinutes = value;
  return self;
}
- (PersistentEventProto_Builder*) clearEventDurationMinutes {
  result.hasEventDurationMinutes = NO;
  result.eventDurationMinutes = 0;
  return self;
}
- (BOOL) hasTaskId {
  return result.hasTaskId;
}
- (int32_t) taskId {
  return result.taskId;
}
- (PersistentEventProto_Builder*) setTaskId:(int32_t) value {
  result.hasTaskId = YES;
  result.taskId = value;
  return self;
}
- (PersistentEventProto_Builder*) clearTaskId {
  result.hasTaskId = NO;
  result.taskId = 0;
  return self;
}
- (BOOL) hasCooldownMinutes {
  return result.hasCooldownMinutes;
}
- (int32_t) cooldownMinutes {
  return result.cooldownMinutes;
}
- (PersistentEventProto_Builder*) setCooldownMinutes:(int32_t) value {
  result.hasCooldownMinutes = YES;
  result.cooldownMinutes = value;
  return self;
}
- (PersistentEventProto_Builder*) clearCooldownMinutes {
  result.hasCooldownMinutes = NO;
  result.cooldownMinutes = 0;
  return self;
}
- (BOOL) hasType {
  return result.hasType;
}
- (PersistentEventProto_EventType) type {
  return result.type;
}
- (PersistentEventProto_Builder*) setType:(PersistentEventProto_EventType) value {
  result.hasType = YES;
  result.type = value;
  return self;
}
- (PersistentEventProto_Builder*) clearType {
  result.hasType = NO;
  result.type = PersistentEventProto_EventTypeEnhance;
  return self;
}
- (BOOL) hasMonsterElement {
  return result.hasMonsterElement;
}
- (Element) monsterElement {
  return result.monsterElement;
}
- (PersistentEventProto_Builder*) setMonsterElement:(Element) value {
  result.hasMonsterElement = YES;
  result.monsterElement = value;
  return self;
}
- (PersistentEventProto_Builder*) clearMonsterElement {
  result.hasMonsterElement = NO;
  result.monsterElement = ElementNoElement;
  return self;
}
@end

@interface UserPersistentEventProto ()
@property int32_t userId;
@property int32_t eventId;
@property int64_t coolDownStartTime;
@end

@implementation UserPersistentEventProto

- (BOOL) hasUserId {
  return !!hasUserId_;
}
- (void) setHasUserId:(BOOL) value {
  hasUserId_ = !!value;
}
@synthesize userId;
- (BOOL) hasEventId {
  return !!hasEventId_;
}
- (void) setHasEventId:(BOOL) value {
  hasEventId_ = !!value;
}
@synthesize eventId;
- (BOOL) hasCoolDownStartTime {
  return !!hasCoolDownStartTime_;
}
- (void) setHasCoolDownStartTime:(BOOL) value {
  hasCoolDownStartTime_ = !!value;
}
@synthesize coolDownStartTime;
- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.userId = 0;
    self.eventId = 0;
    self.coolDownStartTime = 0L;
  }
  return self;
}
static UserPersistentEventProto* defaultUserPersistentEventProtoInstance = nil;
+ (void) initialize {
  if (self == [UserPersistentEventProto class]) {
    defaultUserPersistentEventProtoInstance = [[UserPersistentEventProto alloc] init];
  }
}
+ (UserPersistentEventProto*) defaultInstance {
  return defaultUserPersistentEventProtoInstance;
}
- (UserPersistentEventProto*) defaultInstance {
  return defaultUserPersistentEventProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUserId) {
    [output writeInt32:1 value:self.userId];
  }
  if (self.hasEventId) {
    [output writeInt32:2 value:self.eventId];
  }
  if (self.hasCoolDownStartTime) {
    [output writeInt64:3 value:self.coolDownStartTime];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasUserId) {
    size += computeInt32Size(1, self.userId);
  }
  if (self.hasEventId) {
    size += computeInt32Size(2, self.eventId);
  }
  if (self.hasCoolDownStartTime) {
    size += computeInt64Size(3, self.coolDownStartTime);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (UserPersistentEventProto*) parseFromData:(NSData*) data {
  return (UserPersistentEventProto*)[[[UserPersistentEventProto builder] mergeFromData:data] build];
}
+ (UserPersistentEventProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UserPersistentEventProto*)[[[UserPersistentEventProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (UserPersistentEventProto*) parseFromInputStream:(NSInputStream*) input {
  return (UserPersistentEventProto*)[[[UserPersistentEventProto builder] mergeFromInputStream:input] build];
}
+ (UserPersistentEventProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UserPersistentEventProto*)[[[UserPersistentEventProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (UserPersistentEventProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (UserPersistentEventProto*)[[[UserPersistentEventProto builder] mergeFromCodedInputStream:input] build];
}
+ (UserPersistentEventProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UserPersistentEventProto*)[[[UserPersistentEventProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (UserPersistentEventProto_Builder*) builder {
  return [[[UserPersistentEventProto_Builder alloc] init] autorelease];
}
+ (UserPersistentEventProto_Builder*) builderWithPrototype:(UserPersistentEventProto*) prototype {
  return [[UserPersistentEventProto builder] mergeFrom:prototype];
}
- (UserPersistentEventProto_Builder*) builder {
  return [UserPersistentEventProto builder];
}
@end

@interface UserPersistentEventProto_Builder()
@property (retain) UserPersistentEventProto* result;
@end

@implementation UserPersistentEventProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[UserPersistentEventProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (UserPersistentEventProto_Builder*) clear {
  self.result = [[[UserPersistentEventProto alloc] init] autorelease];
  return self;
}
- (UserPersistentEventProto_Builder*) clone {
  return [UserPersistentEventProto builderWithPrototype:result];
}
- (UserPersistentEventProto*) defaultInstance {
  return [UserPersistentEventProto defaultInstance];
}
- (UserPersistentEventProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (UserPersistentEventProto*) buildPartial {
  UserPersistentEventProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (UserPersistentEventProto_Builder*) mergeFrom:(UserPersistentEventProto*) other {
  if (other == [UserPersistentEventProto defaultInstance]) {
    return self;
  }
  if (other.hasUserId) {
    [self setUserId:other.userId];
  }
  if (other.hasEventId) {
    [self setEventId:other.eventId];
  }
  if (other.hasCoolDownStartTime) {
    [self setCoolDownStartTime:other.coolDownStartTime];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (UserPersistentEventProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (UserPersistentEventProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setUserId:[input readInt32]];
        break;
      }
      case 16: {
        [self setEventId:[input readInt32]];
        break;
      }
      case 24: {
        [self setCoolDownStartTime:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasUserId {
  return result.hasUserId;
}
- (int32_t) userId {
  return result.userId;
}
- (UserPersistentEventProto_Builder*) setUserId:(int32_t) value {
  result.hasUserId = YES;
  result.userId = value;
  return self;
}
- (UserPersistentEventProto_Builder*) clearUserId {
  result.hasUserId = NO;
  result.userId = 0;
  return self;
}
- (BOOL) hasEventId {
  return result.hasEventId;
}
- (int32_t) eventId {
  return result.eventId;
}
- (UserPersistentEventProto_Builder*) setEventId:(int32_t) value {
  result.hasEventId = YES;
  result.eventId = value;
  return self;
}
- (UserPersistentEventProto_Builder*) clearEventId {
  result.hasEventId = NO;
  result.eventId = 0;
  return self;
}
- (BOOL) hasCoolDownStartTime {
  return result.hasCoolDownStartTime;
}
- (int64_t) coolDownStartTime {
  return result.coolDownStartTime;
}
- (UserPersistentEventProto_Builder*) setCoolDownStartTime:(int64_t) value {
  result.hasCoolDownStartTime = YES;
  result.coolDownStartTime = value;
  return self;
}
- (UserPersistentEventProto_Builder*) clearCoolDownStartTime {
  result.hasCoolDownStartTime = NO;
  result.coolDownStartTime = 0L;
  return self;
}
@end


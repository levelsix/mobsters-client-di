// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "EventQuest.pb.h"

@implementation EventQuestRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [EventQuestRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    [CityRoot registerAllExtensions:registry];
    [MonsterStuffRoot registerAllExtensions:registry];
    [QuestRoot registerAllExtensions:registry];
    [UserRoot registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface QuestAcceptRequestProto ()
@property (retain) MinimumUserProto* sender;
@property int32_t questId;
@end

@implementation QuestAcceptRequestProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value {
  hasSender_ = !!value;
}
@synthesize sender;
- (BOOL) hasQuestId {
  return !!hasQuestId_;
}
- (void) setHasQuestId:(BOOL) value {
  hasQuestId_ = !!value;
}
@synthesize questId;
- (void) dealloc {
  self.sender = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.questId = 0;
  }
  return self;
}
static QuestAcceptRequestProto* defaultQuestAcceptRequestProtoInstance = nil;
+ (void) initialize {
  if (self == [QuestAcceptRequestProto class]) {
    defaultQuestAcceptRequestProtoInstance = [[QuestAcceptRequestProto alloc] init];
  }
}
+ (QuestAcceptRequestProto*) defaultInstance {
  return defaultQuestAcceptRequestProtoInstance;
}
- (QuestAcceptRequestProto*) defaultInstance {
  return defaultQuestAcceptRequestProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasQuestId) {
    [output writeInt32:2 value:self.questId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSender) {
    size += computeMessageSize(1, self.sender);
  }
  if (self.hasQuestId) {
    size += computeInt32Size(2, self.questId);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (QuestAcceptRequestProto*) parseFromData:(NSData*) data {
  return (QuestAcceptRequestProto*)[[[QuestAcceptRequestProto builder] mergeFromData:data] build];
}
+ (QuestAcceptRequestProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (QuestAcceptRequestProto*)[[[QuestAcceptRequestProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (QuestAcceptRequestProto*) parseFromInputStream:(NSInputStream*) input {
  return (QuestAcceptRequestProto*)[[[QuestAcceptRequestProto builder] mergeFromInputStream:input] build];
}
+ (QuestAcceptRequestProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (QuestAcceptRequestProto*)[[[QuestAcceptRequestProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (QuestAcceptRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (QuestAcceptRequestProto*)[[[QuestAcceptRequestProto builder] mergeFromCodedInputStream:input] build];
}
+ (QuestAcceptRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (QuestAcceptRequestProto*)[[[QuestAcceptRequestProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (QuestAcceptRequestProto_Builder*) builder {
  return [[[QuestAcceptRequestProto_Builder alloc] init] autorelease];
}
+ (QuestAcceptRequestProto_Builder*) builderWithPrototype:(QuestAcceptRequestProto*) prototype {
  return [[QuestAcceptRequestProto builder] mergeFrom:prototype];
}
- (QuestAcceptRequestProto_Builder*) builder {
  return [QuestAcceptRequestProto builder];
}
@end

@interface QuestAcceptRequestProto_Builder()
@property (retain) QuestAcceptRequestProto* result;
@end

@implementation QuestAcceptRequestProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[QuestAcceptRequestProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (QuestAcceptRequestProto_Builder*) clear {
  self.result = [[[QuestAcceptRequestProto alloc] init] autorelease];
  return self;
}
- (QuestAcceptRequestProto_Builder*) clone {
  return [QuestAcceptRequestProto builderWithPrototype:result];
}
- (QuestAcceptRequestProto*) defaultInstance {
  return [QuestAcceptRequestProto defaultInstance];
}
- (QuestAcceptRequestProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (QuestAcceptRequestProto*) buildPartial {
  QuestAcceptRequestProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (QuestAcceptRequestProto_Builder*) mergeFrom:(QuestAcceptRequestProto*) other {
  if (other == [QuestAcceptRequestProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasQuestId) {
    [self setQuestId:other.questId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (QuestAcceptRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (QuestAcceptRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setQuestId:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (QuestAcceptRequestProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (QuestAcceptRequestProto_Builder*) setSenderBuilder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (QuestAcceptRequestProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (QuestAcceptRequestProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasQuestId {
  return result.hasQuestId;
}
- (int32_t) questId {
  return result.questId;
}
- (QuestAcceptRequestProto_Builder*) setQuestId:(int32_t) value {
  result.hasQuestId = YES;
  result.questId = value;
  return self;
}
- (QuestAcceptRequestProto_Builder*) clearQuestId {
  result.hasQuestId = NO;
  result.questId = 0;
  return self;
}
@end

@interface QuestAcceptResponseProto ()
@property (retain) MinimumUserProto* sender;
@property QuestAcceptResponseProto_QuestAcceptStatus status;
@end

@implementation QuestAcceptResponseProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value {
  hasSender_ = !!value;
}
@synthesize sender;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value {
  hasStatus_ = !!value;
}
@synthesize status;
- (void) dealloc {
  self.sender = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.status = QuestAcceptResponseProto_QuestAcceptStatusSuccess;
  }
  return self;
}
static QuestAcceptResponseProto* defaultQuestAcceptResponseProtoInstance = nil;
+ (void) initialize {
  if (self == [QuestAcceptResponseProto class]) {
    defaultQuestAcceptResponseProtoInstance = [[QuestAcceptResponseProto alloc] init];
  }
}
+ (QuestAcceptResponseProto*) defaultInstance {
  return defaultQuestAcceptResponseProtoInstance;
}
- (QuestAcceptResponseProto*) defaultInstance {
  return defaultQuestAcceptResponseProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasStatus) {
    [output writeEnum:2 value:self.status];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSender) {
    size += computeMessageSize(1, self.sender);
  }
  if (self.hasStatus) {
    size += computeEnumSize(2, self.status);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (QuestAcceptResponseProto*) parseFromData:(NSData*) data {
  return (QuestAcceptResponseProto*)[[[QuestAcceptResponseProto builder] mergeFromData:data] build];
}
+ (QuestAcceptResponseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (QuestAcceptResponseProto*)[[[QuestAcceptResponseProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (QuestAcceptResponseProto*) parseFromInputStream:(NSInputStream*) input {
  return (QuestAcceptResponseProto*)[[[QuestAcceptResponseProto builder] mergeFromInputStream:input] build];
}
+ (QuestAcceptResponseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (QuestAcceptResponseProto*)[[[QuestAcceptResponseProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (QuestAcceptResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (QuestAcceptResponseProto*)[[[QuestAcceptResponseProto builder] mergeFromCodedInputStream:input] build];
}
+ (QuestAcceptResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (QuestAcceptResponseProto*)[[[QuestAcceptResponseProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (QuestAcceptResponseProto_Builder*) builder {
  return [[[QuestAcceptResponseProto_Builder alloc] init] autorelease];
}
+ (QuestAcceptResponseProto_Builder*) builderWithPrototype:(QuestAcceptResponseProto*) prototype {
  return [[QuestAcceptResponseProto builder] mergeFrom:prototype];
}
- (QuestAcceptResponseProto_Builder*) builder {
  return [QuestAcceptResponseProto builder];
}
@end

BOOL QuestAcceptResponseProto_QuestAcceptStatusIsValidValue(QuestAcceptResponseProto_QuestAcceptStatus value) {
  switch (value) {
    case QuestAcceptResponseProto_QuestAcceptStatusSuccess:
    case QuestAcceptResponseProto_QuestAcceptStatusFailNotAvailToUser:
    case QuestAcceptResponseProto_QuestAcceptStatusFailAlreadyAccepted:
    case QuestAcceptResponseProto_QuestAcceptStatusFailOther:
      return YES;
    default:
      return NO;
  }
}
@interface QuestAcceptResponseProto_Builder()
@property (retain) QuestAcceptResponseProto* result;
@end

@implementation QuestAcceptResponseProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[QuestAcceptResponseProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (QuestAcceptResponseProto_Builder*) clear {
  self.result = [[[QuestAcceptResponseProto alloc] init] autorelease];
  return self;
}
- (QuestAcceptResponseProto_Builder*) clone {
  return [QuestAcceptResponseProto builderWithPrototype:result];
}
- (QuestAcceptResponseProto*) defaultInstance {
  return [QuestAcceptResponseProto defaultInstance];
}
- (QuestAcceptResponseProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (QuestAcceptResponseProto*) buildPartial {
  QuestAcceptResponseProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (QuestAcceptResponseProto_Builder*) mergeFrom:(QuestAcceptResponseProto*) other {
  if (other == [QuestAcceptResponseProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (QuestAcceptResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (QuestAcceptResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        int32_t value = [input readEnum];
        if (QuestAcceptResponseProto_QuestAcceptStatusIsValidValue(value)) {
          [self setStatus:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (QuestAcceptResponseProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (QuestAcceptResponseProto_Builder*) setSenderBuilder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (QuestAcceptResponseProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (QuestAcceptResponseProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (QuestAcceptResponseProto_QuestAcceptStatus) status {
  return result.status;
}
- (QuestAcceptResponseProto_Builder*) setStatus:(QuestAcceptResponseProto_QuestAcceptStatus) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (QuestAcceptResponseProto_Builder*) clearStatus {
  result.hasStatus = NO;
  result.status = QuestAcceptResponseProto_QuestAcceptStatusSuccess;
  return self;
}
@end

@interface QuestProgressRequestProto ()
@property (retain) MinimumUserProto* sender;
@property int32_t questId;
@property BOOL isComplete;
@property (retain) NSMutableArray* mutableUserQuestJobsList;
@property (retain) NSMutableArray* mutableDeleteUserMonsterIdsList;
@end

@implementation QuestProgressRequestProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value {
  hasSender_ = !!value;
}
@synthesize sender;
- (BOOL) hasQuestId {
  return !!hasQuestId_;
}
- (void) setHasQuestId:(BOOL) value {
  hasQuestId_ = !!value;
}
@synthesize questId;
- (BOOL) hasIsComplete {
  return !!hasIsComplete_;
}
- (void) setHasIsComplete:(BOOL) value {
  hasIsComplete_ = !!value;
}
- (BOOL) isComplete {
  return !!isComplete_;
}
- (void) setIsComplete:(BOOL) value {
  isComplete_ = !!value;
}
@synthesize mutableUserQuestJobsList;
@synthesize mutableDeleteUserMonsterIdsList;
- (void) dealloc {
  self.sender = nil;
  self.mutableUserQuestJobsList = nil;
  self.mutableDeleteUserMonsterIdsList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.questId = 0;
    self.isComplete = NO;
  }
  return self;
}
static QuestProgressRequestProto* defaultQuestProgressRequestProtoInstance = nil;
+ (void) initialize {
  if (self == [QuestProgressRequestProto class]) {
    defaultQuestProgressRequestProtoInstance = [[QuestProgressRequestProto alloc] init];
  }
}
+ (QuestProgressRequestProto*) defaultInstance {
  return defaultQuestProgressRequestProtoInstance;
}
- (QuestProgressRequestProto*) defaultInstance {
  return defaultQuestProgressRequestProtoInstance;
}
- (NSArray*) userQuestJobsList {
  return mutableUserQuestJobsList;
}
- (UserQuestJobProto*) userQuestJobsAtIndex:(int32_t) index {
  id value = [mutableUserQuestJobsList objectAtIndex:index];
  return value;
}
- (NSArray*) deleteUserMonsterIdsList {
  return mutableDeleteUserMonsterIdsList;
}
- (int64_t) deleteUserMonsterIdsAtIndex:(int32_t) index {
  id value = [mutableDeleteUserMonsterIdsList objectAtIndex:index];
  return [value longLongValue];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasQuestId) {
    [output writeInt32:2 value:self.questId];
  }
  if (self.hasIsComplete) {
    [output writeBool:3 value:self.isComplete];
  }
  for (UserQuestJobProto* element in self.userQuestJobsList) {
    [output writeMessage:4 value:element];
  }
  for (NSNumber* value in self.mutableDeleteUserMonsterIdsList) {
    [output writeInt64:5 value:[value longLongValue]];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSender) {
    size += computeMessageSize(1, self.sender);
  }
  if (self.hasQuestId) {
    size += computeInt32Size(2, self.questId);
  }
  if (self.hasIsComplete) {
    size += computeBoolSize(3, self.isComplete);
  }
  for (UserQuestJobProto* element in self.userQuestJobsList) {
    size += computeMessageSize(4, element);
  }
  {
    int32_t dataSize = 0;
    for (NSNumber* value in self.mutableDeleteUserMonsterIdsList) {
      dataSize += computeInt64SizeNoTag([value longLongValue]);
    }
    size += dataSize;
    size += 1 * self.mutableDeleteUserMonsterIdsList.count;
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (QuestProgressRequestProto*) parseFromData:(NSData*) data {
  return (QuestProgressRequestProto*)[[[QuestProgressRequestProto builder] mergeFromData:data] build];
}
+ (QuestProgressRequestProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (QuestProgressRequestProto*)[[[QuestProgressRequestProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (QuestProgressRequestProto*) parseFromInputStream:(NSInputStream*) input {
  return (QuestProgressRequestProto*)[[[QuestProgressRequestProto builder] mergeFromInputStream:input] build];
}
+ (QuestProgressRequestProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (QuestProgressRequestProto*)[[[QuestProgressRequestProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (QuestProgressRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (QuestProgressRequestProto*)[[[QuestProgressRequestProto builder] mergeFromCodedInputStream:input] build];
}
+ (QuestProgressRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (QuestProgressRequestProto*)[[[QuestProgressRequestProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (QuestProgressRequestProto_Builder*) builder {
  return [[[QuestProgressRequestProto_Builder alloc] init] autorelease];
}
+ (QuestProgressRequestProto_Builder*) builderWithPrototype:(QuestProgressRequestProto*) prototype {
  return [[QuestProgressRequestProto builder] mergeFrom:prototype];
}
- (QuestProgressRequestProto_Builder*) builder {
  return [QuestProgressRequestProto builder];
}
@end

@interface QuestProgressRequestProto_Builder()
@property (retain) QuestProgressRequestProto* result;
@end

@implementation QuestProgressRequestProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[QuestProgressRequestProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (QuestProgressRequestProto_Builder*) clear {
  self.result = [[[QuestProgressRequestProto alloc] init] autorelease];
  return self;
}
- (QuestProgressRequestProto_Builder*) clone {
  return [QuestProgressRequestProto builderWithPrototype:result];
}
- (QuestProgressRequestProto*) defaultInstance {
  return [QuestProgressRequestProto defaultInstance];
}
- (QuestProgressRequestProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (QuestProgressRequestProto*) buildPartial {
  QuestProgressRequestProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (QuestProgressRequestProto_Builder*) mergeFrom:(QuestProgressRequestProto*) other {
  if (other == [QuestProgressRequestProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasQuestId) {
    [self setQuestId:other.questId];
  }
  if (other.hasIsComplete) {
    [self setIsComplete:other.isComplete];
  }
  if (other.mutableUserQuestJobsList.count > 0) {
    if (result.mutableUserQuestJobsList == nil) {
      result.mutableUserQuestJobsList = [NSMutableArray array];
    }
    [result.mutableUserQuestJobsList addObjectsFromArray:other.mutableUserQuestJobsList];
  }
  if (other.mutableDeleteUserMonsterIdsList.count > 0) {
    if (result.mutableDeleteUserMonsterIdsList == nil) {
      result.mutableDeleteUserMonsterIdsList = [NSMutableArray array];
    }
    [result.mutableDeleteUserMonsterIdsList addObjectsFromArray:other.mutableDeleteUserMonsterIdsList];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (QuestProgressRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (QuestProgressRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setQuestId:[input readInt32]];
        break;
      }
      case 24: {
        [self setIsComplete:[input readBool]];
        break;
      }
      case 34: {
        UserQuestJobProto_Builder* subBuilder = [UserQuestJobProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addUserQuestJobs:[subBuilder buildPartial]];
        break;
      }
      case 40: {
        [self addDeleteUserMonsterIds:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (QuestProgressRequestProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (QuestProgressRequestProto_Builder*) setSenderBuilder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (QuestProgressRequestProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (QuestProgressRequestProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasQuestId {
  return result.hasQuestId;
}
- (int32_t) questId {
  return result.questId;
}
- (QuestProgressRequestProto_Builder*) setQuestId:(int32_t) value {
  result.hasQuestId = YES;
  result.questId = value;
  return self;
}
- (QuestProgressRequestProto_Builder*) clearQuestId {
  result.hasQuestId = NO;
  result.questId = 0;
  return self;
}
- (BOOL) hasIsComplete {
  return result.hasIsComplete;
}
- (BOOL) isComplete {
  return result.isComplete;
}
- (QuestProgressRequestProto_Builder*) setIsComplete:(BOOL) value {
  result.hasIsComplete = YES;
  result.isComplete = value;
  return self;
}
- (QuestProgressRequestProto_Builder*) clearIsComplete {
  result.hasIsComplete = NO;
  result.isComplete = NO;
  return self;
}
- (NSArray*) userQuestJobsList {
  if (result.mutableUserQuestJobsList == nil) { return [NSArray array]; }
  return result.mutableUserQuestJobsList;
}
- (UserQuestJobProto*) userQuestJobsAtIndex:(int32_t) index {
  return [result userQuestJobsAtIndex:index];
}
- (QuestProgressRequestProto_Builder*) replaceUserQuestJobsAtIndex:(int32_t) index with:(UserQuestJobProto*) value {
  [result.mutableUserQuestJobsList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (QuestProgressRequestProto_Builder*) addAllUserQuestJobs:(NSArray*) values {
  if (result.mutableUserQuestJobsList == nil) {
    result.mutableUserQuestJobsList = [NSMutableArray array];
  }
  [result.mutableUserQuestJobsList addObjectsFromArray:values];
  return self;
}
- (QuestProgressRequestProto_Builder*) clearUserQuestJobsList {
  result.mutableUserQuestJobsList = nil;
  return self;
}
- (QuestProgressRequestProto_Builder*) addUserQuestJobs:(UserQuestJobProto*) value {
  if (result.mutableUserQuestJobsList == nil) {
    result.mutableUserQuestJobsList = [NSMutableArray array];
  }
  [result.mutableUserQuestJobsList addObject:value];
  return self;
}
- (NSArray*) deleteUserMonsterIdsList {
  if (result.mutableDeleteUserMonsterIdsList == nil) {
    return [NSArray array];
  }
  return result.mutableDeleteUserMonsterIdsList;
}
- (int64_t) deleteUserMonsterIdsAtIndex:(int32_t) index {
  return [result deleteUserMonsterIdsAtIndex:index];
}
- (QuestProgressRequestProto_Builder*) replaceDeleteUserMonsterIdsAtIndex:(int32_t) index with:(int64_t) value {
  [result.mutableDeleteUserMonsterIdsList replaceObjectAtIndex:index withObject:[NSNumber numberWithLongLong:value]];
  return self;
}
- (QuestProgressRequestProto_Builder*) addDeleteUserMonsterIds:(int64_t) value {
  if (result.mutableDeleteUserMonsterIdsList == nil) {
    result.mutableDeleteUserMonsterIdsList = [NSMutableArray array];
  }
  [result.mutableDeleteUserMonsterIdsList addObject:[NSNumber numberWithLongLong:value]];
  return self;
}
- (QuestProgressRequestProto_Builder*) addAllDeleteUserMonsterIds:(NSArray*) values {
  if (result.mutableDeleteUserMonsterIdsList == nil) {
    result.mutableDeleteUserMonsterIdsList = [NSMutableArray array];
  }
  [result.mutableDeleteUserMonsterIdsList addObjectsFromArray:values];
  return self;
}
- (QuestProgressRequestProto_Builder*) clearDeleteUserMonsterIdsList {
  result.mutableDeleteUserMonsterIdsList = nil;
  return self;
}
@end

@interface QuestProgressResponseProto ()
@property (retain) MinimumUserProto* sender;
@property QuestProgressResponseProto_QuestProgressStatus status;
@end

@implementation QuestProgressResponseProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value {
  hasSender_ = !!value;
}
@synthesize sender;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value {
  hasStatus_ = !!value;
}
@synthesize status;
- (void) dealloc {
  self.sender = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.status = QuestProgressResponseProto_QuestProgressStatusSuccess;
  }
  return self;
}
static QuestProgressResponseProto* defaultQuestProgressResponseProtoInstance = nil;
+ (void) initialize {
  if (self == [QuestProgressResponseProto class]) {
    defaultQuestProgressResponseProtoInstance = [[QuestProgressResponseProto alloc] init];
  }
}
+ (QuestProgressResponseProto*) defaultInstance {
  return defaultQuestProgressResponseProtoInstance;
}
- (QuestProgressResponseProto*) defaultInstance {
  return defaultQuestProgressResponseProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasStatus) {
    [output writeEnum:2 value:self.status];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSender) {
    size += computeMessageSize(1, self.sender);
  }
  if (self.hasStatus) {
    size += computeEnumSize(2, self.status);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (QuestProgressResponseProto*) parseFromData:(NSData*) data {
  return (QuestProgressResponseProto*)[[[QuestProgressResponseProto builder] mergeFromData:data] build];
}
+ (QuestProgressResponseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (QuestProgressResponseProto*)[[[QuestProgressResponseProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (QuestProgressResponseProto*) parseFromInputStream:(NSInputStream*) input {
  return (QuestProgressResponseProto*)[[[QuestProgressResponseProto builder] mergeFromInputStream:input] build];
}
+ (QuestProgressResponseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (QuestProgressResponseProto*)[[[QuestProgressResponseProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (QuestProgressResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (QuestProgressResponseProto*)[[[QuestProgressResponseProto builder] mergeFromCodedInputStream:input] build];
}
+ (QuestProgressResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (QuestProgressResponseProto*)[[[QuestProgressResponseProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (QuestProgressResponseProto_Builder*) builder {
  return [[[QuestProgressResponseProto_Builder alloc] init] autorelease];
}
+ (QuestProgressResponseProto_Builder*) builderWithPrototype:(QuestProgressResponseProto*) prototype {
  return [[QuestProgressResponseProto builder] mergeFrom:prototype];
}
- (QuestProgressResponseProto_Builder*) builder {
  return [QuestProgressResponseProto builder];
}
@end

BOOL QuestProgressResponseProto_QuestProgressStatusIsValidValue(QuestProgressResponseProto_QuestProgressStatus value) {
  switch (value) {
    case QuestProgressResponseProto_QuestProgressStatusSuccess:
    case QuestProgressResponseProto_QuestProgressStatusFailNoQuestExists:
    case QuestProgressResponseProto_QuestProgressStatusFailDeleteAmountDoesNotMatchQuest:
    case QuestProgressResponseProto_QuestProgressStatusFailNonexistentUserMonsters:
    case QuestProgressResponseProto_QuestProgressStatusFailIncompleteUserMonsters:
    case QuestProgressResponseProto_QuestProgressStatusFailQuestJobIncomplete:
    case QuestProgressResponseProto_QuestProgressStatusFailOther:
      return YES;
    default:
      return NO;
  }
}
@interface QuestProgressResponseProto_Builder()
@property (retain) QuestProgressResponseProto* result;
@end

@implementation QuestProgressResponseProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[QuestProgressResponseProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (QuestProgressResponseProto_Builder*) clear {
  self.result = [[[QuestProgressResponseProto alloc] init] autorelease];
  return self;
}
- (QuestProgressResponseProto_Builder*) clone {
  return [QuestProgressResponseProto builderWithPrototype:result];
}
- (QuestProgressResponseProto*) defaultInstance {
  return [QuestProgressResponseProto defaultInstance];
}
- (QuestProgressResponseProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (QuestProgressResponseProto*) buildPartial {
  QuestProgressResponseProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (QuestProgressResponseProto_Builder*) mergeFrom:(QuestProgressResponseProto*) other {
  if (other == [QuestProgressResponseProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (QuestProgressResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (QuestProgressResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        int32_t value = [input readEnum];
        if (QuestProgressResponseProto_QuestProgressStatusIsValidValue(value)) {
          [self setStatus:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (QuestProgressResponseProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (QuestProgressResponseProto_Builder*) setSenderBuilder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (QuestProgressResponseProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (QuestProgressResponseProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (QuestProgressResponseProto_QuestProgressStatus) status {
  return result.status;
}
- (QuestProgressResponseProto_Builder*) setStatus:(QuestProgressResponseProto_QuestProgressStatus) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (QuestProgressResponseProto_Builder*) clearStatus {
  result.hasStatus = NO;
  result.status = QuestProgressResponseProto_QuestProgressStatusSuccess;
  return self;
}
@end

@interface QuestRedeemRequestProto ()
@property (retain) MinimumUserProtoWithMaxResources* sender;
@property int32_t questId;
@end

@implementation QuestRedeemRequestProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value {
  hasSender_ = !!value;
}
@synthesize sender;
- (BOOL) hasQuestId {
  return !!hasQuestId_;
}
- (void) setHasQuestId:(BOOL) value {
  hasQuestId_ = !!value;
}
@synthesize questId;
- (void) dealloc {
  self.sender = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProtoWithMaxResources defaultInstance];
    self.questId = 0;
  }
  return self;
}
static QuestRedeemRequestProto* defaultQuestRedeemRequestProtoInstance = nil;
+ (void) initialize {
  if (self == [QuestRedeemRequestProto class]) {
    defaultQuestRedeemRequestProtoInstance = [[QuestRedeemRequestProto alloc] init];
  }
}
+ (QuestRedeemRequestProto*) defaultInstance {
  return defaultQuestRedeemRequestProtoInstance;
}
- (QuestRedeemRequestProto*) defaultInstance {
  return defaultQuestRedeemRequestProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasQuestId) {
    [output writeInt32:2 value:self.questId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSender) {
    size += computeMessageSize(1, self.sender);
  }
  if (self.hasQuestId) {
    size += computeInt32Size(2, self.questId);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (QuestRedeemRequestProto*) parseFromData:(NSData*) data {
  return (QuestRedeemRequestProto*)[[[QuestRedeemRequestProto builder] mergeFromData:data] build];
}
+ (QuestRedeemRequestProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (QuestRedeemRequestProto*)[[[QuestRedeemRequestProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (QuestRedeemRequestProto*) parseFromInputStream:(NSInputStream*) input {
  return (QuestRedeemRequestProto*)[[[QuestRedeemRequestProto builder] mergeFromInputStream:input] build];
}
+ (QuestRedeemRequestProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (QuestRedeemRequestProto*)[[[QuestRedeemRequestProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (QuestRedeemRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (QuestRedeemRequestProto*)[[[QuestRedeemRequestProto builder] mergeFromCodedInputStream:input] build];
}
+ (QuestRedeemRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (QuestRedeemRequestProto*)[[[QuestRedeemRequestProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (QuestRedeemRequestProto_Builder*) builder {
  return [[[QuestRedeemRequestProto_Builder alloc] init] autorelease];
}
+ (QuestRedeemRequestProto_Builder*) builderWithPrototype:(QuestRedeemRequestProto*) prototype {
  return [[QuestRedeemRequestProto builder] mergeFrom:prototype];
}
- (QuestRedeemRequestProto_Builder*) builder {
  return [QuestRedeemRequestProto builder];
}
@end

@interface QuestRedeemRequestProto_Builder()
@property (retain) QuestRedeemRequestProto* result;
@end

@implementation QuestRedeemRequestProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[QuestRedeemRequestProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (QuestRedeemRequestProto_Builder*) clear {
  self.result = [[[QuestRedeemRequestProto alloc] init] autorelease];
  return self;
}
- (QuestRedeemRequestProto_Builder*) clone {
  return [QuestRedeemRequestProto builderWithPrototype:result];
}
- (QuestRedeemRequestProto*) defaultInstance {
  return [QuestRedeemRequestProto defaultInstance];
}
- (QuestRedeemRequestProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (QuestRedeemRequestProto*) buildPartial {
  QuestRedeemRequestProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (QuestRedeemRequestProto_Builder*) mergeFrom:(QuestRedeemRequestProto*) other {
  if (other == [QuestRedeemRequestProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasQuestId) {
    [self setQuestId:other.questId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (QuestRedeemRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (QuestRedeemRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProtoWithMaxResources_Builder* subBuilder = [MinimumUserProtoWithMaxResources builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setQuestId:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProtoWithMaxResources*) sender {
  return result.sender;
}
- (QuestRedeemRequestProto_Builder*) setSender:(MinimumUserProtoWithMaxResources*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (QuestRedeemRequestProto_Builder*) setSenderBuilder:(MinimumUserProtoWithMaxResources_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (QuestRedeemRequestProto_Builder*) mergeSender:(MinimumUserProtoWithMaxResources*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProtoWithMaxResources defaultInstance]) {
    result.sender =
      [[[MinimumUserProtoWithMaxResources builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (QuestRedeemRequestProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProtoWithMaxResources defaultInstance];
  return self;
}
- (BOOL) hasQuestId {
  return result.hasQuestId;
}
- (int32_t) questId {
  return result.questId;
}
- (QuestRedeemRequestProto_Builder*) setQuestId:(int32_t) value {
  result.hasQuestId = YES;
  result.questId = value;
  return self;
}
- (QuestRedeemRequestProto_Builder*) clearQuestId {
  result.hasQuestId = NO;
  result.questId = 0;
  return self;
}
@end

@interface QuestRedeemResponseProto ()
@property (retain) MinimumUserProtoWithMaxResources* sender;
@property (retain) NSMutableArray* mutableNewlyAvailableQuestsList;
@property QuestRedeemResponseProto_QuestRedeemStatus status;
@property (retain) FullUserMonsterProto* fump;
@property int32_t questId;
@end

@implementation QuestRedeemResponseProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value {
  hasSender_ = !!value;
}
@synthesize sender;
@synthesize mutableNewlyAvailableQuestsList;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value {
  hasStatus_ = !!value;
}
@synthesize status;
- (BOOL) hasFump {
  return !!hasFump_;
}
- (void) setHasFump:(BOOL) value {
  hasFump_ = !!value;
}
@synthesize fump;
- (BOOL) hasQuestId {
  return !!hasQuestId_;
}
- (void) setHasQuestId:(BOOL) value {
  hasQuestId_ = !!value;
}
@synthesize questId;
- (void) dealloc {
  self.sender = nil;
  self.mutableNewlyAvailableQuestsList = nil;
  self.fump = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProtoWithMaxResources defaultInstance];
    self.status = QuestRedeemResponseProto_QuestRedeemStatusSuccess;
    self.fump = [FullUserMonsterProto defaultInstance];
    self.questId = 0;
  }
  return self;
}
static QuestRedeemResponseProto* defaultQuestRedeemResponseProtoInstance = nil;
+ (void) initialize {
  if (self == [QuestRedeemResponseProto class]) {
    defaultQuestRedeemResponseProtoInstance = [[QuestRedeemResponseProto alloc] init];
  }
}
+ (QuestRedeemResponseProto*) defaultInstance {
  return defaultQuestRedeemResponseProtoInstance;
}
- (QuestRedeemResponseProto*) defaultInstance {
  return defaultQuestRedeemResponseProtoInstance;
}
- (NSArray*) newlyAvailableQuestsList {
  return mutableNewlyAvailableQuestsList;
}
- (FullQuestProto*) newlyAvailableQuestsAtIndex:(int32_t) index {
  id value = [mutableNewlyAvailableQuestsList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  for (FullQuestProto* element in self.newlyAvailableQuestsList) {
    [output writeMessage:2 value:element];
  }
  if (self.hasStatus) {
    [output writeEnum:3 value:self.status];
  }
  if (self.hasFump) {
    [output writeMessage:4 value:self.fump];
  }
  if (self.hasQuestId) {
    [output writeInt32:5 value:self.questId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSender) {
    size += computeMessageSize(1, self.sender);
  }
  for (FullQuestProto* element in self.newlyAvailableQuestsList) {
    size += computeMessageSize(2, element);
  }
  if (self.hasStatus) {
    size += computeEnumSize(3, self.status);
  }
  if (self.hasFump) {
    size += computeMessageSize(4, self.fump);
  }
  if (self.hasQuestId) {
    size += computeInt32Size(5, self.questId);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (QuestRedeemResponseProto*) parseFromData:(NSData*) data {
  return (QuestRedeemResponseProto*)[[[QuestRedeemResponseProto builder] mergeFromData:data] build];
}
+ (QuestRedeemResponseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (QuestRedeemResponseProto*)[[[QuestRedeemResponseProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (QuestRedeemResponseProto*) parseFromInputStream:(NSInputStream*) input {
  return (QuestRedeemResponseProto*)[[[QuestRedeemResponseProto builder] mergeFromInputStream:input] build];
}
+ (QuestRedeemResponseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (QuestRedeemResponseProto*)[[[QuestRedeemResponseProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (QuestRedeemResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (QuestRedeemResponseProto*)[[[QuestRedeemResponseProto builder] mergeFromCodedInputStream:input] build];
}
+ (QuestRedeemResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (QuestRedeemResponseProto*)[[[QuestRedeemResponseProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (QuestRedeemResponseProto_Builder*) builder {
  return [[[QuestRedeemResponseProto_Builder alloc] init] autorelease];
}
+ (QuestRedeemResponseProto_Builder*) builderWithPrototype:(QuestRedeemResponseProto*) prototype {
  return [[QuestRedeemResponseProto builder] mergeFrom:prototype];
}
- (QuestRedeemResponseProto_Builder*) builder {
  return [QuestRedeemResponseProto builder];
}
@end

BOOL QuestRedeemResponseProto_QuestRedeemStatusIsValidValue(QuestRedeemResponseProto_QuestRedeemStatus value) {
  switch (value) {
    case QuestRedeemResponseProto_QuestRedeemStatusSuccess:
    case QuestRedeemResponseProto_QuestRedeemStatusFailNotComplete:
    case QuestRedeemResponseProto_QuestRedeemStatusFailOther:
      return YES;
    default:
      return NO;
  }
}
@interface QuestRedeemResponseProto_Builder()
@property (retain) QuestRedeemResponseProto* result;
@end

@implementation QuestRedeemResponseProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[QuestRedeemResponseProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (QuestRedeemResponseProto_Builder*) clear {
  self.result = [[[QuestRedeemResponseProto alloc] init] autorelease];
  return self;
}
- (QuestRedeemResponseProto_Builder*) clone {
  return [QuestRedeemResponseProto builderWithPrototype:result];
}
- (QuestRedeemResponseProto*) defaultInstance {
  return [QuestRedeemResponseProto defaultInstance];
}
- (QuestRedeemResponseProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (QuestRedeemResponseProto*) buildPartial {
  QuestRedeemResponseProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (QuestRedeemResponseProto_Builder*) mergeFrom:(QuestRedeemResponseProto*) other {
  if (other == [QuestRedeemResponseProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.mutableNewlyAvailableQuestsList.count > 0) {
    if (result.mutableNewlyAvailableQuestsList == nil) {
      result.mutableNewlyAvailableQuestsList = [NSMutableArray array];
    }
    [result.mutableNewlyAvailableQuestsList addObjectsFromArray:other.mutableNewlyAvailableQuestsList];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  if (other.hasFump) {
    [self mergeFump:other.fump];
  }
  if (other.hasQuestId) {
    [self setQuestId:other.questId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (QuestRedeemResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (QuestRedeemResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProtoWithMaxResources_Builder* subBuilder = [MinimumUserProtoWithMaxResources builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        FullQuestProto_Builder* subBuilder = [FullQuestProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addNewlyAvailableQuests:[subBuilder buildPartial]];
        break;
      }
      case 24: {
        int32_t value = [input readEnum];
        if (QuestRedeemResponseProto_QuestRedeemStatusIsValidValue(value)) {
          [self setStatus:value];
        } else {
          [unknownFields mergeVarintField:3 value:value];
        }
        break;
      }
      case 34: {
        FullUserMonsterProto_Builder* subBuilder = [FullUserMonsterProto builder];
        if (self.hasFump) {
          [subBuilder mergeFrom:self.fump];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setFump:[subBuilder buildPartial]];
        break;
      }
      case 40: {
        [self setQuestId:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProtoWithMaxResources*) sender {
  return result.sender;
}
- (QuestRedeemResponseProto_Builder*) setSender:(MinimumUserProtoWithMaxResources*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (QuestRedeemResponseProto_Builder*) setSenderBuilder:(MinimumUserProtoWithMaxResources_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (QuestRedeemResponseProto_Builder*) mergeSender:(MinimumUserProtoWithMaxResources*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProtoWithMaxResources defaultInstance]) {
    result.sender =
      [[[MinimumUserProtoWithMaxResources builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (QuestRedeemResponseProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProtoWithMaxResources defaultInstance];
  return self;
}
- (NSArray*) newlyAvailableQuestsList {
  if (result.mutableNewlyAvailableQuestsList == nil) { return [NSArray array]; }
  return result.mutableNewlyAvailableQuestsList;
}
- (FullQuestProto*) newlyAvailableQuestsAtIndex:(int32_t) index {
  return [result newlyAvailableQuestsAtIndex:index];
}
- (QuestRedeemResponseProto_Builder*) replaceNewlyAvailableQuestsAtIndex:(int32_t) index with:(FullQuestProto*) value {
  [result.mutableNewlyAvailableQuestsList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (QuestRedeemResponseProto_Builder*) addAllNewlyAvailableQuests:(NSArray*) values {
  if (result.mutableNewlyAvailableQuestsList == nil) {
    result.mutableNewlyAvailableQuestsList = [NSMutableArray array];
  }
  [result.mutableNewlyAvailableQuestsList addObjectsFromArray:values];
  return self;
}
- (QuestRedeemResponseProto_Builder*) clearNewlyAvailableQuestsList {
  result.mutableNewlyAvailableQuestsList = nil;
  return self;
}
- (QuestRedeemResponseProto_Builder*) addNewlyAvailableQuests:(FullQuestProto*) value {
  if (result.mutableNewlyAvailableQuestsList == nil) {
    result.mutableNewlyAvailableQuestsList = [NSMutableArray array];
  }
  [result.mutableNewlyAvailableQuestsList addObject:value];
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (QuestRedeemResponseProto_QuestRedeemStatus) status {
  return result.status;
}
- (QuestRedeemResponseProto_Builder*) setStatus:(QuestRedeemResponseProto_QuestRedeemStatus) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (QuestRedeemResponseProto_Builder*) clearStatus {
  result.hasStatus = NO;
  result.status = QuestRedeemResponseProto_QuestRedeemStatusSuccess;
  return self;
}
- (BOOL) hasFump {
  return result.hasFump;
}
- (FullUserMonsterProto*) fump {
  return result.fump;
}
- (QuestRedeemResponseProto_Builder*) setFump:(FullUserMonsterProto*) value {
  result.hasFump = YES;
  result.fump = value;
  return self;
}
- (QuestRedeemResponseProto_Builder*) setFumpBuilder:(FullUserMonsterProto_Builder*) builderForValue {
  return [self setFump:[builderForValue build]];
}
- (QuestRedeemResponseProto_Builder*) mergeFump:(FullUserMonsterProto*) value {
  if (result.hasFump &&
      result.fump != [FullUserMonsterProto defaultInstance]) {
    result.fump =
      [[[FullUserMonsterProto builderWithPrototype:result.fump] mergeFrom:value] buildPartial];
  } else {
    result.fump = value;
  }
  result.hasFump = YES;
  return self;
}
- (QuestRedeemResponseProto_Builder*) clearFump {
  result.hasFump = NO;
  result.fump = [FullUserMonsterProto defaultInstance];
  return self;
}
- (BOOL) hasQuestId {
  return result.hasQuestId;
}
- (int32_t) questId {
  return result.questId;
}
- (QuestRedeemResponseProto_Builder*) setQuestId:(int32_t) value {
  result.hasQuestId = YES;
  result.questId = value;
  return self;
}
- (QuestRedeemResponseProto_Builder*) clearQuestId {
  result.hasQuestId = NO;
  result.questId = 0;
  return self;
}
@end


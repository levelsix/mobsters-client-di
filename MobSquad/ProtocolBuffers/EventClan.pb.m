// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "EventClan.pb.h"

@implementation EventClanRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [EventClanRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    [ClanRoot registerAllExtensions:registry];
    [MonsterStuffRoot registerAllExtensions:registry];
    [UserRoot registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface CreateClanRequestProto ()
@property (retain) MinimumUserProto* sender;
@property (retain) NSString* name;
@property (retain) NSString* tag;
@property BOOL requestToJoinClanRequired;
@property (retain) NSString* description;
@property int32_t clanIconId;
@property int32_t gemsSpent;
@property int32_t cashChange;
@end

@implementation CreateClanRequestProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value {
  hasSender_ = !!value;
}
@synthesize sender;
- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) value {
  hasName_ = !!value;
}
@synthesize name;
- (BOOL) hasTag {
  return !!hasTag_;
}
- (void) setHasTag:(BOOL) value {
  hasTag_ = !!value;
}
@synthesize tag;
- (BOOL) hasRequestToJoinClanRequired {
  return !!hasRequestToJoinClanRequired_;
}
- (void) setHasRequestToJoinClanRequired:(BOOL) value {
  hasRequestToJoinClanRequired_ = !!value;
}
- (BOOL) requestToJoinClanRequired {
  return !!requestToJoinClanRequired_;
}
- (void) setRequestToJoinClanRequired:(BOOL) value {
  requestToJoinClanRequired_ = !!value;
}
- (BOOL) hasDescription {
  return !!hasDescription_;
}
- (void) setHasDescription:(BOOL) value {
  hasDescription_ = !!value;
}
@synthesize description;
- (BOOL) hasClanIconId {
  return !!hasClanIconId_;
}
- (void) setHasClanIconId:(BOOL) value {
  hasClanIconId_ = !!value;
}
@synthesize clanIconId;
- (BOOL) hasGemsSpent {
  return !!hasGemsSpent_;
}
- (void) setHasGemsSpent:(BOOL) value {
  hasGemsSpent_ = !!value;
}
@synthesize gemsSpent;
- (BOOL) hasCashChange {
  return !!hasCashChange_;
}
- (void) setHasCashChange:(BOOL) value {
  hasCashChange_ = !!value;
}
@synthesize cashChange;
- (void) dealloc {
  self.sender = nil;
  self.name = nil;
  self.tag = nil;
  self.description = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.name = @"";
    self.tag = @"";
    self.requestToJoinClanRequired = NO;
    self.description = @"";
    self.clanIconId = 0;
    self.gemsSpent = 0;
    self.cashChange = 0;
  }
  return self;
}
static CreateClanRequestProto* defaultCreateClanRequestProtoInstance = nil;
+ (void) initialize {
  if (self == [CreateClanRequestProto class]) {
    defaultCreateClanRequestProtoInstance = [[CreateClanRequestProto alloc] init];
  }
}
+ (CreateClanRequestProto*) defaultInstance {
  return defaultCreateClanRequestProtoInstance;
}
- (CreateClanRequestProto*) defaultInstance {
  return defaultCreateClanRequestProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasName) {
    [output writeString:2 value:self.name];
  }
  if (self.hasTag) {
    [output writeString:3 value:self.tag];
  }
  if (self.hasRequestToJoinClanRequired) {
    [output writeBool:4 value:self.requestToJoinClanRequired];
  }
  if (self.hasDescription) {
    [output writeString:5 value:self.description];
  }
  if (self.hasClanIconId) {
    [output writeInt32:6 value:self.clanIconId];
  }
  if (self.hasGemsSpent) {
    [output writeInt32:7 value:self.gemsSpent];
  }
  if (self.hasCashChange) {
    [output writeSInt32:8 value:self.cashChange];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSender) {
    size += computeMessageSize(1, self.sender);
  }
  if (self.hasName) {
    size += computeStringSize(2, self.name);
  }
  if (self.hasTag) {
    size += computeStringSize(3, self.tag);
  }
  if (self.hasRequestToJoinClanRequired) {
    size += computeBoolSize(4, self.requestToJoinClanRequired);
  }
  if (self.hasDescription) {
    size += computeStringSize(5, self.description);
  }
  if (self.hasClanIconId) {
    size += computeInt32Size(6, self.clanIconId);
  }
  if (self.hasGemsSpent) {
    size += computeInt32Size(7, self.gemsSpent);
  }
  if (self.hasCashChange) {
    size += computeSInt32Size(8, self.cashChange);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (CreateClanRequestProto*) parseFromData:(NSData*) data {
  return (CreateClanRequestProto*)[[[CreateClanRequestProto builder] mergeFromData:data] build];
}
+ (CreateClanRequestProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CreateClanRequestProto*)[[[CreateClanRequestProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CreateClanRequestProto*) parseFromInputStream:(NSInputStream*) input {
  return (CreateClanRequestProto*)[[[CreateClanRequestProto builder] mergeFromInputStream:input] build];
}
+ (CreateClanRequestProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CreateClanRequestProto*)[[[CreateClanRequestProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CreateClanRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CreateClanRequestProto*)[[[CreateClanRequestProto builder] mergeFromCodedInputStream:input] build];
}
+ (CreateClanRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CreateClanRequestProto*)[[[CreateClanRequestProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CreateClanRequestProto_Builder*) builder {
  return [[[CreateClanRequestProto_Builder alloc] init] autorelease];
}
+ (CreateClanRequestProto_Builder*) builderWithPrototype:(CreateClanRequestProto*) prototype {
  return [[CreateClanRequestProto builder] mergeFrom:prototype];
}
- (CreateClanRequestProto_Builder*) builder {
  return [CreateClanRequestProto builder];
}
@end

@interface CreateClanRequestProto_Builder()
@property (retain) CreateClanRequestProto* result;
@end

@implementation CreateClanRequestProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[CreateClanRequestProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (CreateClanRequestProto_Builder*) clear {
  self.result = [[[CreateClanRequestProto alloc] init] autorelease];
  return self;
}
- (CreateClanRequestProto_Builder*) clone {
  return [CreateClanRequestProto builderWithPrototype:result];
}
- (CreateClanRequestProto*) defaultInstance {
  return [CreateClanRequestProto defaultInstance];
}
- (CreateClanRequestProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CreateClanRequestProto*) buildPartial {
  CreateClanRequestProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (CreateClanRequestProto_Builder*) mergeFrom:(CreateClanRequestProto*) other {
  if (other == [CreateClanRequestProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.hasTag) {
    [self setTag:other.tag];
  }
  if (other.hasRequestToJoinClanRequired) {
    [self setRequestToJoinClanRequired:other.requestToJoinClanRequired];
  }
  if (other.hasDescription) {
    [self setDescription:other.description];
  }
  if (other.hasClanIconId) {
    [self setClanIconId:other.clanIconId];
  }
  if (other.hasGemsSpent) {
    [self setGemsSpent:other.gemsSpent];
  }
  if (other.hasCashChange) {
    [self setCashChange:other.cashChange];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CreateClanRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CreateClanRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        [self setName:[input readString]];
        break;
      }
      case 26: {
        [self setTag:[input readString]];
        break;
      }
      case 32: {
        [self setRequestToJoinClanRequired:[input readBool]];
        break;
      }
      case 42: {
        [self setDescription:[input readString]];
        break;
      }
      case 48: {
        [self setClanIconId:[input readInt32]];
        break;
      }
      case 56: {
        [self setGemsSpent:[input readInt32]];
        break;
      }
      case 64: {
        [self setCashChange:[input readSInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (CreateClanRequestProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (CreateClanRequestProto_Builder*) setSenderBuilder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (CreateClanRequestProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (CreateClanRequestProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasName {
  return result.hasName;
}
- (NSString*) name {
  return result.name;
}
- (CreateClanRequestProto_Builder*) setName:(NSString*) value {
  result.hasName = YES;
  result.name = value;
  return self;
}
- (CreateClanRequestProto_Builder*) clearName {
  result.hasName = NO;
  result.name = @"";
  return self;
}
- (BOOL) hasTag {
  return result.hasTag;
}
- (NSString*) tag {
  return result.tag;
}
- (CreateClanRequestProto_Builder*) setTag:(NSString*) value {
  result.hasTag = YES;
  result.tag = value;
  return self;
}
- (CreateClanRequestProto_Builder*) clearTag {
  result.hasTag = NO;
  result.tag = @"";
  return self;
}
- (BOOL) hasRequestToJoinClanRequired {
  return result.hasRequestToJoinClanRequired;
}
- (BOOL) requestToJoinClanRequired {
  return result.requestToJoinClanRequired;
}
- (CreateClanRequestProto_Builder*) setRequestToJoinClanRequired:(BOOL) value {
  result.hasRequestToJoinClanRequired = YES;
  result.requestToJoinClanRequired = value;
  return self;
}
- (CreateClanRequestProto_Builder*) clearRequestToJoinClanRequired {
  result.hasRequestToJoinClanRequired = NO;
  result.requestToJoinClanRequired = NO;
  return self;
}
- (BOOL) hasDescription {
  return result.hasDescription;
}
- (NSString*) description {
  return result.description;
}
- (CreateClanRequestProto_Builder*) setDescription:(NSString*) value {
  result.hasDescription = YES;
  result.description = value;
  return self;
}
- (CreateClanRequestProto_Builder*) clearDescription {
  result.hasDescription = NO;
  result.description = @"";
  return self;
}
- (BOOL) hasClanIconId {
  return result.hasClanIconId;
}
- (int32_t) clanIconId {
  return result.clanIconId;
}
- (CreateClanRequestProto_Builder*) setClanIconId:(int32_t) value {
  result.hasClanIconId = YES;
  result.clanIconId = value;
  return self;
}
- (CreateClanRequestProto_Builder*) clearClanIconId {
  result.hasClanIconId = NO;
  result.clanIconId = 0;
  return self;
}
- (BOOL) hasGemsSpent {
  return result.hasGemsSpent;
}
- (int32_t) gemsSpent {
  return result.gemsSpent;
}
- (CreateClanRequestProto_Builder*) setGemsSpent:(int32_t) value {
  result.hasGemsSpent = YES;
  result.gemsSpent = value;
  return self;
}
- (CreateClanRequestProto_Builder*) clearGemsSpent {
  result.hasGemsSpent = NO;
  result.gemsSpent = 0;
  return self;
}
- (BOOL) hasCashChange {
  return result.hasCashChange;
}
- (int32_t) cashChange {
  return result.cashChange;
}
- (CreateClanRequestProto_Builder*) setCashChange:(int32_t) value {
  result.hasCashChange = YES;
  result.cashChange = value;
  return self;
}
- (CreateClanRequestProto_Builder*) clearCashChange {
  result.hasCashChange = NO;
  result.cashChange = 0;
  return self;
}
@end

@interface CreateClanResponseProto ()
@property (retain) MinimumUserProto* sender;
@property CreateClanResponseProto_CreateClanStatus status;
@property (retain) MinimumClanProto* clanInfo;
@end

@implementation CreateClanResponseProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value {
  hasSender_ = !!value;
}
@synthesize sender;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value {
  hasStatus_ = !!value;
}
@synthesize status;
- (BOOL) hasClanInfo {
  return !!hasClanInfo_;
}
- (void) setHasClanInfo:(BOOL) value {
  hasClanInfo_ = !!value;
}
@synthesize clanInfo;
- (void) dealloc {
  self.sender = nil;
  self.clanInfo = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.status = CreateClanResponseProto_CreateClanStatusSuccess;
    self.clanInfo = [MinimumClanProto defaultInstance];
  }
  return self;
}
static CreateClanResponseProto* defaultCreateClanResponseProtoInstance = nil;
+ (void) initialize {
  if (self == [CreateClanResponseProto class]) {
    defaultCreateClanResponseProtoInstance = [[CreateClanResponseProto alloc] init];
  }
}
+ (CreateClanResponseProto*) defaultInstance {
  return defaultCreateClanResponseProtoInstance;
}
- (CreateClanResponseProto*) defaultInstance {
  return defaultCreateClanResponseProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasStatus) {
    [output writeEnum:2 value:self.status];
  }
  if (self.hasClanInfo) {
    [output writeMessage:3 value:self.clanInfo];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSender) {
    size += computeMessageSize(1, self.sender);
  }
  if (self.hasStatus) {
    size += computeEnumSize(2, self.status);
  }
  if (self.hasClanInfo) {
    size += computeMessageSize(3, self.clanInfo);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (CreateClanResponseProto*) parseFromData:(NSData*) data {
  return (CreateClanResponseProto*)[[[CreateClanResponseProto builder] mergeFromData:data] build];
}
+ (CreateClanResponseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CreateClanResponseProto*)[[[CreateClanResponseProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CreateClanResponseProto*) parseFromInputStream:(NSInputStream*) input {
  return (CreateClanResponseProto*)[[[CreateClanResponseProto builder] mergeFromInputStream:input] build];
}
+ (CreateClanResponseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CreateClanResponseProto*)[[[CreateClanResponseProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CreateClanResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CreateClanResponseProto*)[[[CreateClanResponseProto builder] mergeFromCodedInputStream:input] build];
}
+ (CreateClanResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CreateClanResponseProto*)[[[CreateClanResponseProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CreateClanResponseProto_Builder*) builder {
  return [[[CreateClanResponseProto_Builder alloc] init] autorelease];
}
+ (CreateClanResponseProto_Builder*) builderWithPrototype:(CreateClanResponseProto*) prototype {
  return [[CreateClanResponseProto builder] mergeFrom:prototype];
}
- (CreateClanResponseProto_Builder*) builder {
  return [CreateClanResponseProto builder];
}
@end

BOOL CreateClanResponseProto_CreateClanStatusIsValidValue(CreateClanResponseProto_CreateClanStatus value) {
  switch (value) {
    case CreateClanResponseProto_CreateClanStatusSuccess:
    case CreateClanResponseProto_CreateClanStatusFailOther:
    case CreateClanResponseProto_CreateClanStatusFailNotEnoughCash:
    case CreateClanResponseProto_CreateClanStatusFailNameTaken:
    case CreateClanResponseProto_CreateClanStatusFailAlreadyInClan:
    case CreateClanResponseProto_CreateClanStatusFailInvalidTagLength:
    case CreateClanResponseProto_CreateClanStatusFailTagTaken:
    case CreateClanResponseProto_CreateClanStatusFailInsufficientFunds:
      return YES;
    default:
      return NO;
  }
}
@interface CreateClanResponseProto_Builder()
@property (retain) CreateClanResponseProto* result;
@end

@implementation CreateClanResponseProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[CreateClanResponseProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (CreateClanResponseProto_Builder*) clear {
  self.result = [[[CreateClanResponseProto alloc] init] autorelease];
  return self;
}
- (CreateClanResponseProto_Builder*) clone {
  return [CreateClanResponseProto builderWithPrototype:result];
}
- (CreateClanResponseProto*) defaultInstance {
  return [CreateClanResponseProto defaultInstance];
}
- (CreateClanResponseProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CreateClanResponseProto*) buildPartial {
  CreateClanResponseProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (CreateClanResponseProto_Builder*) mergeFrom:(CreateClanResponseProto*) other {
  if (other == [CreateClanResponseProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  if (other.hasClanInfo) {
    [self mergeClanInfo:other.clanInfo];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CreateClanResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CreateClanResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        int32_t value = [input readEnum];
        if (CreateClanResponseProto_CreateClanStatusIsValidValue(value)) {
          [self setStatus:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
      case 26: {
        MinimumClanProto_Builder* subBuilder = [MinimumClanProto builder];
        if (self.hasClanInfo) {
          [subBuilder mergeFrom:self.clanInfo];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setClanInfo:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (CreateClanResponseProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (CreateClanResponseProto_Builder*) setSenderBuilder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (CreateClanResponseProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (CreateClanResponseProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (CreateClanResponseProto_CreateClanStatus) status {
  return result.status;
}
- (CreateClanResponseProto_Builder*) setStatus:(CreateClanResponseProto_CreateClanStatus) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (CreateClanResponseProto_Builder*) clearStatus {
  result.hasStatus = NO;
  result.status = CreateClanResponseProto_CreateClanStatusSuccess;
  return self;
}
- (BOOL) hasClanInfo {
  return result.hasClanInfo;
}
- (MinimumClanProto*) clanInfo {
  return result.clanInfo;
}
- (CreateClanResponseProto_Builder*) setClanInfo:(MinimumClanProto*) value {
  result.hasClanInfo = YES;
  result.clanInfo = value;
  return self;
}
- (CreateClanResponseProto_Builder*) setClanInfoBuilder:(MinimumClanProto_Builder*) builderForValue {
  return [self setClanInfo:[builderForValue build]];
}
- (CreateClanResponseProto_Builder*) mergeClanInfo:(MinimumClanProto*) value {
  if (result.hasClanInfo &&
      result.clanInfo != [MinimumClanProto defaultInstance]) {
    result.clanInfo =
      [[[MinimumClanProto builderWithPrototype:result.clanInfo] mergeFrom:value] buildPartial];
  } else {
    result.clanInfo = value;
  }
  result.hasClanInfo = YES;
  return self;
}
- (CreateClanResponseProto_Builder*) clearClanInfo {
  result.hasClanInfo = NO;
  result.clanInfo = [MinimumClanProto defaultInstance];
  return self;
}
@end

@interface LeaveClanRequestProto ()
@property (retain) MinimumUserProto* sender;
@end

@implementation LeaveClanRequestProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value {
  hasSender_ = !!value;
}
@synthesize sender;
- (void) dealloc {
  self.sender = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
  }
  return self;
}
static LeaveClanRequestProto* defaultLeaveClanRequestProtoInstance = nil;
+ (void) initialize {
  if (self == [LeaveClanRequestProto class]) {
    defaultLeaveClanRequestProtoInstance = [[LeaveClanRequestProto alloc] init];
  }
}
+ (LeaveClanRequestProto*) defaultInstance {
  return defaultLeaveClanRequestProtoInstance;
}
- (LeaveClanRequestProto*) defaultInstance {
  return defaultLeaveClanRequestProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSender) {
    size += computeMessageSize(1, self.sender);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (LeaveClanRequestProto*) parseFromData:(NSData*) data {
  return (LeaveClanRequestProto*)[[[LeaveClanRequestProto builder] mergeFromData:data] build];
}
+ (LeaveClanRequestProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LeaveClanRequestProto*)[[[LeaveClanRequestProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (LeaveClanRequestProto*) parseFromInputStream:(NSInputStream*) input {
  return (LeaveClanRequestProto*)[[[LeaveClanRequestProto builder] mergeFromInputStream:input] build];
}
+ (LeaveClanRequestProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LeaveClanRequestProto*)[[[LeaveClanRequestProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (LeaveClanRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (LeaveClanRequestProto*)[[[LeaveClanRequestProto builder] mergeFromCodedInputStream:input] build];
}
+ (LeaveClanRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LeaveClanRequestProto*)[[[LeaveClanRequestProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (LeaveClanRequestProto_Builder*) builder {
  return [[[LeaveClanRequestProto_Builder alloc] init] autorelease];
}
+ (LeaveClanRequestProto_Builder*) builderWithPrototype:(LeaveClanRequestProto*) prototype {
  return [[LeaveClanRequestProto builder] mergeFrom:prototype];
}
- (LeaveClanRequestProto_Builder*) builder {
  return [LeaveClanRequestProto builder];
}
@end

@interface LeaveClanRequestProto_Builder()
@property (retain) LeaveClanRequestProto* result;
@end

@implementation LeaveClanRequestProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[LeaveClanRequestProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (LeaveClanRequestProto_Builder*) clear {
  self.result = [[[LeaveClanRequestProto alloc] init] autorelease];
  return self;
}
- (LeaveClanRequestProto_Builder*) clone {
  return [LeaveClanRequestProto builderWithPrototype:result];
}
- (LeaveClanRequestProto*) defaultInstance {
  return [LeaveClanRequestProto defaultInstance];
}
- (LeaveClanRequestProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (LeaveClanRequestProto*) buildPartial {
  LeaveClanRequestProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (LeaveClanRequestProto_Builder*) mergeFrom:(LeaveClanRequestProto*) other {
  if (other == [LeaveClanRequestProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (LeaveClanRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (LeaveClanRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (LeaveClanRequestProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (LeaveClanRequestProto_Builder*) setSenderBuilder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (LeaveClanRequestProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (LeaveClanRequestProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
@end

@interface LeaveClanResponseProto ()
@property (retain) MinimumUserProto* sender;
@property LeaveClanResponseProto_LeaveClanStatus status;
@end

@implementation LeaveClanResponseProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value {
  hasSender_ = !!value;
}
@synthesize sender;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value {
  hasStatus_ = !!value;
}
@synthesize status;
- (void) dealloc {
  self.sender = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.status = LeaveClanResponseProto_LeaveClanStatusSuccess;
  }
  return self;
}
static LeaveClanResponseProto* defaultLeaveClanResponseProtoInstance = nil;
+ (void) initialize {
  if (self == [LeaveClanResponseProto class]) {
    defaultLeaveClanResponseProtoInstance = [[LeaveClanResponseProto alloc] init];
  }
}
+ (LeaveClanResponseProto*) defaultInstance {
  return defaultLeaveClanResponseProtoInstance;
}
- (LeaveClanResponseProto*) defaultInstance {
  return defaultLeaveClanResponseProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasStatus) {
    [output writeEnum:2 value:self.status];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSender) {
    size += computeMessageSize(1, self.sender);
  }
  if (self.hasStatus) {
    size += computeEnumSize(2, self.status);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (LeaveClanResponseProto*) parseFromData:(NSData*) data {
  return (LeaveClanResponseProto*)[[[LeaveClanResponseProto builder] mergeFromData:data] build];
}
+ (LeaveClanResponseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LeaveClanResponseProto*)[[[LeaveClanResponseProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (LeaveClanResponseProto*) parseFromInputStream:(NSInputStream*) input {
  return (LeaveClanResponseProto*)[[[LeaveClanResponseProto builder] mergeFromInputStream:input] build];
}
+ (LeaveClanResponseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LeaveClanResponseProto*)[[[LeaveClanResponseProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (LeaveClanResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (LeaveClanResponseProto*)[[[LeaveClanResponseProto builder] mergeFromCodedInputStream:input] build];
}
+ (LeaveClanResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LeaveClanResponseProto*)[[[LeaveClanResponseProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (LeaveClanResponseProto_Builder*) builder {
  return [[[LeaveClanResponseProto_Builder alloc] init] autorelease];
}
+ (LeaveClanResponseProto_Builder*) builderWithPrototype:(LeaveClanResponseProto*) prototype {
  return [[LeaveClanResponseProto builder] mergeFrom:prototype];
}
- (LeaveClanResponseProto_Builder*) builder {
  return [LeaveClanResponseProto builder];
}
@end

BOOL LeaveClanResponseProto_LeaveClanStatusIsValidValue(LeaveClanResponseProto_LeaveClanStatus value) {
  switch (value) {
    case LeaveClanResponseProto_LeaveClanStatusSuccess:
    case LeaveClanResponseProto_LeaveClanStatusFailOther:
    case LeaveClanResponseProto_LeaveClanStatusFailNotInClan:
    case LeaveClanResponseProto_LeaveClanStatusFailOwnerOfClanWithOthersStillIn:
      return YES;
    default:
      return NO;
  }
}
@interface LeaveClanResponseProto_Builder()
@property (retain) LeaveClanResponseProto* result;
@end

@implementation LeaveClanResponseProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[LeaveClanResponseProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (LeaveClanResponseProto_Builder*) clear {
  self.result = [[[LeaveClanResponseProto alloc] init] autorelease];
  return self;
}
- (LeaveClanResponseProto_Builder*) clone {
  return [LeaveClanResponseProto builderWithPrototype:result];
}
- (LeaveClanResponseProto*) defaultInstance {
  return [LeaveClanResponseProto defaultInstance];
}
- (LeaveClanResponseProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (LeaveClanResponseProto*) buildPartial {
  LeaveClanResponseProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (LeaveClanResponseProto_Builder*) mergeFrom:(LeaveClanResponseProto*) other {
  if (other == [LeaveClanResponseProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (LeaveClanResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (LeaveClanResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        int32_t value = [input readEnum];
        if (LeaveClanResponseProto_LeaveClanStatusIsValidValue(value)) {
          [self setStatus:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (LeaveClanResponseProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (LeaveClanResponseProto_Builder*) setSenderBuilder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (LeaveClanResponseProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (LeaveClanResponseProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (LeaveClanResponseProto_LeaveClanStatus) status {
  return result.status;
}
- (LeaveClanResponseProto_Builder*) setStatus:(LeaveClanResponseProto_LeaveClanStatus) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (LeaveClanResponseProto_Builder*) clearStatus {
  result.hasStatus = NO;
  result.status = LeaveClanResponseProto_LeaveClanStatusSuccess;
  return self;
}
@end

@interface RequestJoinClanRequestProto ()
@property (retain) MinimumUserProto* sender;
@property int32_t clanId;
@end

@implementation RequestJoinClanRequestProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value {
  hasSender_ = !!value;
}
@synthesize sender;
- (BOOL) hasClanId {
  return !!hasClanId_;
}
- (void) setHasClanId:(BOOL) value {
  hasClanId_ = !!value;
}
@synthesize clanId;
- (void) dealloc {
  self.sender = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.clanId = 0;
  }
  return self;
}
static RequestJoinClanRequestProto* defaultRequestJoinClanRequestProtoInstance = nil;
+ (void) initialize {
  if (self == [RequestJoinClanRequestProto class]) {
    defaultRequestJoinClanRequestProtoInstance = [[RequestJoinClanRequestProto alloc] init];
  }
}
+ (RequestJoinClanRequestProto*) defaultInstance {
  return defaultRequestJoinClanRequestProtoInstance;
}
- (RequestJoinClanRequestProto*) defaultInstance {
  return defaultRequestJoinClanRequestProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasClanId) {
    [output writeInt32:2 value:self.clanId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSender) {
    size += computeMessageSize(1, self.sender);
  }
  if (self.hasClanId) {
    size += computeInt32Size(2, self.clanId);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (RequestJoinClanRequestProto*) parseFromData:(NSData*) data {
  return (RequestJoinClanRequestProto*)[[[RequestJoinClanRequestProto builder] mergeFromData:data] build];
}
+ (RequestJoinClanRequestProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RequestJoinClanRequestProto*)[[[RequestJoinClanRequestProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (RequestJoinClanRequestProto*) parseFromInputStream:(NSInputStream*) input {
  return (RequestJoinClanRequestProto*)[[[RequestJoinClanRequestProto builder] mergeFromInputStream:input] build];
}
+ (RequestJoinClanRequestProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RequestJoinClanRequestProto*)[[[RequestJoinClanRequestProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RequestJoinClanRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (RequestJoinClanRequestProto*)[[[RequestJoinClanRequestProto builder] mergeFromCodedInputStream:input] build];
}
+ (RequestJoinClanRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RequestJoinClanRequestProto*)[[[RequestJoinClanRequestProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RequestJoinClanRequestProto_Builder*) builder {
  return [[[RequestJoinClanRequestProto_Builder alloc] init] autorelease];
}
+ (RequestJoinClanRequestProto_Builder*) builderWithPrototype:(RequestJoinClanRequestProto*) prototype {
  return [[RequestJoinClanRequestProto builder] mergeFrom:prototype];
}
- (RequestJoinClanRequestProto_Builder*) builder {
  return [RequestJoinClanRequestProto builder];
}
@end

@interface RequestJoinClanRequestProto_Builder()
@property (retain) RequestJoinClanRequestProto* result;
@end

@implementation RequestJoinClanRequestProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[RequestJoinClanRequestProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (RequestJoinClanRequestProto_Builder*) clear {
  self.result = [[[RequestJoinClanRequestProto alloc] init] autorelease];
  return self;
}
- (RequestJoinClanRequestProto_Builder*) clone {
  return [RequestJoinClanRequestProto builderWithPrototype:result];
}
- (RequestJoinClanRequestProto*) defaultInstance {
  return [RequestJoinClanRequestProto defaultInstance];
}
- (RequestJoinClanRequestProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (RequestJoinClanRequestProto*) buildPartial {
  RequestJoinClanRequestProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (RequestJoinClanRequestProto_Builder*) mergeFrom:(RequestJoinClanRequestProto*) other {
  if (other == [RequestJoinClanRequestProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasClanId) {
    [self setClanId:other.clanId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (RequestJoinClanRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (RequestJoinClanRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setClanId:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (RequestJoinClanRequestProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (RequestJoinClanRequestProto_Builder*) setSenderBuilder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (RequestJoinClanRequestProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (RequestJoinClanRequestProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasClanId {
  return result.hasClanId;
}
- (int32_t) clanId {
  return result.clanId;
}
- (RequestJoinClanRequestProto_Builder*) setClanId:(int32_t) value {
  result.hasClanId = YES;
  result.clanId = value;
  return self;
}
- (RequestJoinClanRequestProto_Builder*) clearClanId {
  result.hasClanId = NO;
  result.clanId = 0;
  return self;
}
@end

@interface RequestJoinClanResponseProto ()
@property (retain) MinimumUserProto* sender;
@property RequestJoinClanResponseProto_RequestJoinClanStatus status;
@property int32_t clanId;
@property (retain) MinimumUserProtoForClans* requester;
@property (retain) MinimumClanProto* minClan;
@property (retain) FullClanProtoWithClanSize* fullClan;
@property (retain) PersistentClanEventClanInfoProto* eventDetails;
@property (retain) NSMutableArray* mutableClanUsersDetailsList;
@property (retain) UserCurrentMonsterTeamProto* requesterMonsters;
@end

@implementation RequestJoinClanResponseProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value {
  hasSender_ = !!value;
}
@synthesize sender;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value {
  hasStatus_ = !!value;
}
@synthesize status;
- (BOOL) hasClanId {
  return !!hasClanId_;
}
- (void) setHasClanId:(BOOL) value {
  hasClanId_ = !!value;
}
@synthesize clanId;
- (BOOL) hasRequester {
  return !!hasRequester_;
}
- (void) setHasRequester:(BOOL) value {
  hasRequester_ = !!value;
}
@synthesize requester;
- (BOOL) hasMinClan {
  return !!hasMinClan_;
}
- (void) setHasMinClan:(BOOL) value {
  hasMinClan_ = !!value;
}
@synthesize minClan;
- (BOOL) hasFullClan {
  return !!hasFullClan_;
}
- (void) setHasFullClan:(BOOL) value {
  hasFullClan_ = !!value;
}
@synthesize fullClan;
- (BOOL) hasEventDetails {
  return !!hasEventDetails_;
}
- (void) setHasEventDetails:(BOOL) value {
  hasEventDetails_ = !!value;
}
@synthesize eventDetails;
@synthesize mutableClanUsersDetailsList;
- (BOOL) hasRequesterMonsters {
  return !!hasRequesterMonsters_;
}
- (void) setHasRequesterMonsters:(BOOL) value {
  hasRequesterMonsters_ = !!value;
}
@synthesize requesterMonsters;
- (void) dealloc {
  self.sender = nil;
  self.requester = nil;
  self.minClan = nil;
  self.fullClan = nil;
  self.eventDetails = nil;
  self.mutableClanUsersDetailsList = nil;
  self.requesterMonsters = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.status = RequestJoinClanResponseProto_RequestJoinClanStatusSuccessRequest;
    self.clanId = 0;
    self.requester = [MinimumUserProtoForClans defaultInstance];
    self.minClan = [MinimumClanProto defaultInstance];
    self.fullClan = [FullClanProtoWithClanSize defaultInstance];
    self.eventDetails = [PersistentClanEventClanInfoProto defaultInstance];
    self.requesterMonsters = [UserCurrentMonsterTeamProto defaultInstance];
  }
  return self;
}
static RequestJoinClanResponseProto* defaultRequestJoinClanResponseProtoInstance = nil;
+ (void) initialize {
  if (self == [RequestJoinClanResponseProto class]) {
    defaultRequestJoinClanResponseProtoInstance = [[RequestJoinClanResponseProto alloc] init];
  }
}
+ (RequestJoinClanResponseProto*) defaultInstance {
  return defaultRequestJoinClanResponseProtoInstance;
}
- (RequestJoinClanResponseProto*) defaultInstance {
  return defaultRequestJoinClanResponseProtoInstance;
}
- (NSArray*) clanUsersDetailsList {
  return mutableClanUsersDetailsList;
}
- (PersistentClanEventUserInfoProto*) clanUsersDetailsAtIndex:(int32_t) index {
  id value = [mutableClanUsersDetailsList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasStatus) {
    [output writeEnum:2 value:self.status];
  }
  if (self.hasClanId) {
    [output writeInt32:3 value:self.clanId];
  }
  if (self.hasRequester) {
    [output writeMessage:4 value:self.requester];
  }
  if (self.hasMinClan) {
    [output writeMessage:5 value:self.minClan];
  }
  if (self.hasFullClan) {
    [output writeMessage:6 value:self.fullClan];
  }
  if (self.hasEventDetails) {
    [output writeMessage:7 value:self.eventDetails];
  }
  for (PersistentClanEventUserInfoProto* element in self.clanUsersDetailsList) {
    [output writeMessage:8 value:element];
  }
  if (self.hasRequesterMonsters) {
    [output writeMessage:9 value:self.requesterMonsters];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSender) {
    size += computeMessageSize(1, self.sender);
  }
  if (self.hasStatus) {
    size += computeEnumSize(2, self.status);
  }
  if (self.hasClanId) {
    size += computeInt32Size(3, self.clanId);
  }
  if (self.hasRequester) {
    size += computeMessageSize(4, self.requester);
  }
  if (self.hasMinClan) {
    size += computeMessageSize(5, self.minClan);
  }
  if (self.hasFullClan) {
    size += computeMessageSize(6, self.fullClan);
  }
  if (self.hasEventDetails) {
    size += computeMessageSize(7, self.eventDetails);
  }
  for (PersistentClanEventUserInfoProto* element in self.clanUsersDetailsList) {
    size += computeMessageSize(8, element);
  }
  if (self.hasRequesterMonsters) {
    size += computeMessageSize(9, self.requesterMonsters);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (RequestJoinClanResponseProto*) parseFromData:(NSData*) data {
  return (RequestJoinClanResponseProto*)[[[RequestJoinClanResponseProto builder] mergeFromData:data] build];
}
+ (RequestJoinClanResponseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RequestJoinClanResponseProto*)[[[RequestJoinClanResponseProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (RequestJoinClanResponseProto*) parseFromInputStream:(NSInputStream*) input {
  return (RequestJoinClanResponseProto*)[[[RequestJoinClanResponseProto builder] mergeFromInputStream:input] build];
}
+ (RequestJoinClanResponseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RequestJoinClanResponseProto*)[[[RequestJoinClanResponseProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RequestJoinClanResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (RequestJoinClanResponseProto*)[[[RequestJoinClanResponseProto builder] mergeFromCodedInputStream:input] build];
}
+ (RequestJoinClanResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RequestJoinClanResponseProto*)[[[RequestJoinClanResponseProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RequestJoinClanResponseProto_Builder*) builder {
  return [[[RequestJoinClanResponseProto_Builder alloc] init] autorelease];
}
+ (RequestJoinClanResponseProto_Builder*) builderWithPrototype:(RequestJoinClanResponseProto*) prototype {
  return [[RequestJoinClanResponseProto builder] mergeFrom:prototype];
}
- (RequestJoinClanResponseProto_Builder*) builder {
  return [RequestJoinClanResponseProto builder];
}
@end

BOOL RequestJoinClanResponseProto_RequestJoinClanStatusIsValidValue(RequestJoinClanResponseProto_RequestJoinClanStatus value) {
  switch (value) {
    case RequestJoinClanResponseProto_RequestJoinClanStatusSuccessRequest:
    case RequestJoinClanResponseProto_RequestJoinClanStatusSuccessJoin:
    case RequestJoinClanResponseProto_RequestJoinClanStatusFailAlreadyInClan:
    case RequestJoinClanResponseProto_RequestJoinClanStatusFailRequestAlreadyFiled:
    case RequestJoinClanResponseProto_RequestJoinClanStatusFailClanIsFull:
    case RequestJoinClanResponseProto_RequestJoinClanStatusFailOther:
      return YES;
    default:
      return NO;
  }
}
@interface RequestJoinClanResponseProto_Builder()
@property (retain) RequestJoinClanResponseProto* result;
@end

@implementation RequestJoinClanResponseProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[RequestJoinClanResponseProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (RequestJoinClanResponseProto_Builder*) clear {
  self.result = [[[RequestJoinClanResponseProto alloc] init] autorelease];
  return self;
}
- (RequestJoinClanResponseProto_Builder*) clone {
  return [RequestJoinClanResponseProto builderWithPrototype:result];
}
- (RequestJoinClanResponseProto*) defaultInstance {
  return [RequestJoinClanResponseProto defaultInstance];
}
- (RequestJoinClanResponseProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (RequestJoinClanResponseProto*) buildPartial {
  RequestJoinClanResponseProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (RequestJoinClanResponseProto_Builder*) mergeFrom:(RequestJoinClanResponseProto*) other {
  if (other == [RequestJoinClanResponseProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  if (other.hasClanId) {
    [self setClanId:other.clanId];
  }
  if (other.hasRequester) {
    [self mergeRequester:other.requester];
  }
  if (other.hasMinClan) {
    [self mergeMinClan:other.minClan];
  }
  if (other.hasFullClan) {
    [self mergeFullClan:other.fullClan];
  }
  if (other.hasEventDetails) {
    [self mergeEventDetails:other.eventDetails];
  }
  if (other.mutableClanUsersDetailsList.count > 0) {
    if (result.mutableClanUsersDetailsList == nil) {
      result.mutableClanUsersDetailsList = [NSMutableArray array];
    }
    [result.mutableClanUsersDetailsList addObjectsFromArray:other.mutableClanUsersDetailsList];
  }
  if (other.hasRequesterMonsters) {
    [self mergeRequesterMonsters:other.requesterMonsters];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (RequestJoinClanResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (RequestJoinClanResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        int32_t value = [input readEnum];
        if (RequestJoinClanResponseProto_RequestJoinClanStatusIsValidValue(value)) {
          [self setStatus:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
      case 24: {
        [self setClanId:[input readInt32]];
        break;
      }
      case 34: {
        MinimumUserProtoForClans_Builder* subBuilder = [MinimumUserProtoForClans builder];
        if (self.hasRequester) {
          [subBuilder mergeFrom:self.requester];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setRequester:[subBuilder buildPartial]];
        break;
      }
      case 42: {
        MinimumClanProto_Builder* subBuilder = [MinimumClanProto builder];
        if (self.hasMinClan) {
          [subBuilder mergeFrom:self.minClan];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setMinClan:[subBuilder buildPartial]];
        break;
      }
      case 50: {
        FullClanProtoWithClanSize_Builder* subBuilder = [FullClanProtoWithClanSize builder];
        if (self.hasFullClan) {
          [subBuilder mergeFrom:self.fullClan];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setFullClan:[subBuilder buildPartial]];
        break;
      }
      case 58: {
        PersistentClanEventClanInfoProto_Builder* subBuilder = [PersistentClanEventClanInfoProto builder];
        if (self.hasEventDetails) {
          [subBuilder mergeFrom:self.eventDetails];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setEventDetails:[subBuilder buildPartial]];
        break;
      }
      case 66: {
        PersistentClanEventUserInfoProto_Builder* subBuilder = [PersistentClanEventUserInfoProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addClanUsersDetails:[subBuilder buildPartial]];
        break;
      }
      case 74: {
        UserCurrentMonsterTeamProto_Builder* subBuilder = [UserCurrentMonsterTeamProto builder];
        if (self.hasRequesterMonsters) {
          [subBuilder mergeFrom:self.requesterMonsters];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setRequesterMonsters:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (RequestJoinClanResponseProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (RequestJoinClanResponseProto_Builder*) setSenderBuilder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (RequestJoinClanResponseProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (RequestJoinClanResponseProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (RequestJoinClanResponseProto_RequestJoinClanStatus) status {
  return result.status;
}
- (RequestJoinClanResponseProto_Builder*) setStatus:(RequestJoinClanResponseProto_RequestJoinClanStatus) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (RequestJoinClanResponseProto_Builder*) clearStatus {
  result.hasStatus = NO;
  result.status = RequestJoinClanResponseProto_RequestJoinClanStatusSuccessRequest;
  return self;
}
- (BOOL) hasClanId {
  return result.hasClanId;
}
- (int32_t) clanId {
  return result.clanId;
}
- (RequestJoinClanResponseProto_Builder*) setClanId:(int32_t) value {
  result.hasClanId = YES;
  result.clanId = value;
  return self;
}
- (RequestJoinClanResponseProto_Builder*) clearClanId {
  result.hasClanId = NO;
  result.clanId = 0;
  return self;
}
- (BOOL) hasRequester {
  return result.hasRequester;
}
- (MinimumUserProtoForClans*) requester {
  return result.requester;
}
- (RequestJoinClanResponseProto_Builder*) setRequester:(MinimumUserProtoForClans*) value {
  result.hasRequester = YES;
  result.requester = value;
  return self;
}
- (RequestJoinClanResponseProto_Builder*) setRequesterBuilder:(MinimumUserProtoForClans_Builder*) builderForValue {
  return [self setRequester:[builderForValue build]];
}
- (RequestJoinClanResponseProto_Builder*) mergeRequester:(MinimumUserProtoForClans*) value {
  if (result.hasRequester &&
      result.requester != [MinimumUserProtoForClans defaultInstance]) {
    result.requester =
      [[[MinimumUserProtoForClans builderWithPrototype:result.requester] mergeFrom:value] buildPartial];
  } else {
    result.requester = value;
  }
  result.hasRequester = YES;
  return self;
}
- (RequestJoinClanResponseProto_Builder*) clearRequester {
  result.hasRequester = NO;
  result.requester = [MinimumUserProtoForClans defaultInstance];
  return self;
}
- (BOOL) hasMinClan {
  return result.hasMinClan;
}
- (MinimumClanProto*) minClan {
  return result.minClan;
}
- (RequestJoinClanResponseProto_Builder*) setMinClan:(MinimumClanProto*) value {
  result.hasMinClan = YES;
  result.minClan = value;
  return self;
}
- (RequestJoinClanResponseProto_Builder*) setMinClanBuilder:(MinimumClanProto_Builder*) builderForValue {
  return [self setMinClan:[builderForValue build]];
}
- (RequestJoinClanResponseProto_Builder*) mergeMinClan:(MinimumClanProto*) value {
  if (result.hasMinClan &&
      result.minClan != [MinimumClanProto defaultInstance]) {
    result.minClan =
      [[[MinimumClanProto builderWithPrototype:result.minClan] mergeFrom:value] buildPartial];
  } else {
    result.minClan = value;
  }
  result.hasMinClan = YES;
  return self;
}
- (RequestJoinClanResponseProto_Builder*) clearMinClan {
  result.hasMinClan = NO;
  result.minClan = [MinimumClanProto defaultInstance];
  return self;
}
- (BOOL) hasFullClan {
  return result.hasFullClan;
}
- (FullClanProtoWithClanSize*) fullClan {
  return result.fullClan;
}
- (RequestJoinClanResponseProto_Builder*) setFullClan:(FullClanProtoWithClanSize*) value {
  result.hasFullClan = YES;
  result.fullClan = value;
  return self;
}
- (RequestJoinClanResponseProto_Builder*) setFullClanBuilder:(FullClanProtoWithClanSize_Builder*) builderForValue {
  return [self setFullClan:[builderForValue build]];
}
- (RequestJoinClanResponseProto_Builder*) mergeFullClan:(FullClanProtoWithClanSize*) value {
  if (result.hasFullClan &&
      result.fullClan != [FullClanProtoWithClanSize defaultInstance]) {
    result.fullClan =
      [[[FullClanProtoWithClanSize builderWithPrototype:result.fullClan] mergeFrom:value] buildPartial];
  } else {
    result.fullClan = value;
  }
  result.hasFullClan = YES;
  return self;
}
- (RequestJoinClanResponseProto_Builder*) clearFullClan {
  result.hasFullClan = NO;
  result.fullClan = [FullClanProtoWithClanSize defaultInstance];
  return self;
}
- (BOOL) hasEventDetails {
  return result.hasEventDetails;
}
- (PersistentClanEventClanInfoProto*) eventDetails {
  return result.eventDetails;
}
- (RequestJoinClanResponseProto_Builder*) setEventDetails:(PersistentClanEventClanInfoProto*) value {
  result.hasEventDetails = YES;
  result.eventDetails = value;
  return self;
}
- (RequestJoinClanResponseProto_Builder*) setEventDetailsBuilder:(PersistentClanEventClanInfoProto_Builder*) builderForValue {
  return [self setEventDetails:[builderForValue build]];
}
- (RequestJoinClanResponseProto_Builder*) mergeEventDetails:(PersistentClanEventClanInfoProto*) value {
  if (result.hasEventDetails &&
      result.eventDetails != [PersistentClanEventClanInfoProto defaultInstance]) {
    result.eventDetails =
      [[[PersistentClanEventClanInfoProto builderWithPrototype:result.eventDetails] mergeFrom:value] buildPartial];
  } else {
    result.eventDetails = value;
  }
  result.hasEventDetails = YES;
  return self;
}
- (RequestJoinClanResponseProto_Builder*) clearEventDetails {
  result.hasEventDetails = NO;
  result.eventDetails = [PersistentClanEventClanInfoProto defaultInstance];
  return self;
}
- (NSArray*) clanUsersDetailsList {
  if (result.mutableClanUsersDetailsList == nil) { return [NSArray array]; }
  return result.mutableClanUsersDetailsList;
}
- (PersistentClanEventUserInfoProto*) clanUsersDetailsAtIndex:(int32_t) index {
  return [result clanUsersDetailsAtIndex:index];
}
- (RequestJoinClanResponseProto_Builder*) replaceClanUsersDetailsAtIndex:(int32_t) index with:(PersistentClanEventUserInfoProto*) value {
  [result.mutableClanUsersDetailsList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (RequestJoinClanResponseProto_Builder*) addAllClanUsersDetails:(NSArray*) values {
  if (result.mutableClanUsersDetailsList == nil) {
    result.mutableClanUsersDetailsList = [NSMutableArray array];
  }
  [result.mutableClanUsersDetailsList addObjectsFromArray:values];
  return self;
}
- (RequestJoinClanResponseProto_Builder*) clearClanUsersDetailsList {
  result.mutableClanUsersDetailsList = nil;
  return self;
}
- (RequestJoinClanResponseProto_Builder*) addClanUsersDetails:(PersistentClanEventUserInfoProto*) value {
  if (result.mutableClanUsersDetailsList == nil) {
    result.mutableClanUsersDetailsList = [NSMutableArray array];
  }
  [result.mutableClanUsersDetailsList addObject:value];
  return self;
}
- (BOOL) hasRequesterMonsters {
  return result.hasRequesterMonsters;
}
- (UserCurrentMonsterTeamProto*) requesterMonsters {
  return result.requesterMonsters;
}
- (RequestJoinClanResponseProto_Builder*) setRequesterMonsters:(UserCurrentMonsterTeamProto*) value {
  result.hasRequesterMonsters = YES;
  result.requesterMonsters = value;
  return self;
}
- (RequestJoinClanResponseProto_Builder*) setRequesterMonstersBuilder:(UserCurrentMonsterTeamProto_Builder*) builderForValue {
  return [self setRequesterMonsters:[builderForValue build]];
}
- (RequestJoinClanResponseProto_Builder*) mergeRequesterMonsters:(UserCurrentMonsterTeamProto*) value {
  if (result.hasRequesterMonsters &&
      result.requesterMonsters != [UserCurrentMonsterTeamProto defaultInstance]) {
    result.requesterMonsters =
      [[[UserCurrentMonsterTeamProto builderWithPrototype:result.requesterMonsters] mergeFrom:value] buildPartial];
  } else {
    result.requesterMonsters = value;
  }
  result.hasRequesterMonsters = YES;
  return self;
}
- (RequestJoinClanResponseProto_Builder*) clearRequesterMonsters {
  result.hasRequesterMonsters = NO;
  result.requesterMonsters = [UserCurrentMonsterTeamProto defaultInstance];
  return self;
}
@end

@interface RetractRequestJoinClanRequestProto ()
@property (retain) MinimumUserProto* sender;
@property int32_t clanId;
@end

@implementation RetractRequestJoinClanRequestProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value {
  hasSender_ = !!value;
}
@synthesize sender;
- (BOOL) hasClanId {
  return !!hasClanId_;
}
- (void) setHasClanId:(BOOL) value {
  hasClanId_ = !!value;
}
@synthesize clanId;
- (void) dealloc {
  self.sender = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.clanId = 0;
  }
  return self;
}
static RetractRequestJoinClanRequestProto* defaultRetractRequestJoinClanRequestProtoInstance = nil;
+ (void) initialize {
  if (self == [RetractRequestJoinClanRequestProto class]) {
    defaultRetractRequestJoinClanRequestProtoInstance = [[RetractRequestJoinClanRequestProto alloc] init];
  }
}
+ (RetractRequestJoinClanRequestProto*) defaultInstance {
  return defaultRetractRequestJoinClanRequestProtoInstance;
}
- (RetractRequestJoinClanRequestProto*) defaultInstance {
  return defaultRetractRequestJoinClanRequestProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasClanId) {
    [output writeInt32:2 value:self.clanId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSender) {
    size += computeMessageSize(1, self.sender);
  }
  if (self.hasClanId) {
    size += computeInt32Size(2, self.clanId);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (RetractRequestJoinClanRequestProto*) parseFromData:(NSData*) data {
  return (RetractRequestJoinClanRequestProto*)[[[RetractRequestJoinClanRequestProto builder] mergeFromData:data] build];
}
+ (RetractRequestJoinClanRequestProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RetractRequestJoinClanRequestProto*)[[[RetractRequestJoinClanRequestProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (RetractRequestJoinClanRequestProto*) parseFromInputStream:(NSInputStream*) input {
  return (RetractRequestJoinClanRequestProto*)[[[RetractRequestJoinClanRequestProto builder] mergeFromInputStream:input] build];
}
+ (RetractRequestJoinClanRequestProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RetractRequestJoinClanRequestProto*)[[[RetractRequestJoinClanRequestProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RetractRequestJoinClanRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (RetractRequestJoinClanRequestProto*)[[[RetractRequestJoinClanRequestProto builder] mergeFromCodedInputStream:input] build];
}
+ (RetractRequestJoinClanRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RetractRequestJoinClanRequestProto*)[[[RetractRequestJoinClanRequestProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RetractRequestJoinClanRequestProto_Builder*) builder {
  return [[[RetractRequestJoinClanRequestProto_Builder alloc] init] autorelease];
}
+ (RetractRequestJoinClanRequestProto_Builder*) builderWithPrototype:(RetractRequestJoinClanRequestProto*) prototype {
  return [[RetractRequestJoinClanRequestProto builder] mergeFrom:prototype];
}
- (RetractRequestJoinClanRequestProto_Builder*) builder {
  return [RetractRequestJoinClanRequestProto builder];
}
@end

@interface RetractRequestJoinClanRequestProto_Builder()
@property (retain) RetractRequestJoinClanRequestProto* result;
@end

@implementation RetractRequestJoinClanRequestProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[RetractRequestJoinClanRequestProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (RetractRequestJoinClanRequestProto_Builder*) clear {
  self.result = [[[RetractRequestJoinClanRequestProto alloc] init] autorelease];
  return self;
}
- (RetractRequestJoinClanRequestProto_Builder*) clone {
  return [RetractRequestJoinClanRequestProto builderWithPrototype:result];
}
- (RetractRequestJoinClanRequestProto*) defaultInstance {
  return [RetractRequestJoinClanRequestProto defaultInstance];
}
- (RetractRequestJoinClanRequestProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (RetractRequestJoinClanRequestProto*) buildPartial {
  RetractRequestJoinClanRequestProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (RetractRequestJoinClanRequestProto_Builder*) mergeFrom:(RetractRequestJoinClanRequestProto*) other {
  if (other == [RetractRequestJoinClanRequestProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasClanId) {
    [self setClanId:other.clanId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (RetractRequestJoinClanRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (RetractRequestJoinClanRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setClanId:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (RetractRequestJoinClanRequestProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (RetractRequestJoinClanRequestProto_Builder*) setSenderBuilder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (RetractRequestJoinClanRequestProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (RetractRequestJoinClanRequestProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasClanId {
  return result.hasClanId;
}
- (int32_t) clanId {
  return result.clanId;
}
- (RetractRequestJoinClanRequestProto_Builder*) setClanId:(int32_t) value {
  result.hasClanId = YES;
  result.clanId = value;
  return self;
}
- (RetractRequestJoinClanRequestProto_Builder*) clearClanId {
  result.hasClanId = NO;
  result.clanId = 0;
  return self;
}
@end

@interface RetractRequestJoinClanResponseProto ()
@property (retain) MinimumUserProto* sender;
@property RetractRequestJoinClanResponseProto_RetractRequestJoinClanStatus status;
@property int32_t clanId;
@end

@implementation RetractRequestJoinClanResponseProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value {
  hasSender_ = !!value;
}
@synthesize sender;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value {
  hasStatus_ = !!value;
}
@synthesize status;
- (BOOL) hasClanId {
  return !!hasClanId_;
}
- (void) setHasClanId:(BOOL) value {
  hasClanId_ = !!value;
}
@synthesize clanId;
- (void) dealloc {
  self.sender = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.status = RetractRequestJoinClanResponseProto_RetractRequestJoinClanStatusSuccess;
    self.clanId = 0;
  }
  return self;
}
static RetractRequestJoinClanResponseProto* defaultRetractRequestJoinClanResponseProtoInstance = nil;
+ (void) initialize {
  if (self == [RetractRequestJoinClanResponseProto class]) {
    defaultRetractRequestJoinClanResponseProtoInstance = [[RetractRequestJoinClanResponseProto alloc] init];
  }
}
+ (RetractRequestJoinClanResponseProto*) defaultInstance {
  return defaultRetractRequestJoinClanResponseProtoInstance;
}
- (RetractRequestJoinClanResponseProto*) defaultInstance {
  return defaultRetractRequestJoinClanResponseProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasStatus) {
    [output writeEnum:2 value:self.status];
  }
  if (self.hasClanId) {
    [output writeInt32:3 value:self.clanId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSender) {
    size += computeMessageSize(1, self.sender);
  }
  if (self.hasStatus) {
    size += computeEnumSize(2, self.status);
  }
  if (self.hasClanId) {
    size += computeInt32Size(3, self.clanId);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (RetractRequestJoinClanResponseProto*) parseFromData:(NSData*) data {
  return (RetractRequestJoinClanResponseProto*)[[[RetractRequestJoinClanResponseProto builder] mergeFromData:data] build];
}
+ (RetractRequestJoinClanResponseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RetractRequestJoinClanResponseProto*)[[[RetractRequestJoinClanResponseProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (RetractRequestJoinClanResponseProto*) parseFromInputStream:(NSInputStream*) input {
  return (RetractRequestJoinClanResponseProto*)[[[RetractRequestJoinClanResponseProto builder] mergeFromInputStream:input] build];
}
+ (RetractRequestJoinClanResponseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RetractRequestJoinClanResponseProto*)[[[RetractRequestJoinClanResponseProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RetractRequestJoinClanResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (RetractRequestJoinClanResponseProto*)[[[RetractRequestJoinClanResponseProto builder] mergeFromCodedInputStream:input] build];
}
+ (RetractRequestJoinClanResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RetractRequestJoinClanResponseProto*)[[[RetractRequestJoinClanResponseProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RetractRequestJoinClanResponseProto_Builder*) builder {
  return [[[RetractRequestJoinClanResponseProto_Builder alloc] init] autorelease];
}
+ (RetractRequestJoinClanResponseProto_Builder*) builderWithPrototype:(RetractRequestJoinClanResponseProto*) prototype {
  return [[RetractRequestJoinClanResponseProto builder] mergeFrom:prototype];
}
- (RetractRequestJoinClanResponseProto_Builder*) builder {
  return [RetractRequestJoinClanResponseProto builder];
}
@end

BOOL RetractRequestJoinClanResponseProto_RetractRequestJoinClanStatusIsValidValue(RetractRequestJoinClanResponseProto_RetractRequestJoinClanStatus value) {
  switch (value) {
    case RetractRequestJoinClanResponseProto_RetractRequestJoinClanStatusSuccess:
    case RetractRequestJoinClanResponseProto_RetractRequestJoinClanStatusFailOther:
    case RetractRequestJoinClanResponseProto_RetractRequestJoinClanStatusFailAlreadyInClan:
    case RetractRequestJoinClanResponseProto_RetractRequestJoinClanStatusFailDidNotRequest:
      return YES;
    default:
      return NO;
  }
}
@interface RetractRequestJoinClanResponseProto_Builder()
@property (retain) RetractRequestJoinClanResponseProto* result;
@end

@implementation RetractRequestJoinClanResponseProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[RetractRequestJoinClanResponseProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (RetractRequestJoinClanResponseProto_Builder*) clear {
  self.result = [[[RetractRequestJoinClanResponseProto alloc] init] autorelease];
  return self;
}
- (RetractRequestJoinClanResponseProto_Builder*) clone {
  return [RetractRequestJoinClanResponseProto builderWithPrototype:result];
}
- (RetractRequestJoinClanResponseProto*) defaultInstance {
  return [RetractRequestJoinClanResponseProto defaultInstance];
}
- (RetractRequestJoinClanResponseProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (RetractRequestJoinClanResponseProto*) buildPartial {
  RetractRequestJoinClanResponseProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (RetractRequestJoinClanResponseProto_Builder*) mergeFrom:(RetractRequestJoinClanResponseProto*) other {
  if (other == [RetractRequestJoinClanResponseProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  if (other.hasClanId) {
    [self setClanId:other.clanId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (RetractRequestJoinClanResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (RetractRequestJoinClanResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        int32_t value = [input readEnum];
        if (RetractRequestJoinClanResponseProto_RetractRequestJoinClanStatusIsValidValue(value)) {
          [self setStatus:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
      case 24: {
        [self setClanId:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (RetractRequestJoinClanResponseProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (RetractRequestJoinClanResponseProto_Builder*) setSenderBuilder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (RetractRequestJoinClanResponseProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (RetractRequestJoinClanResponseProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (RetractRequestJoinClanResponseProto_RetractRequestJoinClanStatus) status {
  return result.status;
}
- (RetractRequestJoinClanResponseProto_Builder*) setStatus:(RetractRequestJoinClanResponseProto_RetractRequestJoinClanStatus) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (RetractRequestJoinClanResponseProto_Builder*) clearStatus {
  result.hasStatus = NO;
  result.status = RetractRequestJoinClanResponseProto_RetractRequestJoinClanStatusSuccess;
  return self;
}
- (BOOL) hasClanId {
  return result.hasClanId;
}
- (int32_t) clanId {
  return result.clanId;
}
- (RetractRequestJoinClanResponseProto_Builder*) setClanId:(int32_t) value {
  result.hasClanId = YES;
  result.clanId = value;
  return self;
}
- (RetractRequestJoinClanResponseProto_Builder*) clearClanId {
  result.hasClanId = NO;
  result.clanId = 0;
  return self;
}
@end

@interface ApproveOrRejectRequestToJoinClanRequestProto ()
@property (retain) MinimumUserProto* sender;
@property int32_t requesterId;
@property BOOL accept;
@end

@implementation ApproveOrRejectRequestToJoinClanRequestProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value {
  hasSender_ = !!value;
}
@synthesize sender;
- (BOOL) hasRequesterId {
  return !!hasRequesterId_;
}
- (void) setHasRequesterId:(BOOL) value {
  hasRequesterId_ = !!value;
}
@synthesize requesterId;
- (BOOL) hasAccept {
  return !!hasAccept_;
}
- (void) setHasAccept:(BOOL) value {
  hasAccept_ = !!value;
}
- (BOOL) accept {
  return !!accept_;
}
- (void) setAccept:(BOOL) value {
  accept_ = !!value;
}
- (void) dealloc {
  self.sender = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.requesterId = 0;
    self.accept = NO;
  }
  return self;
}
static ApproveOrRejectRequestToJoinClanRequestProto* defaultApproveOrRejectRequestToJoinClanRequestProtoInstance = nil;
+ (void) initialize {
  if (self == [ApproveOrRejectRequestToJoinClanRequestProto class]) {
    defaultApproveOrRejectRequestToJoinClanRequestProtoInstance = [[ApproveOrRejectRequestToJoinClanRequestProto alloc] init];
  }
}
+ (ApproveOrRejectRequestToJoinClanRequestProto*) defaultInstance {
  return defaultApproveOrRejectRequestToJoinClanRequestProtoInstance;
}
- (ApproveOrRejectRequestToJoinClanRequestProto*) defaultInstance {
  return defaultApproveOrRejectRequestToJoinClanRequestProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasRequesterId) {
    [output writeInt32:2 value:self.requesterId];
  }
  if (self.hasAccept) {
    [output writeBool:3 value:self.accept];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSender) {
    size += computeMessageSize(1, self.sender);
  }
  if (self.hasRequesterId) {
    size += computeInt32Size(2, self.requesterId);
  }
  if (self.hasAccept) {
    size += computeBoolSize(3, self.accept);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (ApproveOrRejectRequestToJoinClanRequestProto*) parseFromData:(NSData*) data {
  return (ApproveOrRejectRequestToJoinClanRequestProto*)[[[ApproveOrRejectRequestToJoinClanRequestProto builder] mergeFromData:data] build];
}
+ (ApproveOrRejectRequestToJoinClanRequestProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ApproveOrRejectRequestToJoinClanRequestProto*)[[[ApproveOrRejectRequestToJoinClanRequestProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ApproveOrRejectRequestToJoinClanRequestProto*) parseFromInputStream:(NSInputStream*) input {
  return (ApproveOrRejectRequestToJoinClanRequestProto*)[[[ApproveOrRejectRequestToJoinClanRequestProto builder] mergeFromInputStream:input] build];
}
+ (ApproveOrRejectRequestToJoinClanRequestProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ApproveOrRejectRequestToJoinClanRequestProto*)[[[ApproveOrRejectRequestToJoinClanRequestProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ApproveOrRejectRequestToJoinClanRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ApproveOrRejectRequestToJoinClanRequestProto*)[[[ApproveOrRejectRequestToJoinClanRequestProto builder] mergeFromCodedInputStream:input] build];
}
+ (ApproveOrRejectRequestToJoinClanRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ApproveOrRejectRequestToJoinClanRequestProto*)[[[ApproveOrRejectRequestToJoinClanRequestProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ApproveOrRejectRequestToJoinClanRequestProto_Builder*) builder {
  return [[[ApproveOrRejectRequestToJoinClanRequestProto_Builder alloc] init] autorelease];
}
+ (ApproveOrRejectRequestToJoinClanRequestProto_Builder*) builderWithPrototype:(ApproveOrRejectRequestToJoinClanRequestProto*) prototype {
  return [[ApproveOrRejectRequestToJoinClanRequestProto builder] mergeFrom:prototype];
}
- (ApproveOrRejectRequestToJoinClanRequestProto_Builder*) builder {
  return [ApproveOrRejectRequestToJoinClanRequestProto builder];
}
@end

@interface ApproveOrRejectRequestToJoinClanRequestProto_Builder()
@property (retain) ApproveOrRejectRequestToJoinClanRequestProto* result;
@end

@implementation ApproveOrRejectRequestToJoinClanRequestProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[ApproveOrRejectRequestToJoinClanRequestProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (ApproveOrRejectRequestToJoinClanRequestProto_Builder*) clear {
  self.result = [[[ApproveOrRejectRequestToJoinClanRequestProto alloc] init] autorelease];
  return self;
}
- (ApproveOrRejectRequestToJoinClanRequestProto_Builder*) clone {
  return [ApproveOrRejectRequestToJoinClanRequestProto builderWithPrototype:result];
}
- (ApproveOrRejectRequestToJoinClanRequestProto*) defaultInstance {
  return [ApproveOrRejectRequestToJoinClanRequestProto defaultInstance];
}
- (ApproveOrRejectRequestToJoinClanRequestProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ApproveOrRejectRequestToJoinClanRequestProto*) buildPartial {
  ApproveOrRejectRequestToJoinClanRequestProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (ApproveOrRejectRequestToJoinClanRequestProto_Builder*) mergeFrom:(ApproveOrRejectRequestToJoinClanRequestProto*) other {
  if (other == [ApproveOrRejectRequestToJoinClanRequestProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasRequesterId) {
    [self setRequesterId:other.requesterId];
  }
  if (other.hasAccept) {
    [self setAccept:other.accept];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ApproveOrRejectRequestToJoinClanRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ApproveOrRejectRequestToJoinClanRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setRequesterId:[input readInt32]];
        break;
      }
      case 24: {
        [self setAccept:[input readBool]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (ApproveOrRejectRequestToJoinClanRequestProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (ApproveOrRejectRequestToJoinClanRequestProto_Builder*) setSenderBuilder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (ApproveOrRejectRequestToJoinClanRequestProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (ApproveOrRejectRequestToJoinClanRequestProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasRequesterId {
  return result.hasRequesterId;
}
- (int32_t) requesterId {
  return result.requesterId;
}
- (ApproveOrRejectRequestToJoinClanRequestProto_Builder*) setRequesterId:(int32_t) value {
  result.hasRequesterId = YES;
  result.requesterId = value;
  return self;
}
- (ApproveOrRejectRequestToJoinClanRequestProto_Builder*) clearRequesterId {
  result.hasRequesterId = NO;
  result.requesterId = 0;
  return self;
}
- (BOOL) hasAccept {
  return result.hasAccept;
}
- (BOOL) accept {
  return result.accept;
}
- (ApproveOrRejectRequestToJoinClanRequestProto_Builder*) setAccept:(BOOL) value {
  result.hasAccept = YES;
  result.accept = value;
  return self;
}
- (ApproveOrRejectRequestToJoinClanRequestProto_Builder*) clearAccept {
  result.hasAccept = NO;
  result.accept = NO;
  return self;
}
@end

@interface ApproveOrRejectRequestToJoinClanResponseProto ()
@property (retain) MinimumUserProto* sender;
@property ApproveOrRejectRequestToJoinClanResponseProto_ApproveOrRejectRequestToJoinClanStatus status;
@property (retain) MinimumUserProto* requester;
@property BOOL accept;
@property (retain) MinimumClanProto* minClan;
@property (retain) FullClanProtoWithClanSize* fullClan;
@end

@implementation ApproveOrRejectRequestToJoinClanResponseProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value {
  hasSender_ = !!value;
}
@synthesize sender;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value {
  hasStatus_ = !!value;
}
@synthesize status;
- (BOOL) hasRequester {
  return !!hasRequester_;
}
- (void) setHasRequester:(BOOL) value {
  hasRequester_ = !!value;
}
@synthesize requester;
- (BOOL) hasAccept {
  return !!hasAccept_;
}
- (void) setHasAccept:(BOOL) value {
  hasAccept_ = !!value;
}
- (BOOL) accept {
  return !!accept_;
}
- (void) setAccept:(BOOL) value {
  accept_ = !!value;
}
- (BOOL) hasMinClan {
  return !!hasMinClan_;
}
- (void) setHasMinClan:(BOOL) value {
  hasMinClan_ = !!value;
}
@synthesize minClan;
- (BOOL) hasFullClan {
  return !!hasFullClan_;
}
- (void) setHasFullClan:(BOOL) value {
  hasFullClan_ = !!value;
}
@synthesize fullClan;
- (void) dealloc {
  self.sender = nil;
  self.requester = nil;
  self.minClan = nil;
  self.fullClan = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.status = ApproveOrRejectRequestToJoinClanResponseProto_ApproveOrRejectRequestToJoinClanStatusSuccess;
    self.requester = [MinimumUserProto defaultInstance];
    self.accept = NO;
    self.minClan = [MinimumClanProto defaultInstance];
    self.fullClan = [FullClanProtoWithClanSize defaultInstance];
  }
  return self;
}
static ApproveOrRejectRequestToJoinClanResponseProto* defaultApproveOrRejectRequestToJoinClanResponseProtoInstance = nil;
+ (void) initialize {
  if (self == [ApproveOrRejectRequestToJoinClanResponseProto class]) {
    defaultApproveOrRejectRequestToJoinClanResponseProtoInstance = [[ApproveOrRejectRequestToJoinClanResponseProto alloc] init];
  }
}
+ (ApproveOrRejectRequestToJoinClanResponseProto*) defaultInstance {
  return defaultApproveOrRejectRequestToJoinClanResponseProtoInstance;
}
- (ApproveOrRejectRequestToJoinClanResponseProto*) defaultInstance {
  return defaultApproveOrRejectRequestToJoinClanResponseProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasStatus) {
    [output writeEnum:2 value:self.status];
  }
  if (self.hasRequester) {
    [output writeMessage:3 value:self.requester];
  }
  if (self.hasAccept) {
    [output writeBool:4 value:self.accept];
  }
  if (self.hasMinClan) {
    [output writeMessage:5 value:self.minClan];
  }
  if (self.hasFullClan) {
    [output writeMessage:6 value:self.fullClan];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSender) {
    size += computeMessageSize(1, self.sender);
  }
  if (self.hasStatus) {
    size += computeEnumSize(2, self.status);
  }
  if (self.hasRequester) {
    size += computeMessageSize(3, self.requester);
  }
  if (self.hasAccept) {
    size += computeBoolSize(4, self.accept);
  }
  if (self.hasMinClan) {
    size += computeMessageSize(5, self.minClan);
  }
  if (self.hasFullClan) {
    size += computeMessageSize(6, self.fullClan);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (ApproveOrRejectRequestToJoinClanResponseProto*) parseFromData:(NSData*) data {
  return (ApproveOrRejectRequestToJoinClanResponseProto*)[[[ApproveOrRejectRequestToJoinClanResponseProto builder] mergeFromData:data] build];
}
+ (ApproveOrRejectRequestToJoinClanResponseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ApproveOrRejectRequestToJoinClanResponseProto*)[[[ApproveOrRejectRequestToJoinClanResponseProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ApproveOrRejectRequestToJoinClanResponseProto*) parseFromInputStream:(NSInputStream*) input {
  return (ApproveOrRejectRequestToJoinClanResponseProto*)[[[ApproveOrRejectRequestToJoinClanResponseProto builder] mergeFromInputStream:input] build];
}
+ (ApproveOrRejectRequestToJoinClanResponseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ApproveOrRejectRequestToJoinClanResponseProto*)[[[ApproveOrRejectRequestToJoinClanResponseProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ApproveOrRejectRequestToJoinClanResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ApproveOrRejectRequestToJoinClanResponseProto*)[[[ApproveOrRejectRequestToJoinClanResponseProto builder] mergeFromCodedInputStream:input] build];
}
+ (ApproveOrRejectRequestToJoinClanResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ApproveOrRejectRequestToJoinClanResponseProto*)[[[ApproveOrRejectRequestToJoinClanResponseProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ApproveOrRejectRequestToJoinClanResponseProto_Builder*) builder {
  return [[[ApproveOrRejectRequestToJoinClanResponseProto_Builder alloc] init] autorelease];
}
+ (ApproveOrRejectRequestToJoinClanResponseProto_Builder*) builderWithPrototype:(ApproveOrRejectRequestToJoinClanResponseProto*) prototype {
  return [[ApproveOrRejectRequestToJoinClanResponseProto builder] mergeFrom:prototype];
}
- (ApproveOrRejectRequestToJoinClanResponseProto_Builder*) builder {
  return [ApproveOrRejectRequestToJoinClanResponseProto builder];
}
@end

BOOL ApproveOrRejectRequestToJoinClanResponseProto_ApproveOrRejectRequestToJoinClanStatusIsValidValue(ApproveOrRejectRequestToJoinClanResponseProto_ApproveOrRejectRequestToJoinClanStatus value) {
  switch (value) {
    case ApproveOrRejectRequestToJoinClanResponseProto_ApproveOrRejectRequestToJoinClanStatusSuccess:
    case ApproveOrRejectRequestToJoinClanResponseProto_ApproveOrRejectRequestToJoinClanStatusFailOther:
    case ApproveOrRejectRequestToJoinClanResponseProto_ApproveOrRejectRequestToJoinClanStatusFailNotAuthorized:
    case ApproveOrRejectRequestToJoinClanResponseProto_ApproveOrRejectRequestToJoinClanStatusFailNotARequester:
    case ApproveOrRejectRequestToJoinClanResponseProto_ApproveOrRejectRequestToJoinClanStatusFailAlreadyInAClan:
    case ApproveOrRejectRequestToJoinClanResponseProto_ApproveOrRejectRequestToJoinClanStatusFailClanIsFull:
      return YES;
    default:
      return NO;
  }
}
@interface ApproveOrRejectRequestToJoinClanResponseProto_Builder()
@property (retain) ApproveOrRejectRequestToJoinClanResponseProto* result;
@end

@implementation ApproveOrRejectRequestToJoinClanResponseProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[ApproveOrRejectRequestToJoinClanResponseProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (ApproveOrRejectRequestToJoinClanResponseProto_Builder*) clear {
  self.result = [[[ApproveOrRejectRequestToJoinClanResponseProto alloc] init] autorelease];
  return self;
}
- (ApproveOrRejectRequestToJoinClanResponseProto_Builder*) clone {
  return [ApproveOrRejectRequestToJoinClanResponseProto builderWithPrototype:result];
}
- (ApproveOrRejectRequestToJoinClanResponseProto*) defaultInstance {
  return [ApproveOrRejectRequestToJoinClanResponseProto defaultInstance];
}
- (ApproveOrRejectRequestToJoinClanResponseProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ApproveOrRejectRequestToJoinClanResponseProto*) buildPartial {
  ApproveOrRejectRequestToJoinClanResponseProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (ApproveOrRejectRequestToJoinClanResponseProto_Builder*) mergeFrom:(ApproveOrRejectRequestToJoinClanResponseProto*) other {
  if (other == [ApproveOrRejectRequestToJoinClanResponseProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  if (other.hasRequester) {
    [self mergeRequester:other.requester];
  }
  if (other.hasAccept) {
    [self setAccept:other.accept];
  }
  if (other.hasMinClan) {
    [self mergeMinClan:other.minClan];
  }
  if (other.hasFullClan) {
    [self mergeFullClan:other.fullClan];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ApproveOrRejectRequestToJoinClanResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ApproveOrRejectRequestToJoinClanResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        int32_t value = [input readEnum];
        if (ApproveOrRejectRequestToJoinClanResponseProto_ApproveOrRejectRequestToJoinClanStatusIsValidValue(value)) {
          [self setStatus:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
      case 26: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasRequester) {
          [subBuilder mergeFrom:self.requester];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setRequester:[subBuilder buildPartial]];
        break;
      }
      case 32: {
        [self setAccept:[input readBool]];
        break;
      }
      case 42: {
        MinimumClanProto_Builder* subBuilder = [MinimumClanProto builder];
        if (self.hasMinClan) {
          [subBuilder mergeFrom:self.minClan];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setMinClan:[subBuilder buildPartial]];
        break;
      }
      case 50: {
        FullClanProtoWithClanSize_Builder* subBuilder = [FullClanProtoWithClanSize builder];
        if (self.hasFullClan) {
          [subBuilder mergeFrom:self.fullClan];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setFullClan:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (ApproveOrRejectRequestToJoinClanResponseProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (ApproveOrRejectRequestToJoinClanResponseProto_Builder*) setSenderBuilder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (ApproveOrRejectRequestToJoinClanResponseProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (ApproveOrRejectRequestToJoinClanResponseProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (ApproveOrRejectRequestToJoinClanResponseProto_ApproveOrRejectRequestToJoinClanStatus) status {
  return result.status;
}
- (ApproveOrRejectRequestToJoinClanResponseProto_Builder*) setStatus:(ApproveOrRejectRequestToJoinClanResponseProto_ApproveOrRejectRequestToJoinClanStatus) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (ApproveOrRejectRequestToJoinClanResponseProto_Builder*) clearStatus {
  result.hasStatus = NO;
  result.status = ApproveOrRejectRequestToJoinClanResponseProto_ApproveOrRejectRequestToJoinClanStatusSuccess;
  return self;
}
- (BOOL) hasRequester {
  return result.hasRequester;
}
- (MinimumUserProto*) requester {
  return result.requester;
}
- (ApproveOrRejectRequestToJoinClanResponseProto_Builder*) setRequester:(MinimumUserProto*) value {
  result.hasRequester = YES;
  result.requester = value;
  return self;
}
- (ApproveOrRejectRequestToJoinClanResponseProto_Builder*) setRequesterBuilder:(MinimumUserProto_Builder*) builderForValue {
  return [self setRequester:[builderForValue build]];
}
- (ApproveOrRejectRequestToJoinClanResponseProto_Builder*) mergeRequester:(MinimumUserProto*) value {
  if (result.hasRequester &&
      result.requester != [MinimumUserProto defaultInstance]) {
    result.requester =
      [[[MinimumUserProto builderWithPrototype:result.requester] mergeFrom:value] buildPartial];
  } else {
    result.requester = value;
  }
  result.hasRequester = YES;
  return self;
}
- (ApproveOrRejectRequestToJoinClanResponseProto_Builder*) clearRequester {
  result.hasRequester = NO;
  result.requester = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasAccept {
  return result.hasAccept;
}
- (BOOL) accept {
  return result.accept;
}
- (ApproveOrRejectRequestToJoinClanResponseProto_Builder*) setAccept:(BOOL) value {
  result.hasAccept = YES;
  result.accept = value;
  return self;
}
- (ApproveOrRejectRequestToJoinClanResponseProto_Builder*) clearAccept {
  result.hasAccept = NO;
  result.accept = NO;
  return self;
}
- (BOOL) hasMinClan {
  return result.hasMinClan;
}
- (MinimumClanProto*) minClan {
  return result.minClan;
}
- (ApproveOrRejectRequestToJoinClanResponseProto_Builder*) setMinClan:(MinimumClanProto*) value {
  result.hasMinClan = YES;
  result.minClan = value;
  return self;
}
- (ApproveOrRejectRequestToJoinClanResponseProto_Builder*) setMinClanBuilder:(MinimumClanProto_Builder*) builderForValue {
  return [self setMinClan:[builderForValue build]];
}
- (ApproveOrRejectRequestToJoinClanResponseProto_Builder*) mergeMinClan:(MinimumClanProto*) value {
  if (result.hasMinClan &&
      result.minClan != [MinimumClanProto defaultInstance]) {
    result.minClan =
      [[[MinimumClanProto builderWithPrototype:result.minClan] mergeFrom:value] buildPartial];
  } else {
    result.minClan = value;
  }
  result.hasMinClan = YES;
  return self;
}
- (ApproveOrRejectRequestToJoinClanResponseProto_Builder*) clearMinClan {
  result.hasMinClan = NO;
  result.minClan = [MinimumClanProto defaultInstance];
  return self;
}
- (BOOL) hasFullClan {
  return result.hasFullClan;
}
- (FullClanProtoWithClanSize*) fullClan {
  return result.fullClan;
}
- (ApproveOrRejectRequestToJoinClanResponseProto_Builder*) setFullClan:(FullClanProtoWithClanSize*) value {
  result.hasFullClan = YES;
  result.fullClan = value;
  return self;
}
- (ApproveOrRejectRequestToJoinClanResponseProto_Builder*) setFullClanBuilder:(FullClanProtoWithClanSize_Builder*) builderForValue {
  return [self setFullClan:[builderForValue build]];
}
- (ApproveOrRejectRequestToJoinClanResponseProto_Builder*) mergeFullClan:(FullClanProtoWithClanSize*) value {
  if (result.hasFullClan &&
      result.fullClan != [FullClanProtoWithClanSize defaultInstance]) {
    result.fullClan =
      [[[FullClanProtoWithClanSize builderWithPrototype:result.fullClan] mergeFrom:value] buildPartial];
  } else {
    result.fullClan = value;
  }
  result.hasFullClan = YES;
  return self;
}
- (ApproveOrRejectRequestToJoinClanResponseProto_Builder*) clearFullClan {
  result.hasFullClan = NO;
  result.fullClan = [FullClanProtoWithClanSize defaultInstance];
  return self;
}
@end

@interface RetrieveClanInfoRequestProto ()
@property (retain) MinimumUserProto* sender;
@property int32_t clanId;
@property (retain) NSString* clanName;
@property RetrieveClanInfoRequestProto_ClanInfoGrabType grabType;
@property int32_t beforeThisClanId;
@property BOOL isForBrowsingList;
@end

@implementation RetrieveClanInfoRequestProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value {
  hasSender_ = !!value;
}
@synthesize sender;
- (BOOL) hasClanId {
  return !!hasClanId_;
}
- (void) setHasClanId:(BOOL) value {
  hasClanId_ = !!value;
}
@synthesize clanId;
- (BOOL) hasClanName {
  return !!hasClanName_;
}
- (void) setHasClanName:(BOOL) value {
  hasClanName_ = !!value;
}
@synthesize clanName;
- (BOOL) hasGrabType {
  return !!hasGrabType_;
}
- (void) setHasGrabType:(BOOL) value {
  hasGrabType_ = !!value;
}
@synthesize grabType;
- (BOOL) hasBeforeThisClanId {
  return !!hasBeforeThisClanId_;
}
- (void) setHasBeforeThisClanId:(BOOL) value {
  hasBeforeThisClanId_ = !!value;
}
@synthesize beforeThisClanId;
- (BOOL) hasIsForBrowsingList {
  return !!hasIsForBrowsingList_;
}
- (void) setHasIsForBrowsingList:(BOOL) value {
  hasIsForBrowsingList_ = !!value;
}
- (BOOL) isForBrowsingList {
  return !!isForBrowsingList_;
}
- (void) setIsForBrowsingList:(BOOL) value {
  isForBrowsingList_ = !!value;
}
- (void) dealloc {
  self.sender = nil;
  self.clanName = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.clanId = 0;
    self.clanName = @"";
    self.grabType = RetrieveClanInfoRequestProto_ClanInfoGrabTypeAll;
    self.beforeThisClanId = 0;
    self.isForBrowsingList = NO;
  }
  return self;
}
static RetrieveClanInfoRequestProto* defaultRetrieveClanInfoRequestProtoInstance = nil;
+ (void) initialize {
  if (self == [RetrieveClanInfoRequestProto class]) {
    defaultRetrieveClanInfoRequestProtoInstance = [[RetrieveClanInfoRequestProto alloc] init];
  }
}
+ (RetrieveClanInfoRequestProto*) defaultInstance {
  return defaultRetrieveClanInfoRequestProtoInstance;
}
- (RetrieveClanInfoRequestProto*) defaultInstance {
  return defaultRetrieveClanInfoRequestProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasClanId) {
    [output writeInt32:2 value:self.clanId];
  }
  if (self.hasClanName) {
    [output writeString:3 value:self.clanName];
  }
  if (self.hasGrabType) {
    [output writeEnum:4 value:self.grabType];
  }
  if (self.hasBeforeThisClanId) {
    [output writeInt32:5 value:self.beforeThisClanId];
  }
  if (self.hasIsForBrowsingList) {
    [output writeBool:6 value:self.isForBrowsingList];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSender) {
    size += computeMessageSize(1, self.sender);
  }
  if (self.hasClanId) {
    size += computeInt32Size(2, self.clanId);
  }
  if (self.hasClanName) {
    size += computeStringSize(3, self.clanName);
  }
  if (self.hasGrabType) {
    size += computeEnumSize(4, self.grabType);
  }
  if (self.hasBeforeThisClanId) {
    size += computeInt32Size(5, self.beforeThisClanId);
  }
  if (self.hasIsForBrowsingList) {
    size += computeBoolSize(6, self.isForBrowsingList);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (RetrieveClanInfoRequestProto*) parseFromData:(NSData*) data {
  return (RetrieveClanInfoRequestProto*)[[[RetrieveClanInfoRequestProto builder] mergeFromData:data] build];
}
+ (RetrieveClanInfoRequestProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RetrieveClanInfoRequestProto*)[[[RetrieveClanInfoRequestProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (RetrieveClanInfoRequestProto*) parseFromInputStream:(NSInputStream*) input {
  return (RetrieveClanInfoRequestProto*)[[[RetrieveClanInfoRequestProto builder] mergeFromInputStream:input] build];
}
+ (RetrieveClanInfoRequestProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RetrieveClanInfoRequestProto*)[[[RetrieveClanInfoRequestProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RetrieveClanInfoRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (RetrieveClanInfoRequestProto*)[[[RetrieveClanInfoRequestProto builder] mergeFromCodedInputStream:input] build];
}
+ (RetrieveClanInfoRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RetrieveClanInfoRequestProto*)[[[RetrieveClanInfoRequestProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RetrieveClanInfoRequestProto_Builder*) builder {
  return [[[RetrieveClanInfoRequestProto_Builder alloc] init] autorelease];
}
+ (RetrieveClanInfoRequestProto_Builder*) builderWithPrototype:(RetrieveClanInfoRequestProto*) prototype {
  return [[RetrieveClanInfoRequestProto builder] mergeFrom:prototype];
}
- (RetrieveClanInfoRequestProto_Builder*) builder {
  return [RetrieveClanInfoRequestProto builder];
}
@end

BOOL RetrieveClanInfoRequestProto_ClanInfoGrabTypeIsValidValue(RetrieveClanInfoRequestProto_ClanInfoGrabType value) {
  switch (value) {
    case RetrieveClanInfoRequestProto_ClanInfoGrabTypeAll:
    case RetrieveClanInfoRequestProto_ClanInfoGrabTypeClanInfo:
    case RetrieveClanInfoRequestProto_ClanInfoGrabTypeMembers:
      return YES;
    default:
      return NO;
  }
}
@interface RetrieveClanInfoRequestProto_Builder()
@property (retain) RetrieveClanInfoRequestProto* result;
@end

@implementation RetrieveClanInfoRequestProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[RetrieveClanInfoRequestProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (RetrieveClanInfoRequestProto_Builder*) clear {
  self.result = [[[RetrieveClanInfoRequestProto alloc] init] autorelease];
  return self;
}
- (RetrieveClanInfoRequestProto_Builder*) clone {
  return [RetrieveClanInfoRequestProto builderWithPrototype:result];
}
- (RetrieveClanInfoRequestProto*) defaultInstance {
  return [RetrieveClanInfoRequestProto defaultInstance];
}
- (RetrieveClanInfoRequestProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (RetrieveClanInfoRequestProto*) buildPartial {
  RetrieveClanInfoRequestProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (RetrieveClanInfoRequestProto_Builder*) mergeFrom:(RetrieveClanInfoRequestProto*) other {
  if (other == [RetrieveClanInfoRequestProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasClanId) {
    [self setClanId:other.clanId];
  }
  if (other.hasClanName) {
    [self setClanName:other.clanName];
  }
  if (other.hasGrabType) {
    [self setGrabType:other.grabType];
  }
  if (other.hasBeforeThisClanId) {
    [self setBeforeThisClanId:other.beforeThisClanId];
  }
  if (other.hasIsForBrowsingList) {
    [self setIsForBrowsingList:other.isForBrowsingList];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (RetrieveClanInfoRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (RetrieveClanInfoRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setClanId:[input readInt32]];
        break;
      }
      case 26: {
        [self setClanName:[input readString]];
        break;
      }
      case 32: {
        int32_t value = [input readEnum];
        if (RetrieveClanInfoRequestProto_ClanInfoGrabTypeIsValidValue(value)) {
          [self setGrabType:value];
        } else {
          [unknownFields mergeVarintField:4 value:value];
        }
        break;
      }
      case 40: {
        [self setBeforeThisClanId:[input readInt32]];
        break;
      }
      case 48: {
        [self setIsForBrowsingList:[input readBool]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (RetrieveClanInfoRequestProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (RetrieveClanInfoRequestProto_Builder*) setSenderBuilder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (RetrieveClanInfoRequestProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (RetrieveClanInfoRequestProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasClanId {
  return result.hasClanId;
}
- (int32_t) clanId {
  return result.clanId;
}
- (RetrieveClanInfoRequestProto_Builder*) setClanId:(int32_t) value {
  result.hasClanId = YES;
  result.clanId = value;
  return self;
}
- (RetrieveClanInfoRequestProto_Builder*) clearClanId {
  result.hasClanId = NO;
  result.clanId = 0;
  return self;
}
- (BOOL) hasClanName {
  return result.hasClanName;
}
- (NSString*) clanName {
  return result.clanName;
}
- (RetrieveClanInfoRequestProto_Builder*) setClanName:(NSString*) value {
  result.hasClanName = YES;
  result.clanName = value;
  return self;
}
- (RetrieveClanInfoRequestProto_Builder*) clearClanName {
  result.hasClanName = NO;
  result.clanName = @"";
  return self;
}
- (BOOL) hasGrabType {
  return result.hasGrabType;
}
- (RetrieveClanInfoRequestProto_ClanInfoGrabType) grabType {
  return result.grabType;
}
- (RetrieveClanInfoRequestProto_Builder*) setGrabType:(RetrieveClanInfoRequestProto_ClanInfoGrabType) value {
  result.hasGrabType = YES;
  result.grabType = value;
  return self;
}
- (RetrieveClanInfoRequestProto_Builder*) clearGrabType {
  result.hasGrabType = NO;
  result.grabType = RetrieveClanInfoRequestProto_ClanInfoGrabTypeAll;
  return self;
}
- (BOOL) hasBeforeThisClanId {
  return result.hasBeforeThisClanId;
}
- (int32_t) beforeThisClanId {
  return result.beforeThisClanId;
}
- (RetrieveClanInfoRequestProto_Builder*) setBeforeThisClanId:(int32_t) value {
  result.hasBeforeThisClanId = YES;
  result.beforeThisClanId = value;
  return self;
}
- (RetrieveClanInfoRequestProto_Builder*) clearBeforeThisClanId {
  result.hasBeforeThisClanId = NO;
  result.beforeThisClanId = 0;
  return self;
}
- (BOOL) hasIsForBrowsingList {
  return result.hasIsForBrowsingList;
}
- (BOOL) isForBrowsingList {
  return result.isForBrowsingList;
}
- (RetrieveClanInfoRequestProto_Builder*) setIsForBrowsingList:(BOOL) value {
  result.hasIsForBrowsingList = YES;
  result.isForBrowsingList = value;
  return self;
}
- (RetrieveClanInfoRequestProto_Builder*) clearIsForBrowsingList {
  result.hasIsForBrowsingList = NO;
  result.isForBrowsingList = NO;
  return self;
}
@end

@interface RetrieveClanInfoResponseProto ()
@property (retain) MinimumUserProto* sender;
@property (retain) NSMutableArray* mutableMembersList;
@property (retain) NSMutableArray* mutableClanInfoList;
@property RetrieveClanInfoResponseProto_RetrieveClanInfoStatus status;
@property BOOL isForSearch;
@property BOOL isForBrowsingList;
@property int32_t clanId;
@property (retain) NSString* clanName;
@property int32_t beforeThisClanId;
@property (retain) NSMutableArray* mutableMonsterTeamsList;
@end

@implementation RetrieveClanInfoResponseProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value {
  hasSender_ = !!value;
}
@synthesize sender;
@synthesize mutableMembersList;
@synthesize mutableClanInfoList;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value {
  hasStatus_ = !!value;
}
@synthesize status;
- (BOOL) hasIsForSearch {
  return !!hasIsForSearch_;
}
- (void) setHasIsForSearch:(BOOL) value {
  hasIsForSearch_ = !!value;
}
- (BOOL) isForSearch {
  return !!isForSearch_;
}
- (void) setIsForSearch:(BOOL) value {
  isForSearch_ = !!value;
}
- (BOOL) hasIsForBrowsingList {
  return !!hasIsForBrowsingList_;
}
- (void) setHasIsForBrowsingList:(BOOL) value {
  hasIsForBrowsingList_ = !!value;
}
- (BOOL) isForBrowsingList {
  return !!isForBrowsingList_;
}
- (void) setIsForBrowsingList:(BOOL) value {
  isForBrowsingList_ = !!value;
}
- (BOOL) hasClanId {
  return !!hasClanId_;
}
- (void) setHasClanId:(BOOL) value {
  hasClanId_ = !!value;
}
@synthesize clanId;
- (BOOL) hasClanName {
  return !!hasClanName_;
}
- (void) setHasClanName:(BOOL) value {
  hasClanName_ = !!value;
}
@synthesize clanName;
- (BOOL) hasBeforeThisClanId {
  return !!hasBeforeThisClanId_;
}
- (void) setHasBeforeThisClanId:(BOOL) value {
  hasBeforeThisClanId_ = !!value;
}
@synthesize beforeThisClanId;
@synthesize mutableMonsterTeamsList;
- (void) dealloc {
  self.sender = nil;
  self.mutableMembersList = nil;
  self.mutableClanInfoList = nil;
  self.clanName = nil;
  self.mutableMonsterTeamsList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.status = RetrieveClanInfoResponseProto_RetrieveClanInfoStatusSuccess;
    self.isForSearch = NO;
    self.isForBrowsingList = NO;
    self.clanId = 0;
    self.clanName = @"";
    self.beforeThisClanId = 0;
  }
  return self;
}
static RetrieveClanInfoResponseProto* defaultRetrieveClanInfoResponseProtoInstance = nil;
+ (void) initialize {
  if (self == [RetrieveClanInfoResponseProto class]) {
    defaultRetrieveClanInfoResponseProtoInstance = [[RetrieveClanInfoResponseProto alloc] init];
  }
}
+ (RetrieveClanInfoResponseProto*) defaultInstance {
  return defaultRetrieveClanInfoResponseProtoInstance;
}
- (RetrieveClanInfoResponseProto*) defaultInstance {
  return defaultRetrieveClanInfoResponseProtoInstance;
}
- (NSArray*) membersList {
  return mutableMembersList;
}
- (MinimumUserProtoForClans*) membersAtIndex:(int32_t) index {
  id value = [mutableMembersList objectAtIndex:index];
  return value;
}
- (NSArray*) clanInfoList {
  return mutableClanInfoList;
}
- (FullClanProtoWithClanSize*) clanInfoAtIndex:(int32_t) index {
  id value = [mutableClanInfoList objectAtIndex:index];
  return value;
}
- (NSArray*) monsterTeamsList {
  return mutableMonsterTeamsList;
}
- (UserCurrentMonsterTeamProto*) monsterTeamsAtIndex:(int32_t) index {
  id value = [mutableMonsterTeamsList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  for (MinimumUserProtoForClans* element in self.membersList) {
    [output writeMessage:2 value:element];
  }
  for (FullClanProtoWithClanSize* element in self.clanInfoList) {
    [output writeMessage:3 value:element];
  }
  if (self.hasStatus) {
    [output writeEnum:4 value:self.status];
  }
  if (self.hasIsForSearch) {
    [output writeBool:5 value:self.isForSearch];
  }
  if (self.hasIsForBrowsingList) {
    [output writeBool:6 value:self.isForBrowsingList];
  }
  if (self.hasClanId) {
    [output writeInt32:7 value:self.clanId];
  }
  if (self.hasClanName) {
    [output writeString:8 value:self.clanName];
  }
  if (self.hasBeforeThisClanId) {
    [output writeInt32:9 value:self.beforeThisClanId];
  }
  for (UserCurrentMonsterTeamProto* element in self.monsterTeamsList) {
    [output writeMessage:10 value:element];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSender) {
    size += computeMessageSize(1, self.sender);
  }
  for (MinimumUserProtoForClans* element in self.membersList) {
    size += computeMessageSize(2, element);
  }
  for (FullClanProtoWithClanSize* element in self.clanInfoList) {
    size += computeMessageSize(3, element);
  }
  if (self.hasStatus) {
    size += computeEnumSize(4, self.status);
  }
  if (self.hasIsForSearch) {
    size += computeBoolSize(5, self.isForSearch);
  }
  if (self.hasIsForBrowsingList) {
    size += computeBoolSize(6, self.isForBrowsingList);
  }
  if (self.hasClanId) {
    size += computeInt32Size(7, self.clanId);
  }
  if (self.hasClanName) {
    size += computeStringSize(8, self.clanName);
  }
  if (self.hasBeforeThisClanId) {
    size += computeInt32Size(9, self.beforeThisClanId);
  }
  for (UserCurrentMonsterTeamProto* element in self.monsterTeamsList) {
    size += computeMessageSize(10, element);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (RetrieveClanInfoResponseProto*) parseFromData:(NSData*) data {
  return (RetrieveClanInfoResponseProto*)[[[RetrieveClanInfoResponseProto builder] mergeFromData:data] build];
}
+ (RetrieveClanInfoResponseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RetrieveClanInfoResponseProto*)[[[RetrieveClanInfoResponseProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (RetrieveClanInfoResponseProto*) parseFromInputStream:(NSInputStream*) input {
  return (RetrieveClanInfoResponseProto*)[[[RetrieveClanInfoResponseProto builder] mergeFromInputStream:input] build];
}
+ (RetrieveClanInfoResponseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RetrieveClanInfoResponseProto*)[[[RetrieveClanInfoResponseProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RetrieveClanInfoResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (RetrieveClanInfoResponseProto*)[[[RetrieveClanInfoResponseProto builder] mergeFromCodedInputStream:input] build];
}
+ (RetrieveClanInfoResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RetrieveClanInfoResponseProto*)[[[RetrieveClanInfoResponseProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RetrieveClanInfoResponseProto_Builder*) builder {
  return [[[RetrieveClanInfoResponseProto_Builder alloc] init] autorelease];
}
+ (RetrieveClanInfoResponseProto_Builder*) builderWithPrototype:(RetrieveClanInfoResponseProto*) prototype {
  return [[RetrieveClanInfoResponseProto builder] mergeFrom:prototype];
}
- (RetrieveClanInfoResponseProto_Builder*) builder {
  return [RetrieveClanInfoResponseProto builder];
}
@end

BOOL RetrieveClanInfoResponseProto_RetrieveClanInfoStatusIsValidValue(RetrieveClanInfoResponseProto_RetrieveClanInfoStatus value) {
  switch (value) {
    case RetrieveClanInfoResponseProto_RetrieveClanInfoStatusSuccess:
    case RetrieveClanInfoResponseProto_RetrieveClanInfoStatusOtherFail:
      return YES;
    default:
      return NO;
  }
}
@interface RetrieveClanInfoResponseProto_Builder()
@property (retain) RetrieveClanInfoResponseProto* result;
@end

@implementation RetrieveClanInfoResponseProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[RetrieveClanInfoResponseProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (RetrieveClanInfoResponseProto_Builder*) clear {
  self.result = [[[RetrieveClanInfoResponseProto alloc] init] autorelease];
  return self;
}
- (RetrieveClanInfoResponseProto_Builder*) clone {
  return [RetrieveClanInfoResponseProto builderWithPrototype:result];
}
- (RetrieveClanInfoResponseProto*) defaultInstance {
  return [RetrieveClanInfoResponseProto defaultInstance];
}
- (RetrieveClanInfoResponseProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (RetrieveClanInfoResponseProto*) buildPartial {
  RetrieveClanInfoResponseProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (RetrieveClanInfoResponseProto_Builder*) mergeFrom:(RetrieveClanInfoResponseProto*) other {
  if (other == [RetrieveClanInfoResponseProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.mutableMembersList.count > 0) {
    if (result.mutableMembersList == nil) {
      result.mutableMembersList = [NSMutableArray array];
    }
    [result.mutableMembersList addObjectsFromArray:other.mutableMembersList];
  }
  if (other.mutableClanInfoList.count > 0) {
    if (result.mutableClanInfoList == nil) {
      result.mutableClanInfoList = [NSMutableArray array];
    }
    [result.mutableClanInfoList addObjectsFromArray:other.mutableClanInfoList];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  if (other.hasIsForSearch) {
    [self setIsForSearch:other.isForSearch];
  }
  if (other.hasIsForBrowsingList) {
    [self setIsForBrowsingList:other.isForBrowsingList];
  }
  if (other.hasClanId) {
    [self setClanId:other.clanId];
  }
  if (other.hasClanName) {
    [self setClanName:other.clanName];
  }
  if (other.hasBeforeThisClanId) {
    [self setBeforeThisClanId:other.beforeThisClanId];
  }
  if (other.mutableMonsterTeamsList.count > 0) {
    if (result.mutableMonsterTeamsList == nil) {
      result.mutableMonsterTeamsList = [NSMutableArray array];
    }
    [result.mutableMonsterTeamsList addObjectsFromArray:other.mutableMonsterTeamsList];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (RetrieveClanInfoResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (RetrieveClanInfoResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        MinimumUserProtoForClans_Builder* subBuilder = [MinimumUserProtoForClans builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addMembers:[subBuilder buildPartial]];
        break;
      }
      case 26: {
        FullClanProtoWithClanSize_Builder* subBuilder = [FullClanProtoWithClanSize builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addClanInfo:[subBuilder buildPartial]];
        break;
      }
      case 32: {
        int32_t value = [input readEnum];
        if (RetrieveClanInfoResponseProto_RetrieveClanInfoStatusIsValidValue(value)) {
          [self setStatus:value];
        } else {
          [unknownFields mergeVarintField:4 value:value];
        }
        break;
      }
      case 40: {
        [self setIsForSearch:[input readBool]];
        break;
      }
      case 48: {
        [self setIsForBrowsingList:[input readBool]];
        break;
      }
      case 56: {
        [self setClanId:[input readInt32]];
        break;
      }
      case 66: {
        [self setClanName:[input readString]];
        break;
      }
      case 72: {
        [self setBeforeThisClanId:[input readInt32]];
        break;
      }
      case 82: {
        UserCurrentMonsterTeamProto_Builder* subBuilder = [UserCurrentMonsterTeamProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addMonsterTeams:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (RetrieveClanInfoResponseProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (RetrieveClanInfoResponseProto_Builder*) setSenderBuilder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (RetrieveClanInfoResponseProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (RetrieveClanInfoResponseProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (NSArray*) membersList {
  if (result.mutableMembersList == nil) { return [NSArray array]; }
  return result.mutableMembersList;
}
- (MinimumUserProtoForClans*) membersAtIndex:(int32_t) index {
  return [result membersAtIndex:index];
}
- (RetrieveClanInfoResponseProto_Builder*) replaceMembersAtIndex:(int32_t) index with:(MinimumUserProtoForClans*) value {
  [result.mutableMembersList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (RetrieveClanInfoResponseProto_Builder*) addAllMembers:(NSArray*) values {
  if (result.mutableMembersList == nil) {
    result.mutableMembersList = [NSMutableArray array];
  }
  [result.mutableMembersList addObjectsFromArray:values];
  return self;
}
- (RetrieveClanInfoResponseProto_Builder*) clearMembersList {
  result.mutableMembersList = nil;
  return self;
}
- (RetrieveClanInfoResponseProto_Builder*) addMembers:(MinimumUserProtoForClans*) value {
  if (result.mutableMembersList == nil) {
    result.mutableMembersList = [NSMutableArray array];
  }
  [result.mutableMembersList addObject:value];
  return self;
}
- (NSArray*) clanInfoList {
  if (result.mutableClanInfoList == nil) { return [NSArray array]; }
  return result.mutableClanInfoList;
}
- (FullClanProtoWithClanSize*) clanInfoAtIndex:(int32_t) index {
  return [result clanInfoAtIndex:index];
}
- (RetrieveClanInfoResponseProto_Builder*) replaceClanInfoAtIndex:(int32_t) index with:(FullClanProtoWithClanSize*) value {
  [result.mutableClanInfoList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (RetrieveClanInfoResponseProto_Builder*) addAllClanInfo:(NSArray*) values {
  if (result.mutableClanInfoList == nil) {
    result.mutableClanInfoList = [NSMutableArray array];
  }
  [result.mutableClanInfoList addObjectsFromArray:values];
  return self;
}
- (RetrieveClanInfoResponseProto_Builder*) clearClanInfoList {
  result.mutableClanInfoList = nil;
  return self;
}
- (RetrieveClanInfoResponseProto_Builder*) addClanInfo:(FullClanProtoWithClanSize*) value {
  if (result.mutableClanInfoList == nil) {
    result.mutableClanInfoList = [NSMutableArray array];
  }
  [result.mutableClanInfoList addObject:value];
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (RetrieveClanInfoResponseProto_RetrieveClanInfoStatus) status {
  return result.status;
}
- (RetrieveClanInfoResponseProto_Builder*) setStatus:(RetrieveClanInfoResponseProto_RetrieveClanInfoStatus) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (RetrieveClanInfoResponseProto_Builder*) clearStatus {
  result.hasStatus = NO;
  result.status = RetrieveClanInfoResponseProto_RetrieveClanInfoStatusSuccess;
  return self;
}
- (BOOL) hasIsForSearch {
  return result.hasIsForSearch;
}
- (BOOL) isForSearch {
  return result.isForSearch;
}
- (RetrieveClanInfoResponseProto_Builder*) setIsForSearch:(BOOL) value {
  result.hasIsForSearch = YES;
  result.isForSearch = value;
  return self;
}
- (RetrieveClanInfoResponseProto_Builder*) clearIsForSearch {
  result.hasIsForSearch = NO;
  result.isForSearch = NO;
  return self;
}
- (BOOL) hasIsForBrowsingList {
  return result.hasIsForBrowsingList;
}
- (BOOL) isForBrowsingList {
  return result.isForBrowsingList;
}
- (RetrieveClanInfoResponseProto_Builder*) setIsForBrowsingList:(BOOL) value {
  result.hasIsForBrowsingList = YES;
  result.isForBrowsingList = value;
  return self;
}
- (RetrieveClanInfoResponseProto_Builder*) clearIsForBrowsingList {
  result.hasIsForBrowsingList = NO;
  result.isForBrowsingList = NO;
  return self;
}
- (BOOL) hasClanId {
  return result.hasClanId;
}
- (int32_t) clanId {
  return result.clanId;
}
- (RetrieveClanInfoResponseProto_Builder*) setClanId:(int32_t) value {
  result.hasClanId = YES;
  result.clanId = value;
  return self;
}
- (RetrieveClanInfoResponseProto_Builder*) clearClanId {
  result.hasClanId = NO;
  result.clanId = 0;
  return self;
}
- (BOOL) hasClanName {
  return result.hasClanName;
}
- (NSString*) clanName {
  return result.clanName;
}
- (RetrieveClanInfoResponseProto_Builder*) setClanName:(NSString*) value {
  result.hasClanName = YES;
  result.clanName = value;
  return self;
}
- (RetrieveClanInfoResponseProto_Builder*) clearClanName {
  result.hasClanName = NO;
  result.clanName = @"";
  return self;
}
- (BOOL) hasBeforeThisClanId {
  return result.hasBeforeThisClanId;
}
- (int32_t) beforeThisClanId {
  return result.beforeThisClanId;
}
- (RetrieveClanInfoResponseProto_Builder*) setBeforeThisClanId:(int32_t) value {
  result.hasBeforeThisClanId = YES;
  result.beforeThisClanId = value;
  return self;
}
- (RetrieveClanInfoResponseProto_Builder*) clearBeforeThisClanId {
  result.hasBeforeThisClanId = NO;
  result.beforeThisClanId = 0;
  return self;
}
- (NSArray*) monsterTeamsList {
  if (result.mutableMonsterTeamsList == nil) { return [NSArray array]; }
  return result.mutableMonsterTeamsList;
}
- (UserCurrentMonsterTeamProto*) monsterTeamsAtIndex:(int32_t) index {
  return [result monsterTeamsAtIndex:index];
}
- (RetrieveClanInfoResponseProto_Builder*) replaceMonsterTeamsAtIndex:(int32_t) index with:(UserCurrentMonsterTeamProto*) value {
  [result.mutableMonsterTeamsList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (RetrieveClanInfoResponseProto_Builder*) addAllMonsterTeams:(NSArray*) values {
  if (result.mutableMonsterTeamsList == nil) {
    result.mutableMonsterTeamsList = [NSMutableArray array];
  }
  [result.mutableMonsterTeamsList addObjectsFromArray:values];
  return self;
}
- (RetrieveClanInfoResponseProto_Builder*) clearMonsterTeamsList {
  result.mutableMonsterTeamsList = nil;
  return self;
}
- (RetrieveClanInfoResponseProto_Builder*) addMonsterTeams:(UserCurrentMonsterTeamProto*) value {
  if (result.mutableMonsterTeamsList == nil) {
    result.mutableMonsterTeamsList = [NSMutableArray array];
  }
  [result.mutableMonsterTeamsList addObject:value];
  return self;
}
@end

@interface TransferClanOwnershipRequestProto ()
@property (retain) MinimumUserProto* sender;
@property int32_t clanOwnerIdNew;
@end

@implementation TransferClanOwnershipRequestProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value {
  hasSender_ = !!value;
}
@synthesize sender;
- (BOOL) hasClanOwnerIdNew {
  return !!hasClanOwnerIdNew_;
}
- (void) setHasClanOwnerIdNew:(BOOL) value {
  hasClanOwnerIdNew_ = !!value;
}
@synthesize clanOwnerIdNew;
- (void) dealloc {
  self.sender = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.clanOwnerIdNew = 0;
  }
  return self;
}
static TransferClanOwnershipRequestProto* defaultTransferClanOwnershipRequestProtoInstance = nil;
+ (void) initialize {
  if (self == [TransferClanOwnershipRequestProto class]) {
    defaultTransferClanOwnershipRequestProtoInstance = [[TransferClanOwnershipRequestProto alloc] init];
  }
}
+ (TransferClanOwnershipRequestProto*) defaultInstance {
  return defaultTransferClanOwnershipRequestProtoInstance;
}
- (TransferClanOwnershipRequestProto*) defaultInstance {
  return defaultTransferClanOwnershipRequestProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasClanOwnerIdNew) {
    [output writeInt32:2 value:self.clanOwnerIdNew];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSender) {
    size += computeMessageSize(1, self.sender);
  }
  if (self.hasClanOwnerIdNew) {
    size += computeInt32Size(2, self.clanOwnerIdNew);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (TransferClanOwnershipRequestProto*) parseFromData:(NSData*) data {
  return (TransferClanOwnershipRequestProto*)[[[TransferClanOwnershipRequestProto builder] mergeFromData:data] build];
}
+ (TransferClanOwnershipRequestProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TransferClanOwnershipRequestProto*)[[[TransferClanOwnershipRequestProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TransferClanOwnershipRequestProto*) parseFromInputStream:(NSInputStream*) input {
  return (TransferClanOwnershipRequestProto*)[[[TransferClanOwnershipRequestProto builder] mergeFromInputStream:input] build];
}
+ (TransferClanOwnershipRequestProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TransferClanOwnershipRequestProto*)[[[TransferClanOwnershipRequestProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TransferClanOwnershipRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TransferClanOwnershipRequestProto*)[[[TransferClanOwnershipRequestProto builder] mergeFromCodedInputStream:input] build];
}
+ (TransferClanOwnershipRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TransferClanOwnershipRequestProto*)[[[TransferClanOwnershipRequestProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TransferClanOwnershipRequestProto_Builder*) builder {
  return [[[TransferClanOwnershipRequestProto_Builder alloc] init] autorelease];
}
+ (TransferClanOwnershipRequestProto_Builder*) builderWithPrototype:(TransferClanOwnershipRequestProto*) prototype {
  return [[TransferClanOwnershipRequestProto builder] mergeFrom:prototype];
}
- (TransferClanOwnershipRequestProto_Builder*) builder {
  return [TransferClanOwnershipRequestProto builder];
}
@end

@interface TransferClanOwnershipRequestProto_Builder()
@property (retain) TransferClanOwnershipRequestProto* result;
@end

@implementation TransferClanOwnershipRequestProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[TransferClanOwnershipRequestProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (TransferClanOwnershipRequestProto_Builder*) clear {
  self.result = [[[TransferClanOwnershipRequestProto alloc] init] autorelease];
  return self;
}
- (TransferClanOwnershipRequestProto_Builder*) clone {
  return [TransferClanOwnershipRequestProto builderWithPrototype:result];
}
- (TransferClanOwnershipRequestProto*) defaultInstance {
  return [TransferClanOwnershipRequestProto defaultInstance];
}
- (TransferClanOwnershipRequestProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TransferClanOwnershipRequestProto*) buildPartial {
  TransferClanOwnershipRequestProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (TransferClanOwnershipRequestProto_Builder*) mergeFrom:(TransferClanOwnershipRequestProto*) other {
  if (other == [TransferClanOwnershipRequestProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasClanOwnerIdNew) {
    [self setClanOwnerIdNew:other.clanOwnerIdNew];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TransferClanOwnershipRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TransferClanOwnershipRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setClanOwnerIdNew:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (TransferClanOwnershipRequestProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (TransferClanOwnershipRequestProto_Builder*) setSenderBuilder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (TransferClanOwnershipRequestProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (TransferClanOwnershipRequestProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasClanOwnerIdNew {
  return result.hasClanOwnerIdNew;
}
- (int32_t) clanOwnerIdNew {
  return result.clanOwnerIdNew;
}
- (TransferClanOwnershipRequestProto_Builder*) setClanOwnerIdNew:(int32_t) value {
  result.hasClanOwnerIdNew = YES;
  result.clanOwnerIdNew = value;
  return self;
}
- (TransferClanOwnershipRequestProto_Builder*) clearClanOwnerIdNew {
  result.hasClanOwnerIdNew = NO;
  result.clanOwnerIdNew = 0;
  return self;
}
@end

@interface TransferClanOwnershipResponseProto ()
@property (retain) MinimumUserProto* sender;
@property TransferClanOwnershipResponseProto_TransferClanOwnershipStatus status;
@property (retain) MinimumClanProto* minClan;
@property (retain) FullClanProtoWithClanSize* fullClan;
@property (retain) MinimumUserProto* clanOwnerNew;
@end

@implementation TransferClanOwnershipResponseProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value {
  hasSender_ = !!value;
}
@synthesize sender;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value {
  hasStatus_ = !!value;
}
@synthesize status;
- (BOOL) hasMinClan {
  return !!hasMinClan_;
}
- (void) setHasMinClan:(BOOL) value {
  hasMinClan_ = !!value;
}
@synthesize minClan;
- (BOOL) hasFullClan {
  return !!hasFullClan_;
}
- (void) setHasFullClan:(BOOL) value {
  hasFullClan_ = !!value;
}
@synthesize fullClan;
- (BOOL) hasClanOwnerNew {
  return !!hasClanOwnerNew_;
}
- (void) setHasClanOwnerNew:(BOOL) value {
  hasClanOwnerNew_ = !!value;
}
@synthesize clanOwnerNew;
- (void) dealloc {
  self.sender = nil;
  self.minClan = nil;
  self.fullClan = nil;
  self.clanOwnerNew = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.status = TransferClanOwnershipResponseProto_TransferClanOwnershipStatusSuccess;
    self.minClan = [MinimumClanProto defaultInstance];
    self.fullClan = [FullClanProtoWithClanSize defaultInstance];
    self.clanOwnerNew = [MinimumUserProto defaultInstance];
  }
  return self;
}
static TransferClanOwnershipResponseProto* defaultTransferClanOwnershipResponseProtoInstance = nil;
+ (void) initialize {
  if (self == [TransferClanOwnershipResponseProto class]) {
    defaultTransferClanOwnershipResponseProtoInstance = [[TransferClanOwnershipResponseProto alloc] init];
  }
}
+ (TransferClanOwnershipResponseProto*) defaultInstance {
  return defaultTransferClanOwnershipResponseProtoInstance;
}
- (TransferClanOwnershipResponseProto*) defaultInstance {
  return defaultTransferClanOwnershipResponseProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasStatus) {
    [output writeEnum:2 value:self.status];
  }
  if (self.hasMinClan) {
    [output writeMessage:3 value:self.minClan];
  }
  if (self.hasFullClan) {
    [output writeMessage:4 value:self.fullClan];
  }
  if (self.hasClanOwnerNew) {
    [output writeMessage:5 value:self.clanOwnerNew];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSender) {
    size += computeMessageSize(1, self.sender);
  }
  if (self.hasStatus) {
    size += computeEnumSize(2, self.status);
  }
  if (self.hasMinClan) {
    size += computeMessageSize(3, self.minClan);
  }
  if (self.hasFullClan) {
    size += computeMessageSize(4, self.fullClan);
  }
  if (self.hasClanOwnerNew) {
    size += computeMessageSize(5, self.clanOwnerNew);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (TransferClanOwnershipResponseProto*) parseFromData:(NSData*) data {
  return (TransferClanOwnershipResponseProto*)[[[TransferClanOwnershipResponseProto builder] mergeFromData:data] build];
}
+ (TransferClanOwnershipResponseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TransferClanOwnershipResponseProto*)[[[TransferClanOwnershipResponseProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TransferClanOwnershipResponseProto*) parseFromInputStream:(NSInputStream*) input {
  return (TransferClanOwnershipResponseProto*)[[[TransferClanOwnershipResponseProto builder] mergeFromInputStream:input] build];
}
+ (TransferClanOwnershipResponseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TransferClanOwnershipResponseProto*)[[[TransferClanOwnershipResponseProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TransferClanOwnershipResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TransferClanOwnershipResponseProto*)[[[TransferClanOwnershipResponseProto builder] mergeFromCodedInputStream:input] build];
}
+ (TransferClanOwnershipResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TransferClanOwnershipResponseProto*)[[[TransferClanOwnershipResponseProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TransferClanOwnershipResponseProto_Builder*) builder {
  return [[[TransferClanOwnershipResponseProto_Builder alloc] init] autorelease];
}
+ (TransferClanOwnershipResponseProto_Builder*) builderWithPrototype:(TransferClanOwnershipResponseProto*) prototype {
  return [[TransferClanOwnershipResponseProto builder] mergeFrom:prototype];
}
- (TransferClanOwnershipResponseProto_Builder*) builder {
  return [TransferClanOwnershipResponseProto builder];
}
@end

BOOL TransferClanOwnershipResponseProto_TransferClanOwnershipStatusIsValidValue(TransferClanOwnershipResponseProto_TransferClanOwnershipStatus value) {
  switch (value) {
    case TransferClanOwnershipResponseProto_TransferClanOwnershipStatusSuccess:
    case TransferClanOwnershipResponseProto_TransferClanOwnershipStatusFailOther:
    case TransferClanOwnershipResponseProto_TransferClanOwnershipStatusFailNotAuthorized:
    case TransferClanOwnershipResponseProto_TransferClanOwnershipStatusFailNewOwnerNotInClan:
      return YES;
    default:
      return NO;
  }
}
@interface TransferClanOwnershipResponseProto_Builder()
@property (retain) TransferClanOwnershipResponseProto* result;
@end

@implementation TransferClanOwnershipResponseProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[TransferClanOwnershipResponseProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (TransferClanOwnershipResponseProto_Builder*) clear {
  self.result = [[[TransferClanOwnershipResponseProto alloc] init] autorelease];
  return self;
}
- (TransferClanOwnershipResponseProto_Builder*) clone {
  return [TransferClanOwnershipResponseProto builderWithPrototype:result];
}
- (TransferClanOwnershipResponseProto*) defaultInstance {
  return [TransferClanOwnershipResponseProto defaultInstance];
}
- (TransferClanOwnershipResponseProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TransferClanOwnershipResponseProto*) buildPartial {
  TransferClanOwnershipResponseProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (TransferClanOwnershipResponseProto_Builder*) mergeFrom:(TransferClanOwnershipResponseProto*) other {
  if (other == [TransferClanOwnershipResponseProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  if (other.hasMinClan) {
    [self mergeMinClan:other.minClan];
  }
  if (other.hasFullClan) {
    [self mergeFullClan:other.fullClan];
  }
  if (other.hasClanOwnerNew) {
    [self mergeClanOwnerNew:other.clanOwnerNew];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TransferClanOwnershipResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TransferClanOwnershipResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        int32_t value = [input readEnum];
        if (TransferClanOwnershipResponseProto_TransferClanOwnershipStatusIsValidValue(value)) {
          [self setStatus:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
      case 26: {
        MinimumClanProto_Builder* subBuilder = [MinimumClanProto builder];
        if (self.hasMinClan) {
          [subBuilder mergeFrom:self.minClan];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setMinClan:[subBuilder buildPartial]];
        break;
      }
      case 34: {
        FullClanProtoWithClanSize_Builder* subBuilder = [FullClanProtoWithClanSize builder];
        if (self.hasFullClan) {
          [subBuilder mergeFrom:self.fullClan];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setFullClan:[subBuilder buildPartial]];
        break;
      }
      case 42: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasClanOwnerNew) {
          [subBuilder mergeFrom:self.clanOwnerNew];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setClanOwnerNew:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (TransferClanOwnershipResponseProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (TransferClanOwnershipResponseProto_Builder*) setSenderBuilder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (TransferClanOwnershipResponseProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (TransferClanOwnershipResponseProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (TransferClanOwnershipResponseProto_TransferClanOwnershipStatus) status {
  return result.status;
}
- (TransferClanOwnershipResponseProto_Builder*) setStatus:(TransferClanOwnershipResponseProto_TransferClanOwnershipStatus) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (TransferClanOwnershipResponseProto_Builder*) clearStatus {
  result.hasStatus = NO;
  result.status = TransferClanOwnershipResponseProto_TransferClanOwnershipStatusSuccess;
  return self;
}
- (BOOL) hasMinClan {
  return result.hasMinClan;
}
- (MinimumClanProto*) minClan {
  return result.minClan;
}
- (TransferClanOwnershipResponseProto_Builder*) setMinClan:(MinimumClanProto*) value {
  result.hasMinClan = YES;
  result.minClan = value;
  return self;
}
- (TransferClanOwnershipResponseProto_Builder*) setMinClanBuilder:(MinimumClanProto_Builder*) builderForValue {
  return [self setMinClan:[builderForValue build]];
}
- (TransferClanOwnershipResponseProto_Builder*) mergeMinClan:(MinimumClanProto*) value {
  if (result.hasMinClan &&
      result.minClan != [MinimumClanProto defaultInstance]) {
    result.minClan =
      [[[MinimumClanProto builderWithPrototype:result.minClan] mergeFrom:value] buildPartial];
  } else {
    result.minClan = value;
  }
  result.hasMinClan = YES;
  return self;
}
- (TransferClanOwnershipResponseProto_Builder*) clearMinClan {
  result.hasMinClan = NO;
  result.minClan = [MinimumClanProto defaultInstance];
  return self;
}
- (BOOL) hasFullClan {
  return result.hasFullClan;
}
- (FullClanProtoWithClanSize*) fullClan {
  return result.fullClan;
}
- (TransferClanOwnershipResponseProto_Builder*) setFullClan:(FullClanProtoWithClanSize*) value {
  result.hasFullClan = YES;
  result.fullClan = value;
  return self;
}
- (TransferClanOwnershipResponseProto_Builder*) setFullClanBuilder:(FullClanProtoWithClanSize_Builder*) builderForValue {
  return [self setFullClan:[builderForValue build]];
}
- (TransferClanOwnershipResponseProto_Builder*) mergeFullClan:(FullClanProtoWithClanSize*) value {
  if (result.hasFullClan &&
      result.fullClan != [FullClanProtoWithClanSize defaultInstance]) {
    result.fullClan =
      [[[FullClanProtoWithClanSize builderWithPrototype:result.fullClan] mergeFrom:value] buildPartial];
  } else {
    result.fullClan = value;
  }
  result.hasFullClan = YES;
  return self;
}
- (TransferClanOwnershipResponseProto_Builder*) clearFullClan {
  result.hasFullClan = NO;
  result.fullClan = [FullClanProtoWithClanSize defaultInstance];
  return self;
}
- (BOOL) hasClanOwnerNew {
  return result.hasClanOwnerNew;
}
- (MinimumUserProto*) clanOwnerNew {
  return result.clanOwnerNew;
}
- (TransferClanOwnershipResponseProto_Builder*) setClanOwnerNew:(MinimumUserProto*) value {
  result.hasClanOwnerNew = YES;
  result.clanOwnerNew = value;
  return self;
}
- (TransferClanOwnershipResponseProto_Builder*) setClanOwnerNewBuilder:(MinimumUserProto_Builder*) builderForValue {
  return [self setClanOwnerNew:[builderForValue build]];
}
- (TransferClanOwnershipResponseProto_Builder*) mergeClanOwnerNew:(MinimumUserProto*) value {
  if (result.hasClanOwnerNew &&
      result.clanOwnerNew != [MinimumUserProto defaultInstance]) {
    result.clanOwnerNew =
      [[[MinimumUserProto builderWithPrototype:result.clanOwnerNew] mergeFrom:value] buildPartial];
  } else {
    result.clanOwnerNew = value;
  }
  result.hasClanOwnerNew = YES;
  return self;
}
- (TransferClanOwnershipResponseProto_Builder*) clearClanOwnerNew {
  result.hasClanOwnerNew = NO;
  result.clanOwnerNew = [MinimumUserProto defaultInstance];
  return self;
}
@end

@interface BootPlayerFromClanRequestProto ()
@property (retain) MinimumUserProto* sender;
@property int32_t playerToBoot;
@end

@implementation BootPlayerFromClanRequestProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value {
  hasSender_ = !!value;
}
@synthesize sender;
- (BOOL) hasPlayerToBoot {
  return !!hasPlayerToBoot_;
}
- (void) setHasPlayerToBoot:(BOOL) value {
  hasPlayerToBoot_ = !!value;
}
@synthesize playerToBoot;
- (void) dealloc {
  self.sender = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.playerToBoot = 0;
  }
  return self;
}
static BootPlayerFromClanRequestProto* defaultBootPlayerFromClanRequestProtoInstance = nil;
+ (void) initialize {
  if (self == [BootPlayerFromClanRequestProto class]) {
    defaultBootPlayerFromClanRequestProtoInstance = [[BootPlayerFromClanRequestProto alloc] init];
  }
}
+ (BootPlayerFromClanRequestProto*) defaultInstance {
  return defaultBootPlayerFromClanRequestProtoInstance;
}
- (BootPlayerFromClanRequestProto*) defaultInstance {
  return defaultBootPlayerFromClanRequestProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasPlayerToBoot) {
    [output writeInt32:2 value:self.playerToBoot];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSender) {
    size += computeMessageSize(1, self.sender);
  }
  if (self.hasPlayerToBoot) {
    size += computeInt32Size(2, self.playerToBoot);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (BootPlayerFromClanRequestProto*) parseFromData:(NSData*) data {
  return (BootPlayerFromClanRequestProto*)[[[BootPlayerFromClanRequestProto builder] mergeFromData:data] build];
}
+ (BootPlayerFromClanRequestProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BootPlayerFromClanRequestProto*)[[[BootPlayerFromClanRequestProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (BootPlayerFromClanRequestProto*) parseFromInputStream:(NSInputStream*) input {
  return (BootPlayerFromClanRequestProto*)[[[BootPlayerFromClanRequestProto builder] mergeFromInputStream:input] build];
}
+ (BootPlayerFromClanRequestProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BootPlayerFromClanRequestProto*)[[[BootPlayerFromClanRequestProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BootPlayerFromClanRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (BootPlayerFromClanRequestProto*)[[[BootPlayerFromClanRequestProto builder] mergeFromCodedInputStream:input] build];
}
+ (BootPlayerFromClanRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BootPlayerFromClanRequestProto*)[[[BootPlayerFromClanRequestProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BootPlayerFromClanRequestProto_Builder*) builder {
  return [[[BootPlayerFromClanRequestProto_Builder alloc] init] autorelease];
}
+ (BootPlayerFromClanRequestProto_Builder*) builderWithPrototype:(BootPlayerFromClanRequestProto*) prototype {
  return [[BootPlayerFromClanRequestProto builder] mergeFrom:prototype];
}
- (BootPlayerFromClanRequestProto_Builder*) builder {
  return [BootPlayerFromClanRequestProto builder];
}
@end

@interface BootPlayerFromClanRequestProto_Builder()
@property (retain) BootPlayerFromClanRequestProto* result;
@end

@implementation BootPlayerFromClanRequestProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[BootPlayerFromClanRequestProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (BootPlayerFromClanRequestProto_Builder*) clear {
  self.result = [[[BootPlayerFromClanRequestProto alloc] init] autorelease];
  return self;
}
- (BootPlayerFromClanRequestProto_Builder*) clone {
  return [BootPlayerFromClanRequestProto builderWithPrototype:result];
}
- (BootPlayerFromClanRequestProto*) defaultInstance {
  return [BootPlayerFromClanRequestProto defaultInstance];
}
- (BootPlayerFromClanRequestProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (BootPlayerFromClanRequestProto*) buildPartial {
  BootPlayerFromClanRequestProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (BootPlayerFromClanRequestProto_Builder*) mergeFrom:(BootPlayerFromClanRequestProto*) other {
  if (other == [BootPlayerFromClanRequestProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasPlayerToBoot) {
    [self setPlayerToBoot:other.playerToBoot];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (BootPlayerFromClanRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (BootPlayerFromClanRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setPlayerToBoot:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (BootPlayerFromClanRequestProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (BootPlayerFromClanRequestProto_Builder*) setSenderBuilder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (BootPlayerFromClanRequestProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (BootPlayerFromClanRequestProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasPlayerToBoot {
  return result.hasPlayerToBoot;
}
- (int32_t) playerToBoot {
  return result.playerToBoot;
}
- (BootPlayerFromClanRequestProto_Builder*) setPlayerToBoot:(int32_t) value {
  result.hasPlayerToBoot = YES;
  result.playerToBoot = value;
  return self;
}
- (BootPlayerFromClanRequestProto_Builder*) clearPlayerToBoot {
  result.hasPlayerToBoot = NO;
  result.playerToBoot = 0;
  return self;
}
@end

@interface BootPlayerFromClanResponseProto ()
@property (retain) MinimumUserProto* sender;
@property (retain) MinimumUserProto* playerToBoot;
@property BootPlayerFromClanResponseProto_BootPlayerFromClanStatus status;
@end

@implementation BootPlayerFromClanResponseProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value {
  hasSender_ = !!value;
}
@synthesize sender;
- (BOOL) hasPlayerToBoot {
  return !!hasPlayerToBoot_;
}
- (void) setHasPlayerToBoot:(BOOL) value {
  hasPlayerToBoot_ = !!value;
}
@synthesize playerToBoot;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value {
  hasStatus_ = !!value;
}
@synthesize status;
- (void) dealloc {
  self.sender = nil;
  self.playerToBoot = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.playerToBoot = [MinimumUserProto defaultInstance];
    self.status = BootPlayerFromClanResponseProto_BootPlayerFromClanStatusSuccess;
  }
  return self;
}
static BootPlayerFromClanResponseProto* defaultBootPlayerFromClanResponseProtoInstance = nil;
+ (void) initialize {
  if (self == [BootPlayerFromClanResponseProto class]) {
    defaultBootPlayerFromClanResponseProtoInstance = [[BootPlayerFromClanResponseProto alloc] init];
  }
}
+ (BootPlayerFromClanResponseProto*) defaultInstance {
  return defaultBootPlayerFromClanResponseProtoInstance;
}
- (BootPlayerFromClanResponseProto*) defaultInstance {
  return defaultBootPlayerFromClanResponseProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasPlayerToBoot) {
    [output writeMessage:2 value:self.playerToBoot];
  }
  if (self.hasStatus) {
    [output writeEnum:3 value:self.status];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSender) {
    size += computeMessageSize(1, self.sender);
  }
  if (self.hasPlayerToBoot) {
    size += computeMessageSize(2, self.playerToBoot);
  }
  if (self.hasStatus) {
    size += computeEnumSize(3, self.status);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (BootPlayerFromClanResponseProto*) parseFromData:(NSData*) data {
  return (BootPlayerFromClanResponseProto*)[[[BootPlayerFromClanResponseProto builder] mergeFromData:data] build];
}
+ (BootPlayerFromClanResponseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BootPlayerFromClanResponseProto*)[[[BootPlayerFromClanResponseProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (BootPlayerFromClanResponseProto*) parseFromInputStream:(NSInputStream*) input {
  return (BootPlayerFromClanResponseProto*)[[[BootPlayerFromClanResponseProto builder] mergeFromInputStream:input] build];
}
+ (BootPlayerFromClanResponseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BootPlayerFromClanResponseProto*)[[[BootPlayerFromClanResponseProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BootPlayerFromClanResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (BootPlayerFromClanResponseProto*)[[[BootPlayerFromClanResponseProto builder] mergeFromCodedInputStream:input] build];
}
+ (BootPlayerFromClanResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BootPlayerFromClanResponseProto*)[[[BootPlayerFromClanResponseProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BootPlayerFromClanResponseProto_Builder*) builder {
  return [[[BootPlayerFromClanResponseProto_Builder alloc] init] autorelease];
}
+ (BootPlayerFromClanResponseProto_Builder*) builderWithPrototype:(BootPlayerFromClanResponseProto*) prototype {
  return [[BootPlayerFromClanResponseProto builder] mergeFrom:prototype];
}
- (BootPlayerFromClanResponseProto_Builder*) builder {
  return [BootPlayerFromClanResponseProto builder];
}
@end

BOOL BootPlayerFromClanResponseProto_BootPlayerFromClanStatusIsValidValue(BootPlayerFromClanResponseProto_BootPlayerFromClanStatus value) {
  switch (value) {
    case BootPlayerFromClanResponseProto_BootPlayerFromClanStatusSuccess:
    case BootPlayerFromClanResponseProto_BootPlayerFromClanStatusFailOther:
    case BootPlayerFromClanResponseProto_BootPlayerFromClanStatusFailNotAuthorized:
    case BootPlayerFromClanResponseProto_BootPlayerFromClanStatusFailBootedNotInClan:
      return YES;
    default:
      return NO;
  }
}
@interface BootPlayerFromClanResponseProto_Builder()
@property (retain) BootPlayerFromClanResponseProto* result;
@end

@implementation BootPlayerFromClanResponseProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[BootPlayerFromClanResponseProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (BootPlayerFromClanResponseProto_Builder*) clear {
  self.result = [[[BootPlayerFromClanResponseProto alloc] init] autorelease];
  return self;
}
- (BootPlayerFromClanResponseProto_Builder*) clone {
  return [BootPlayerFromClanResponseProto builderWithPrototype:result];
}
- (BootPlayerFromClanResponseProto*) defaultInstance {
  return [BootPlayerFromClanResponseProto defaultInstance];
}
- (BootPlayerFromClanResponseProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (BootPlayerFromClanResponseProto*) buildPartial {
  BootPlayerFromClanResponseProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (BootPlayerFromClanResponseProto_Builder*) mergeFrom:(BootPlayerFromClanResponseProto*) other {
  if (other == [BootPlayerFromClanResponseProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasPlayerToBoot) {
    [self mergePlayerToBoot:other.playerToBoot];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (BootPlayerFromClanResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (BootPlayerFromClanResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasPlayerToBoot) {
          [subBuilder mergeFrom:self.playerToBoot];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setPlayerToBoot:[subBuilder buildPartial]];
        break;
      }
      case 24: {
        int32_t value = [input readEnum];
        if (BootPlayerFromClanResponseProto_BootPlayerFromClanStatusIsValidValue(value)) {
          [self setStatus:value];
        } else {
          [unknownFields mergeVarintField:3 value:value];
        }
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (BootPlayerFromClanResponseProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (BootPlayerFromClanResponseProto_Builder*) setSenderBuilder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (BootPlayerFromClanResponseProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (BootPlayerFromClanResponseProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasPlayerToBoot {
  return result.hasPlayerToBoot;
}
- (MinimumUserProto*) playerToBoot {
  return result.playerToBoot;
}
- (BootPlayerFromClanResponseProto_Builder*) setPlayerToBoot:(MinimumUserProto*) value {
  result.hasPlayerToBoot = YES;
  result.playerToBoot = value;
  return self;
}
- (BootPlayerFromClanResponseProto_Builder*) setPlayerToBootBuilder:(MinimumUserProto_Builder*) builderForValue {
  return [self setPlayerToBoot:[builderForValue build]];
}
- (BootPlayerFromClanResponseProto_Builder*) mergePlayerToBoot:(MinimumUserProto*) value {
  if (result.hasPlayerToBoot &&
      result.playerToBoot != [MinimumUserProto defaultInstance]) {
    result.playerToBoot =
      [[[MinimumUserProto builderWithPrototype:result.playerToBoot] mergeFrom:value] buildPartial];
  } else {
    result.playerToBoot = value;
  }
  result.hasPlayerToBoot = YES;
  return self;
}
- (BootPlayerFromClanResponseProto_Builder*) clearPlayerToBoot {
  result.hasPlayerToBoot = NO;
  result.playerToBoot = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (BootPlayerFromClanResponseProto_BootPlayerFromClanStatus) status {
  return result.status;
}
- (BootPlayerFromClanResponseProto_Builder*) setStatus:(BootPlayerFromClanResponseProto_BootPlayerFromClanStatus) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (BootPlayerFromClanResponseProto_Builder*) clearStatus {
  result.hasStatus = NO;
  result.status = BootPlayerFromClanResponseProto_BootPlayerFromClanStatusSuccess;
  return self;
}
@end

@interface ChangeClanSettingsRequestProto ()
@property (retain) MinimumUserProto* sender;
@property BOOL isChangeDescription;
@property (retain) NSString* descriptionNow;
@property BOOL isChangeJoinType;
@property BOOL requestToJoinRequired;
@property BOOL isChangeIcon;
@property int32_t iconId;
@end

@implementation ChangeClanSettingsRequestProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value {
  hasSender_ = !!value;
}
@synthesize sender;
- (BOOL) hasIsChangeDescription {
  return !!hasIsChangeDescription_;
}
- (void) setHasIsChangeDescription:(BOOL) value {
  hasIsChangeDescription_ = !!value;
}
- (BOOL) isChangeDescription {
  return !!isChangeDescription_;
}
- (void) setIsChangeDescription:(BOOL) value {
  isChangeDescription_ = !!value;
}
- (BOOL) hasDescriptionNow {
  return !!hasDescriptionNow_;
}
- (void) setHasDescriptionNow:(BOOL) value {
  hasDescriptionNow_ = !!value;
}
@synthesize descriptionNow;
- (BOOL) hasIsChangeJoinType {
  return !!hasIsChangeJoinType_;
}
- (void) setHasIsChangeJoinType:(BOOL) value {
  hasIsChangeJoinType_ = !!value;
}
- (BOOL) isChangeJoinType {
  return !!isChangeJoinType_;
}
- (void) setIsChangeJoinType:(BOOL) value {
  isChangeJoinType_ = !!value;
}
- (BOOL) hasRequestToJoinRequired {
  return !!hasRequestToJoinRequired_;
}
- (void) setHasRequestToJoinRequired:(BOOL) value {
  hasRequestToJoinRequired_ = !!value;
}
- (BOOL) requestToJoinRequired {
  return !!requestToJoinRequired_;
}
- (void) setRequestToJoinRequired:(BOOL) value {
  requestToJoinRequired_ = !!value;
}
- (BOOL) hasIsChangeIcon {
  return !!hasIsChangeIcon_;
}
- (void) setHasIsChangeIcon:(BOOL) value {
  hasIsChangeIcon_ = !!value;
}
- (BOOL) isChangeIcon {
  return !!isChangeIcon_;
}
- (void) setIsChangeIcon:(BOOL) value {
  isChangeIcon_ = !!value;
}
- (BOOL) hasIconId {
  return !!hasIconId_;
}
- (void) setHasIconId:(BOOL) value {
  hasIconId_ = !!value;
}
@synthesize iconId;
- (void) dealloc {
  self.sender = nil;
  self.descriptionNow = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.isChangeDescription = NO;
    self.descriptionNow = @"";
    self.isChangeJoinType = NO;
    self.requestToJoinRequired = NO;
    self.isChangeIcon = NO;
    self.iconId = 0;
  }
  return self;
}
static ChangeClanSettingsRequestProto* defaultChangeClanSettingsRequestProtoInstance = nil;
+ (void) initialize {
  if (self == [ChangeClanSettingsRequestProto class]) {
    defaultChangeClanSettingsRequestProtoInstance = [[ChangeClanSettingsRequestProto alloc] init];
  }
}
+ (ChangeClanSettingsRequestProto*) defaultInstance {
  return defaultChangeClanSettingsRequestProtoInstance;
}
- (ChangeClanSettingsRequestProto*) defaultInstance {
  return defaultChangeClanSettingsRequestProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasIsChangeDescription) {
    [output writeBool:2 value:self.isChangeDescription];
  }
  if (self.hasDescriptionNow) {
    [output writeString:3 value:self.descriptionNow];
  }
  if (self.hasIsChangeJoinType) {
    [output writeBool:4 value:self.isChangeJoinType];
  }
  if (self.hasRequestToJoinRequired) {
    [output writeBool:5 value:self.requestToJoinRequired];
  }
  if (self.hasIsChangeIcon) {
    [output writeBool:6 value:self.isChangeIcon];
  }
  if (self.hasIconId) {
    [output writeInt32:7 value:self.iconId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSender) {
    size += computeMessageSize(1, self.sender);
  }
  if (self.hasIsChangeDescription) {
    size += computeBoolSize(2, self.isChangeDescription);
  }
  if (self.hasDescriptionNow) {
    size += computeStringSize(3, self.descriptionNow);
  }
  if (self.hasIsChangeJoinType) {
    size += computeBoolSize(4, self.isChangeJoinType);
  }
  if (self.hasRequestToJoinRequired) {
    size += computeBoolSize(5, self.requestToJoinRequired);
  }
  if (self.hasIsChangeIcon) {
    size += computeBoolSize(6, self.isChangeIcon);
  }
  if (self.hasIconId) {
    size += computeInt32Size(7, self.iconId);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (ChangeClanSettingsRequestProto*) parseFromData:(NSData*) data {
  return (ChangeClanSettingsRequestProto*)[[[ChangeClanSettingsRequestProto builder] mergeFromData:data] build];
}
+ (ChangeClanSettingsRequestProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ChangeClanSettingsRequestProto*)[[[ChangeClanSettingsRequestProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ChangeClanSettingsRequestProto*) parseFromInputStream:(NSInputStream*) input {
  return (ChangeClanSettingsRequestProto*)[[[ChangeClanSettingsRequestProto builder] mergeFromInputStream:input] build];
}
+ (ChangeClanSettingsRequestProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ChangeClanSettingsRequestProto*)[[[ChangeClanSettingsRequestProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ChangeClanSettingsRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ChangeClanSettingsRequestProto*)[[[ChangeClanSettingsRequestProto builder] mergeFromCodedInputStream:input] build];
}
+ (ChangeClanSettingsRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ChangeClanSettingsRequestProto*)[[[ChangeClanSettingsRequestProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ChangeClanSettingsRequestProto_Builder*) builder {
  return [[[ChangeClanSettingsRequestProto_Builder alloc] init] autorelease];
}
+ (ChangeClanSettingsRequestProto_Builder*) builderWithPrototype:(ChangeClanSettingsRequestProto*) prototype {
  return [[ChangeClanSettingsRequestProto builder] mergeFrom:prototype];
}
- (ChangeClanSettingsRequestProto_Builder*) builder {
  return [ChangeClanSettingsRequestProto builder];
}
@end

@interface ChangeClanSettingsRequestProto_Builder()
@property (retain) ChangeClanSettingsRequestProto* result;
@end

@implementation ChangeClanSettingsRequestProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[ChangeClanSettingsRequestProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (ChangeClanSettingsRequestProto_Builder*) clear {
  self.result = [[[ChangeClanSettingsRequestProto alloc] init] autorelease];
  return self;
}
- (ChangeClanSettingsRequestProto_Builder*) clone {
  return [ChangeClanSettingsRequestProto builderWithPrototype:result];
}
- (ChangeClanSettingsRequestProto*) defaultInstance {
  return [ChangeClanSettingsRequestProto defaultInstance];
}
- (ChangeClanSettingsRequestProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ChangeClanSettingsRequestProto*) buildPartial {
  ChangeClanSettingsRequestProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (ChangeClanSettingsRequestProto_Builder*) mergeFrom:(ChangeClanSettingsRequestProto*) other {
  if (other == [ChangeClanSettingsRequestProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasIsChangeDescription) {
    [self setIsChangeDescription:other.isChangeDescription];
  }
  if (other.hasDescriptionNow) {
    [self setDescriptionNow:other.descriptionNow];
  }
  if (other.hasIsChangeJoinType) {
    [self setIsChangeJoinType:other.isChangeJoinType];
  }
  if (other.hasRequestToJoinRequired) {
    [self setRequestToJoinRequired:other.requestToJoinRequired];
  }
  if (other.hasIsChangeIcon) {
    [self setIsChangeIcon:other.isChangeIcon];
  }
  if (other.hasIconId) {
    [self setIconId:other.iconId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ChangeClanSettingsRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ChangeClanSettingsRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setIsChangeDescription:[input readBool]];
        break;
      }
      case 26: {
        [self setDescriptionNow:[input readString]];
        break;
      }
      case 32: {
        [self setIsChangeJoinType:[input readBool]];
        break;
      }
      case 40: {
        [self setRequestToJoinRequired:[input readBool]];
        break;
      }
      case 48: {
        [self setIsChangeIcon:[input readBool]];
        break;
      }
      case 56: {
        [self setIconId:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (ChangeClanSettingsRequestProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (ChangeClanSettingsRequestProto_Builder*) setSenderBuilder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (ChangeClanSettingsRequestProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (ChangeClanSettingsRequestProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasIsChangeDescription {
  return result.hasIsChangeDescription;
}
- (BOOL) isChangeDescription {
  return result.isChangeDescription;
}
- (ChangeClanSettingsRequestProto_Builder*) setIsChangeDescription:(BOOL) value {
  result.hasIsChangeDescription = YES;
  result.isChangeDescription = value;
  return self;
}
- (ChangeClanSettingsRequestProto_Builder*) clearIsChangeDescription {
  result.hasIsChangeDescription = NO;
  result.isChangeDescription = NO;
  return self;
}
- (BOOL) hasDescriptionNow {
  return result.hasDescriptionNow;
}
- (NSString*) descriptionNow {
  return result.descriptionNow;
}
- (ChangeClanSettingsRequestProto_Builder*) setDescriptionNow:(NSString*) value {
  result.hasDescriptionNow = YES;
  result.descriptionNow = value;
  return self;
}
- (ChangeClanSettingsRequestProto_Builder*) clearDescriptionNow {
  result.hasDescriptionNow = NO;
  result.descriptionNow = @"";
  return self;
}
- (BOOL) hasIsChangeJoinType {
  return result.hasIsChangeJoinType;
}
- (BOOL) isChangeJoinType {
  return result.isChangeJoinType;
}
- (ChangeClanSettingsRequestProto_Builder*) setIsChangeJoinType:(BOOL) value {
  result.hasIsChangeJoinType = YES;
  result.isChangeJoinType = value;
  return self;
}
- (ChangeClanSettingsRequestProto_Builder*) clearIsChangeJoinType {
  result.hasIsChangeJoinType = NO;
  result.isChangeJoinType = NO;
  return self;
}
- (BOOL) hasRequestToJoinRequired {
  return result.hasRequestToJoinRequired;
}
- (BOOL) requestToJoinRequired {
  return result.requestToJoinRequired;
}
- (ChangeClanSettingsRequestProto_Builder*) setRequestToJoinRequired:(BOOL) value {
  result.hasRequestToJoinRequired = YES;
  result.requestToJoinRequired = value;
  return self;
}
- (ChangeClanSettingsRequestProto_Builder*) clearRequestToJoinRequired {
  result.hasRequestToJoinRequired = NO;
  result.requestToJoinRequired = NO;
  return self;
}
- (BOOL) hasIsChangeIcon {
  return result.hasIsChangeIcon;
}
- (BOOL) isChangeIcon {
  return result.isChangeIcon;
}
- (ChangeClanSettingsRequestProto_Builder*) setIsChangeIcon:(BOOL) value {
  result.hasIsChangeIcon = YES;
  result.isChangeIcon = value;
  return self;
}
- (ChangeClanSettingsRequestProto_Builder*) clearIsChangeIcon {
  result.hasIsChangeIcon = NO;
  result.isChangeIcon = NO;
  return self;
}
- (BOOL) hasIconId {
  return result.hasIconId;
}
- (int32_t) iconId {
  return result.iconId;
}
- (ChangeClanSettingsRequestProto_Builder*) setIconId:(int32_t) value {
  result.hasIconId = YES;
  result.iconId = value;
  return self;
}
- (ChangeClanSettingsRequestProto_Builder*) clearIconId {
  result.hasIconId = NO;
  result.iconId = 0;
  return self;
}
@end

@interface ChangeClanSettingsResponseProto ()
@property (retain) MinimumUserProto* sender;
@property ChangeClanSettingsResponseProto_ChangeClanSettingsStatus status;
@property (retain) MinimumClanProto* minClan;
@property (retain) FullClanProtoWithClanSize* fullClan;
@end

@implementation ChangeClanSettingsResponseProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value {
  hasSender_ = !!value;
}
@synthesize sender;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value {
  hasStatus_ = !!value;
}
@synthesize status;
- (BOOL) hasMinClan {
  return !!hasMinClan_;
}
- (void) setHasMinClan:(BOOL) value {
  hasMinClan_ = !!value;
}
@synthesize minClan;
- (BOOL) hasFullClan {
  return !!hasFullClan_;
}
- (void) setHasFullClan:(BOOL) value {
  hasFullClan_ = !!value;
}
@synthesize fullClan;
- (void) dealloc {
  self.sender = nil;
  self.minClan = nil;
  self.fullClan = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.status = ChangeClanSettingsResponseProto_ChangeClanSettingsStatusSuccess;
    self.minClan = [MinimumClanProto defaultInstance];
    self.fullClan = [FullClanProtoWithClanSize defaultInstance];
  }
  return self;
}
static ChangeClanSettingsResponseProto* defaultChangeClanSettingsResponseProtoInstance = nil;
+ (void) initialize {
  if (self == [ChangeClanSettingsResponseProto class]) {
    defaultChangeClanSettingsResponseProtoInstance = [[ChangeClanSettingsResponseProto alloc] init];
  }
}
+ (ChangeClanSettingsResponseProto*) defaultInstance {
  return defaultChangeClanSettingsResponseProtoInstance;
}
- (ChangeClanSettingsResponseProto*) defaultInstance {
  return defaultChangeClanSettingsResponseProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasStatus) {
    [output writeEnum:2 value:self.status];
  }
  if (self.hasMinClan) {
    [output writeMessage:3 value:self.minClan];
  }
  if (self.hasFullClan) {
    [output writeMessage:4 value:self.fullClan];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSender) {
    size += computeMessageSize(1, self.sender);
  }
  if (self.hasStatus) {
    size += computeEnumSize(2, self.status);
  }
  if (self.hasMinClan) {
    size += computeMessageSize(3, self.minClan);
  }
  if (self.hasFullClan) {
    size += computeMessageSize(4, self.fullClan);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (ChangeClanSettingsResponseProto*) parseFromData:(NSData*) data {
  return (ChangeClanSettingsResponseProto*)[[[ChangeClanSettingsResponseProto builder] mergeFromData:data] build];
}
+ (ChangeClanSettingsResponseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ChangeClanSettingsResponseProto*)[[[ChangeClanSettingsResponseProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ChangeClanSettingsResponseProto*) parseFromInputStream:(NSInputStream*) input {
  return (ChangeClanSettingsResponseProto*)[[[ChangeClanSettingsResponseProto builder] mergeFromInputStream:input] build];
}
+ (ChangeClanSettingsResponseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ChangeClanSettingsResponseProto*)[[[ChangeClanSettingsResponseProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ChangeClanSettingsResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ChangeClanSettingsResponseProto*)[[[ChangeClanSettingsResponseProto builder] mergeFromCodedInputStream:input] build];
}
+ (ChangeClanSettingsResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ChangeClanSettingsResponseProto*)[[[ChangeClanSettingsResponseProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ChangeClanSettingsResponseProto_Builder*) builder {
  return [[[ChangeClanSettingsResponseProto_Builder alloc] init] autorelease];
}
+ (ChangeClanSettingsResponseProto_Builder*) builderWithPrototype:(ChangeClanSettingsResponseProto*) prototype {
  return [[ChangeClanSettingsResponseProto builder] mergeFrom:prototype];
}
- (ChangeClanSettingsResponseProto_Builder*) builder {
  return [ChangeClanSettingsResponseProto builder];
}
@end

BOOL ChangeClanSettingsResponseProto_ChangeClanSettingsStatusIsValidValue(ChangeClanSettingsResponseProto_ChangeClanSettingsStatus value) {
  switch (value) {
    case ChangeClanSettingsResponseProto_ChangeClanSettingsStatusSuccess:
    case ChangeClanSettingsResponseProto_ChangeClanSettingsStatusFailNotAuthorized:
    case ChangeClanSettingsResponseProto_ChangeClanSettingsStatusFailNotInClan:
    case ChangeClanSettingsResponseProto_ChangeClanSettingsStatusFailOther:
      return YES;
    default:
      return NO;
  }
}
@interface ChangeClanSettingsResponseProto_Builder()
@property (retain) ChangeClanSettingsResponseProto* result;
@end

@implementation ChangeClanSettingsResponseProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[ChangeClanSettingsResponseProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (ChangeClanSettingsResponseProto_Builder*) clear {
  self.result = [[[ChangeClanSettingsResponseProto alloc] init] autorelease];
  return self;
}
- (ChangeClanSettingsResponseProto_Builder*) clone {
  return [ChangeClanSettingsResponseProto builderWithPrototype:result];
}
- (ChangeClanSettingsResponseProto*) defaultInstance {
  return [ChangeClanSettingsResponseProto defaultInstance];
}
- (ChangeClanSettingsResponseProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ChangeClanSettingsResponseProto*) buildPartial {
  ChangeClanSettingsResponseProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (ChangeClanSettingsResponseProto_Builder*) mergeFrom:(ChangeClanSettingsResponseProto*) other {
  if (other == [ChangeClanSettingsResponseProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  if (other.hasMinClan) {
    [self mergeMinClan:other.minClan];
  }
  if (other.hasFullClan) {
    [self mergeFullClan:other.fullClan];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ChangeClanSettingsResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ChangeClanSettingsResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        int32_t value = [input readEnum];
        if (ChangeClanSettingsResponseProto_ChangeClanSettingsStatusIsValidValue(value)) {
          [self setStatus:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
      case 26: {
        MinimumClanProto_Builder* subBuilder = [MinimumClanProto builder];
        if (self.hasMinClan) {
          [subBuilder mergeFrom:self.minClan];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setMinClan:[subBuilder buildPartial]];
        break;
      }
      case 34: {
        FullClanProtoWithClanSize_Builder* subBuilder = [FullClanProtoWithClanSize builder];
        if (self.hasFullClan) {
          [subBuilder mergeFrom:self.fullClan];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setFullClan:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (ChangeClanSettingsResponseProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (ChangeClanSettingsResponseProto_Builder*) setSenderBuilder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (ChangeClanSettingsResponseProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (ChangeClanSettingsResponseProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (ChangeClanSettingsResponseProto_ChangeClanSettingsStatus) status {
  return result.status;
}
- (ChangeClanSettingsResponseProto_Builder*) setStatus:(ChangeClanSettingsResponseProto_ChangeClanSettingsStatus) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (ChangeClanSettingsResponseProto_Builder*) clearStatus {
  result.hasStatus = NO;
  result.status = ChangeClanSettingsResponseProto_ChangeClanSettingsStatusSuccess;
  return self;
}
- (BOOL) hasMinClan {
  return result.hasMinClan;
}
- (MinimumClanProto*) minClan {
  return result.minClan;
}
- (ChangeClanSettingsResponseProto_Builder*) setMinClan:(MinimumClanProto*) value {
  result.hasMinClan = YES;
  result.minClan = value;
  return self;
}
- (ChangeClanSettingsResponseProto_Builder*) setMinClanBuilder:(MinimumClanProto_Builder*) builderForValue {
  return [self setMinClan:[builderForValue build]];
}
- (ChangeClanSettingsResponseProto_Builder*) mergeMinClan:(MinimumClanProto*) value {
  if (result.hasMinClan &&
      result.minClan != [MinimumClanProto defaultInstance]) {
    result.minClan =
      [[[MinimumClanProto builderWithPrototype:result.minClan] mergeFrom:value] buildPartial];
  } else {
    result.minClan = value;
  }
  result.hasMinClan = YES;
  return self;
}
- (ChangeClanSettingsResponseProto_Builder*) clearMinClan {
  result.hasMinClan = NO;
  result.minClan = [MinimumClanProto defaultInstance];
  return self;
}
- (BOOL) hasFullClan {
  return result.hasFullClan;
}
- (FullClanProtoWithClanSize*) fullClan {
  return result.fullClan;
}
- (ChangeClanSettingsResponseProto_Builder*) setFullClan:(FullClanProtoWithClanSize*) value {
  result.hasFullClan = YES;
  result.fullClan = value;
  return self;
}
- (ChangeClanSettingsResponseProto_Builder*) setFullClanBuilder:(FullClanProtoWithClanSize_Builder*) builderForValue {
  return [self setFullClan:[builderForValue build]];
}
- (ChangeClanSettingsResponseProto_Builder*) mergeFullClan:(FullClanProtoWithClanSize*) value {
  if (result.hasFullClan &&
      result.fullClan != [FullClanProtoWithClanSize defaultInstance]) {
    result.fullClan =
      [[[FullClanProtoWithClanSize builderWithPrototype:result.fullClan] mergeFrom:value] buildPartial];
  } else {
    result.fullClan = value;
  }
  result.hasFullClan = YES;
  return self;
}
- (ChangeClanSettingsResponseProto_Builder*) clearFullClan {
  result.hasFullClan = NO;
  result.fullClan = [FullClanProtoWithClanSize defaultInstance];
  return self;
}
@end

@interface BeginClanRaidRequestProto ()
@property (retain) MinimumUserProto* sender;
@property int64_t curTime;
@property int32_t raidId;
@property int32_t clanEventId;
@property BOOL setMonsterTeamForRaid;
@property (retain) NSMutableArray* mutableUserMonstersList;
@property BOOL isFirstStage;
@end

@implementation BeginClanRaidRequestProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value {
  hasSender_ = !!value;
}
@synthesize sender;
- (BOOL) hasCurTime {
  return !!hasCurTime_;
}
- (void) setHasCurTime:(BOOL) value {
  hasCurTime_ = !!value;
}
@synthesize curTime;
- (BOOL) hasRaidId {
  return !!hasRaidId_;
}
- (void) setHasRaidId:(BOOL) value {
  hasRaidId_ = !!value;
}
@synthesize raidId;
- (BOOL) hasClanEventId {
  return !!hasClanEventId_;
}
- (void) setHasClanEventId:(BOOL) value {
  hasClanEventId_ = !!value;
}
@synthesize clanEventId;
- (BOOL) hasSetMonsterTeamForRaid {
  return !!hasSetMonsterTeamForRaid_;
}
- (void) setHasSetMonsterTeamForRaid:(BOOL) value {
  hasSetMonsterTeamForRaid_ = !!value;
}
- (BOOL) setMonsterTeamForRaid {
  return !!setMonsterTeamForRaid_;
}
- (void) setSetMonsterTeamForRaid:(BOOL) value {
  setMonsterTeamForRaid_ = !!value;
}
@synthesize mutableUserMonstersList;
- (BOOL) hasIsFirstStage {
  return !!hasIsFirstStage_;
}
- (void) setHasIsFirstStage:(BOOL) value {
  hasIsFirstStage_ = !!value;
}
- (BOOL) isFirstStage {
  return !!isFirstStage_;
}
- (void) setIsFirstStage:(BOOL) value {
  isFirstStage_ = !!value;
}
- (void) dealloc {
  self.sender = nil;
  self.mutableUserMonstersList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.curTime = 0L;
    self.raidId = 0;
    self.clanEventId = 0;
    self.setMonsterTeamForRaid = NO;
    self.isFirstStage = NO;
  }
  return self;
}
static BeginClanRaidRequestProto* defaultBeginClanRaidRequestProtoInstance = nil;
+ (void) initialize {
  if (self == [BeginClanRaidRequestProto class]) {
    defaultBeginClanRaidRequestProtoInstance = [[BeginClanRaidRequestProto alloc] init];
  }
}
+ (BeginClanRaidRequestProto*) defaultInstance {
  return defaultBeginClanRaidRequestProtoInstance;
}
- (BeginClanRaidRequestProto*) defaultInstance {
  return defaultBeginClanRaidRequestProtoInstance;
}
- (NSArray*) userMonstersList {
  return mutableUserMonstersList;
}
- (FullUserMonsterProto*) userMonstersAtIndex:(int32_t) index {
  id value = [mutableUserMonstersList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasCurTime) {
    [output writeInt64:2 value:self.curTime];
  }
  if (self.hasRaidId) {
    [output writeInt32:3 value:self.raidId];
  }
  if (self.hasSetMonsterTeamForRaid) {
    [output writeBool:4 value:self.setMonsterTeamForRaid];
  }
  for (FullUserMonsterProto* element in self.userMonstersList) {
    [output writeMessage:5 value:element];
  }
  if (self.hasIsFirstStage) {
    [output writeBool:6 value:self.isFirstStage];
  }
  if (self.hasClanEventId) {
    [output writeInt32:7 value:self.clanEventId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSender) {
    size += computeMessageSize(1, self.sender);
  }
  if (self.hasCurTime) {
    size += computeInt64Size(2, self.curTime);
  }
  if (self.hasRaidId) {
    size += computeInt32Size(3, self.raidId);
  }
  if (self.hasSetMonsterTeamForRaid) {
    size += computeBoolSize(4, self.setMonsterTeamForRaid);
  }
  for (FullUserMonsterProto* element in self.userMonstersList) {
    size += computeMessageSize(5, element);
  }
  if (self.hasIsFirstStage) {
    size += computeBoolSize(6, self.isFirstStage);
  }
  if (self.hasClanEventId) {
    size += computeInt32Size(7, self.clanEventId);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (BeginClanRaidRequestProto*) parseFromData:(NSData*) data {
  return (BeginClanRaidRequestProto*)[[[BeginClanRaidRequestProto builder] mergeFromData:data] build];
}
+ (BeginClanRaidRequestProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BeginClanRaidRequestProto*)[[[BeginClanRaidRequestProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (BeginClanRaidRequestProto*) parseFromInputStream:(NSInputStream*) input {
  return (BeginClanRaidRequestProto*)[[[BeginClanRaidRequestProto builder] mergeFromInputStream:input] build];
}
+ (BeginClanRaidRequestProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BeginClanRaidRequestProto*)[[[BeginClanRaidRequestProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BeginClanRaidRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (BeginClanRaidRequestProto*)[[[BeginClanRaidRequestProto builder] mergeFromCodedInputStream:input] build];
}
+ (BeginClanRaidRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BeginClanRaidRequestProto*)[[[BeginClanRaidRequestProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BeginClanRaidRequestProto_Builder*) builder {
  return [[[BeginClanRaidRequestProto_Builder alloc] init] autorelease];
}
+ (BeginClanRaidRequestProto_Builder*) builderWithPrototype:(BeginClanRaidRequestProto*) prototype {
  return [[BeginClanRaidRequestProto builder] mergeFrom:prototype];
}
- (BeginClanRaidRequestProto_Builder*) builder {
  return [BeginClanRaidRequestProto builder];
}
@end

@interface BeginClanRaidRequestProto_Builder()
@property (retain) BeginClanRaidRequestProto* result;
@end

@implementation BeginClanRaidRequestProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[BeginClanRaidRequestProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (BeginClanRaidRequestProto_Builder*) clear {
  self.result = [[[BeginClanRaidRequestProto alloc] init] autorelease];
  return self;
}
- (BeginClanRaidRequestProto_Builder*) clone {
  return [BeginClanRaidRequestProto builderWithPrototype:result];
}
- (BeginClanRaidRequestProto*) defaultInstance {
  return [BeginClanRaidRequestProto defaultInstance];
}
- (BeginClanRaidRequestProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (BeginClanRaidRequestProto*) buildPartial {
  BeginClanRaidRequestProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (BeginClanRaidRequestProto_Builder*) mergeFrom:(BeginClanRaidRequestProto*) other {
  if (other == [BeginClanRaidRequestProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasCurTime) {
    [self setCurTime:other.curTime];
  }
  if (other.hasRaidId) {
    [self setRaidId:other.raidId];
  }
  if (other.hasClanEventId) {
    [self setClanEventId:other.clanEventId];
  }
  if (other.hasSetMonsterTeamForRaid) {
    [self setSetMonsterTeamForRaid:other.setMonsterTeamForRaid];
  }
  if (other.mutableUserMonstersList.count > 0) {
    if (result.mutableUserMonstersList == nil) {
      result.mutableUserMonstersList = [NSMutableArray array];
    }
    [result.mutableUserMonstersList addObjectsFromArray:other.mutableUserMonstersList];
  }
  if (other.hasIsFirstStage) {
    [self setIsFirstStage:other.isFirstStage];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (BeginClanRaidRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (BeginClanRaidRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setCurTime:[input readInt64]];
        break;
      }
      case 24: {
        [self setRaidId:[input readInt32]];
        break;
      }
      case 32: {
        [self setSetMonsterTeamForRaid:[input readBool]];
        break;
      }
      case 42: {
        FullUserMonsterProto_Builder* subBuilder = [FullUserMonsterProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addUserMonsters:[subBuilder buildPartial]];
        break;
      }
      case 48: {
        [self setIsFirstStage:[input readBool]];
        break;
      }
      case 56: {
        [self setClanEventId:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (BeginClanRaidRequestProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (BeginClanRaidRequestProto_Builder*) setSenderBuilder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (BeginClanRaidRequestProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (BeginClanRaidRequestProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasCurTime {
  return result.hasCurTime;
}
- (int64_t) curTime {
  return result.curTime;
}
- (BeginClanRaidRequestProto_Builder*) setCurTime:(int64_t) value {
  result.hasCurTime = YES;
  result.curTime = value;
  return self;
}
- (BeginClanRaidRequestProto_Builder*) clearCurTime {
  result.hasCurTime = NO;
  result.curTime = 0L;
  return self;
}
- (BOOL) hasRaidId {
  return result.hasRaidId;
}
- (int32_t) raidId {
  return result.raidId;
}
- (BeginClanRaidRequestProto_Builder*) setRaidId:(int32_t) value {
  result.hasRaidId = YES;
  result.raidId = value;
  return self;
}
- (BeginClanRaidRequestProto_Builder*) clearRaidId {
  result.hasRaidId = NO;
  result.raidId = 0;
  return self;
}
- (BOOL) hasClanEventId {
  return result.hasClanEventId;
}
- (int32_t) clanEventId {
  return result.clanEventId;
}
- (BeginClanRaidRequestProto_Builder*) setClanEventId:(int32_t) value {
  result.hasClanEventId = YES;
  result.clanEventId = value;
  return self;
}
- (BeginClanRaidRequestProto_Builder*) clearClanEventId {
  result.hasClanEventId = NO;
  result.clanEventId = 0;
  return self;
}
- (BOOL) hasSetMonsterTeamForRaid {
  return result.hasSetMonsterTeamForRaid;
}
- (BOOL) setMonsterTeamForRaid {
  return result.setMonsterTeamForRaid;
}
- (BeginClanRaidRequestProto_Builder*) setSetMonsterTeamForRaid:(BOOL) value {
  result.hasSetMonsterTeamForRaid = YES;
  result.setMonsterTeamForRaid = value;
  return self;
}
- (BeginClanRaidRequestProto_Builder*) clearSetMonsterTeamForRaid {
  result.hasSetMonsterTeamForRaid = NO;
  result.setMonsterTeamForRaid = NO;
  return self;
}
- (NSArray*) userMonstersList {
  if (result.mutableUserMonstersList == nil) { return [NSArray array]; }
  return result.mutableUserMonstersList;
}
- (FullUserMonsterProto*) userMonstersAtIndex:(int32_t) index {
  return [result userMonstersAtIndex:index];
}
- (BeginClanRaidRequestProto_Builder*) replaceUserMonstersAtIndex:(int32_t) index with:(FullUserMonsterProto*) value {
  [result.mutableUserMonstersList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (BeginClanRaidRequestProto_Builder*) addAllUserMonsters:(NSArray*) values {
  if (result.mutableUserMonstersList == nil) {
    result.mutableUserMonstersList = [NSMutableArray array];
  }
  [result.mutableUserMonstersList addObjectsFromArray:values];
  return self;
}
- (BeginClanRaidRequestProto_Builder*) clearUserMonstersList {
  result.mutableUserMonstersList = nil;
  return self;
}
- (BeginClanRaidRequestProto_Builder*) addUserMonsters:(FullUserMonsterProto*) value {
  if (result.mutableUserMonstersList == nil) {
    result.mutableUserMonstersList = [NSMutableArray array];
  }
  [result.mutableUserMonstersList addObject:value];
  return self;
}
- (BOOL) hasIsFirstStage {
  return result.hasIsFirstStage;
}
- (BOOL) isFirstStage {
  return result.isFirstStage;
}
- (BeginClanRaidRequestProto_Builder*) setIsFirstStage:(BOOL) value {
  result.hasIsFirstStage = YES;
  result.isFirstStage = value;
  return self;
}
- (BeginClanRaidRequestProto_Builder*) clearIsFirstStage {
  result.hasIsFirstStage = NO;
  result.isFirstStage = NO;
  return self;
}
@end

@interface BeginClanRaidResponseProto ()
@property (retain) MinimumUserProto* sender;
@property (retain) PersistentClanEventClanInfoProto* eventDetails;
@property BeginClanRaidResponseProto_BeginClanRaidStatus status;
@property (retain) PersistentClanEventUserInfoProto* userDetails;
@end

@implementation BeginClanRaidResponseProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value {
  hasSender_ = !!value;
}
@synthesize sender;
- (BOOL) hasEventDetails {
  return !!hasEventDetails_;
}
- (void) setHasEventDetails:(BOOL) value {
  hasEventDetails_ = !!value;
}
@synthesize eventDetails;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value {
  hasStatus_ = !!value;
}
@synthesize status;
- (BOOL) hasUserDetails {
  return !!hasUserDetails_;
}
- (void) setHasUserDetails:(BOOL) value {
  hasUserDetails_ = !!value;
}
@synthesize userDetails;
- (void) dealloc {
  self.sender = nil;
  self.eventDetails = nil;
  self.userDetails = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.eventDetails = [PersistentClanEventClanInfoProto defaultInstance];
    self.status = BeginClanRaidResponseProto_BeginClanRaidStatusSuccess;
    self.userDetails = [PersistentClanEventUserInfoProto defaultInstance];
  }
  return self;
}
static BeginClanRaidResponseProto* defaultBeginClanRaidResponseProtoInstance = nil;
+ (void) initialize {
  if (self == [BeginClanRaidResponseProto class]) {
    defaultBeginClanRaidResponseProtoInstance = [[BeginClanRaidResponseProto alloc] init];
  }
}
+ (BeginClanRaidResponseProto*) defaultInstance {
  return defaultBeginClanRaidResponseProtoInstance;
}
- (BeginClanRaidResponseProto*) defaultInstance {
  return defaultBeginClanRaidResponseProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasEventDetails) {
    [output writeMessage:2 value:self.eventDetails];
  }
  if (self.hasStatus) {
    [output writeEnum:3 value:self.status];
  }
  if (self.hasUserDetails) {
    [output writeMessage:4 value:self.userDetails];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSender) {
    size += computeMessageSize(1, self.sender);
  }
  if (self.hasEventDetails) {
    size += computeMessageSize(2, self.eventDetails);
  }
  if (self.hasStatus) {
    size += computeEnumSize(3, self.status);
  }
  if (self.hasUserDetails) {
    size += computeMessageSize(4, self.userDetails);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (BeginClanRaidResponseProto*) parseFromData:(NSData*) data {
  return (BeginClanRaidResponseProto*)[[[BeginClanRaidResponseProto builder] mergeFromData:data] build];
}
+ (BeginClanRaidResponseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BeginClanRaidResponseProto*)[[[BeginClanRaidResponseProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (BeginClanRaidResponseProto*) parseFromInputStream:(NSInputStream*) input {
  return (BeginClanRaidResponseProto*)[[[BeginClanRaidResponseProto builder] mergeFromInputStream:input] build];
}
+ (BeginClanRaidResponseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BeginClanRaidResponseProto*)[[[BeginClanRaidResponseProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BeginClanRaidResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (BeginClanRaidResponseProto*)[[[BeginClanRaidResponseProto builder] mergeFromCodedInputStream:input] build];
}
+ (BeginClanRaidResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BeginClanRaidResponseProto*)[[[BeginClanRaidResponseProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BeginClanRaidResponseProto_Builder*) builder {
  return [[[BeginClanRaidResponseProto_Builder alloc] init] autorelease];
}
+ (BeginClanRaidResponseProto_Builder*) builderWithPrototype:(BeginClanRaidResponseProto*) prototype {
  return [[BeginClanRaidResponseProto builder] mergeFrom:prototype];
}
- (BeginClanRaidResponseProto_Builder*) builder {
  return [BeginClanRaidResponseProto builder];
}
@end

BOOL BeginClanRaidResponseProto_BeginClanRaidStatusIsValidValue(BeginClanRaidResponseProto_BeginClanRaidStatus value) {
  switch (value) {
    case BeginClanRaidResponseProto_BeginClanRaidStatusSuccess:
    case BeginClanRaidResponseProto_BeginClanRaidStatusFailAlreadyStarted:
    case BeginClanRaidResponseProto_BeginClanRaidStatusFailNotAuthorized:
    case BeginClanRaidResponseProto_BeginClanRaidStatusFailNoActiveClanRaid:
    case BeginClanRaidResponseProto_BeginClanRaidStatusFailNoMonstersSent:
      return YES;
    default:
      return NO;
  }
}
@interface BeginClanRaidResponseProto_Builder()
@property (retain) BeginClanRaidResponseProto* result;
@end

@implementation BeginClanRaidResponseProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[BeginClanRaidResponseProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (BeginClanRaidResponseProto_Builder*) clear {
  self.result = [[[BeginClanRaidResponseProto alloc] init] autorelease];
  return self;
}
- (BeginClanRaidResponseProto_Builder*) clone {
  return [BeginClanRaidResponseProto builderWithPrototype:result];
}
- (BeginClanRaidResponseProto*) defaultInstance {
  return [BeginClanRaidResponseProto defaultInstance];
}
- (BeginClanRaidResponseProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (BeginClanRaidResponseProto*) buildPartial {
  BeginClanRaidResponseProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (BeginClanRaidResponseProto_Builder*) mergeFrom:(BeginClanRaidResponseProto*) other {
  if (other == [BeginClanRaidResponseProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasEventDetails) {
    [self mergeEventDetails:other.eventDetails];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  if (other.hasUserDetails) {
    [self mergeUserDetails:other.userDetails];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (BeginClanRaidResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (BeginClanRaidResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        PersistentClanEventClanInfoProto_Builder* subBuilder = [PersistentClanEventClanInfoProto builder];
        if (self.hasEventDetails) {
          [subBuilder mergeFrom:self.eventDetails];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setEventDetails:[subBuilder buildPartial]];
        break;
      }
      case 24: {
        int32_t value = [input readEnum];
        if (BeginClanRaidResponseProto_BeginClanRaidStatusIsValidValue(value)) {
          [self setStatus:value];
        } else {
          [unknownFields mergeVarintField:3 value:value];
        }
        break;
      }
      case 34: {
        PersistentClanEventUserInfoProto_Builder* subBuilder = [PersistentClanEventUserInfoProto builder];
        if (self.hasUserDetails) {
          [subBuilder mergeFrom:self.userDetails];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setUserDetails:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (BeginClanRaidResponseProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (BeginClanRaidResponseProto_Builder*) setSenderBuilder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (BeginClanRaidResponseProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (BeginClanRaidResponseProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasEventDetails {
  return result.hasEventDetails;
}
- (PersistentClanEventClanInfoProto*) eventDetails {
  return result.eventDetails;
}
- (BeginClanRaidResponseProto_Builder*) setEventDetails:(PersistentClanEventClanInfoProto*) value {
  result.hasEventDetails = YES;
  result.eventDetails = value;
  return self;
}
- (BeginClanRaidResponseProto_Builder*) setEventDetailsBuilder:(PersistentClanEventClanInfoProto_Builder*) builderForValue {
  return [self setEventDetails:[builderForValue build]];
}
- (BeginClanRaidResponseProto_Builder*) mergeEventDetails:(PersistentClanEventClanInfoProto*) value {
  if (result.hasEventDetails &&
      result.eventDetails != [PersistentClanEventClanInfoProto defaultInstance]) {
    result.eventDetails =
      [[[PersistentClanEventClanInfoProto builderWithPrototype:result.eventDetails] mergeFrom:value] buildPartial];
  } else {
    result.eventDetails = value;
  }
  result.hasEventDetails = YES;
  return self;
}
- (BeginClanRaidResponseProto_Builder*) clearEventDetails {
  result.hasEventDetails = NO;
  result.eventDetails = [PersistentClanEventClanInfoProto defaultInstance];
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (BeginClanRaidResponseProto_BeginClanRaidStatus) status {
  return result.status;
}
- (BeginClanRaidResponseProto_Builder*) setStatus:(BeginClanRaidResponseProto_BeginClanRaidStatus) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (BeginClanRaidResponseProto_Builder*) clearStatus {
  result.hasStatus = NO;
  result.status = BeginClanRaidResponseProto_BeginClanRaidStatusSuccess;
  return self;
}
- (BOOL) hasUserDetails {
  return result.hasUserDetails;
}
- (PersistentClanEventUserInfoProto*) userDetails {
  return result.userDetails;
}
- (BeginClanRaidResponseProto_Builder*) setUserDetails:(PersistentClanEventUserInfoProto*) value {
  result.hasUserDetails = YES;
  result.userDetails = value;
  return self;
}
- (BeginClanRaidResponseProto_Builder*) setUserDetailsBuilder:(PersistentClanEventUserInfoProto_Builder*) builderForValue {
  return [self setUserDetails:[builderForValue build]];
}
- (BeginClanRaidResponseProto_Builder*) mergeUserDetails:(PersistentClanEventUserInfoProto*) value {
  if (result.hasUserDetails &&
      result.userDetails != [PersistentClanEventUserInfoProto defaultInstance]) {
    result.userDetails =
      [[[PersistentClanEventUserInfoProto builderWithPrototype:result.userDetails] mergeFrom:value] buildPartial];
  } else {
    result.userDetails = value;
  }
  result.hasUserDetails = YES;
  return self;
}
- (BeginClanRaidResponseProto_Builder*) clearUserDetails {
  result.hasUserDetails = NO;
  result.userDetails = [PersistentClanEventUserInfoProto defaultInstance];
  return self;
}
@end

@interface AttackClanRaidMonsterRequestProto ()
@property (retain) MinimumUserProto* sender;
@property (retain) PersistentClanEventClanInfoProto* eventDetails;
@property int64_t clientTime;
@property int32_t damageDealt;
@property (retain) NSMutableArray* mutableMonsterHealthsList;
@property (retain) FullUserMonsterProto* userMonsterThatAttacked;
@property (retain) UserCurrentMonsterTeamProto* userMonsterTeam;
@end

@implementation AttackClanRaidMonsterRequestProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value {
  hasSender_ = !!value;
}
@synthesize sender;
- (BOOL) hasEventDetails {
  return !!hasEventDetails_;
}
- (void) setHasEventDetails:(BOOL) value {
  hasEventDetails_ = !!value;
}
@synthesize eventDetails;
- (BOOL) hasClientTime {
  return !!hasClientTime_;
}
- (void) setHasClientTime:(BOOL) value {
  hasClientTime_ = !!value;
}
@synthesize clientTime;
- (BOOL) hasDamageDealt {
  return !!hasDamageDealt_;
}
- (void) setHasDamageDealt:(BOOL) value {
  hasDamageDealt_ = !!value;
}
@synthesize damageDealt;
@synthesize mutableMonsterHealthsList;
- (BOOL) hasUserMonsterThatAttacked {
  return !!hasUserMonsterThatAttacked_;
}
- (void) setHasUserMonsterThatAttacked:(BOOL) value {
  hasUserMonsterThatAttacked_ = !!value;
}
@synthesize userMonsterThatAttacked;
- (BOOL) hasUserMonsterTeam {
  return !!hasUserMonsterTeam_;
}
- (void) setHasUserMonsterTeam:(BOOL) value {
  hasUserMonsterTeam_ = !!value;
}
@synthesize userMonsterTeam;
- (void) dealloc {
  self.sender = nil;
  self.eventDetails = nil;
  self.mutableMonsterHealthsList = nil;
  self.userMonsterThatAttacked = nil;
  self.userMonsterTeam = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.eventDetails = [PersistentClanEventClanInfoProto defaultInstance];
    self.clientTime = 0L;
    self.damageDealt = 0;
    self.userMonsterThatAttacked = [FullUserMonsterProto defaultInstance];
    self.userMonsterTeam = [UserCurrentMonsterTeamProto defaultInstance];
  }
  return self;
}
static AttackClanRaidMonsterRequestProto* defaultAttackClanRaidMonsterRequestProtoInstance = nil;
+ (void) initialize {
  if (self == [AttackClanRaidMonsterRequestProto class]) {
    defaultAttackClanRaidMonsterRequestProtoInstance = [[AttackClanRaidMonsterRequestProto alloc] init];
  }
}
+ (AttackClanRaidMonsterRequestProto*) defaultInstance {
  return defaultAttackClanRaidMonsterRequestProtoInstance;
}
- (AttackClanRaidMonsterRequestProto*) defaultInstance {
  return defaultAttackClanRaidMonsterRequestProtoInstance;
}
- (NSArray*) monsterHealthsList {
  return mutableMonsterHealthsList;
}
- (UserMonsterCurrentHealthProto*) monsterHealthsAtIndex:(int32_t) index {
  id value = [mutableMonsterHealthsList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasEventDetails) {
    [output writeMessage:2 value:self.eventDetails];
  }
  if (self.hasClientTime) {
    [output writeInt64:3 value:self.clientTime];
  }
  if (self.hasDamageDealt) {
    [output writeInt32:4 value:self.damageDealt];
  }
  for (UserMonsterCurrentHealthProto* element in self.monsterHealthsList) {
    [output writeMessage:5 value:element];
  }
  if (self.hasUserMonsterThatAttacked) {
    [output writeMessage:9 value:self.userMonsterThatAttacked];
  }
  if (self.hasUserMonsterTeam) {
    [output writeMessage:10 value:self.userMonsterTeam];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSender) {
    size += computeMessageSize(1, self.sender);
  }
  if (self.hasEventDetails) {
    size += computeMessageSize(2, self.eventDetails);
  }
  if (self.hasClientTime) {
    size += computeInt64Size(3, self.clientTime);
  }
  if (self.hasDamageDealt) {
    size += computeInt32Size(4, self.damageDealt);
  }
  for (UserMonsterCurrentHealthProto* element in self.monsterHealthsList) {
    size += computeMessageSize(5, element);
  }
  if (self.hasUserMonsterThatAttacked) {
    size += computeMessageSize(9, self.userMonsterThatAttacked);
  }
  if (self.hasUserMonsterTeam) {
    size += computeMessageSize(10, self.userMonsterTeam);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (AttackClanRaidMonsterRequestProto*) parseFromData:(NSData*) data {
  return (AttackClanRaidMonsterRequestProto*)[[[AttackClanRaidMonsterRequestProto builder] mergeFromData:data] build];
}
+ (AttackClanRaidMonsterRequestProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (AttackClanRaidMonsterRequestProto*)[[[AttackClanRaidMonsterRequestProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (AttackClanRaidMonsterRequestProto*) parseFromInputStream:(NSInputStream*) input {
  return (AttackClanRaidMonsterRequestProto*)[[[AttackClanRaidMonsterRequestProto builder] mergeFromInputStream:input] build];
}
+ (AttackClanRaidMonsterRequestProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (AttackClanRaidMonsterRequestProto*)[[[AttackClanRaidMonsterRequestProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (AttackClanRaidMonsterRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (AttackClanRaidMonsterRequestProto*)[[[AttackClanRaidMonsterRequestProto builder] mergeFromCodedInputStream:input] build];
}
+ (AttackClanRaidMonsterRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (AttackClanRaidMonsterRequestProto*)[[[AttackClanRaidMonsterRequestProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (AttackClanRaidMonsterRequestProto_Builder*) builder {
  return [[[AttackClanRaidMonsterRequestProto_Builder alloc] init] autorelease];
}
+ (AttackClanRaidMonsterRequestProto_Builder*) builderWithPrototype:(AttackClanRaidMonsterRequestProto*) prototype {
  return [[AttackClanRaidMonsterRequestProto builder] mergeFrom:prototype];
}
- (AttackClanRaidMonsterRequestProto_Builder*) builder {
  return [AttackClanRaidMonsterRequestProto builder];
}
@end

@interface AttackClanRaidMonsterRequestProto_Builder()
@property (retain) AttackClanRaidMonsterRequestProto* result;
@end

@implementation AttackClanRaidMonsterRequestProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[AttackClanRaidMonsterRequestProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (AttackClanRaidMonsterRequestProto_Builder*) clear {
  self.result = [[[AttackClanRaidMonsterRequestProto alloc] init] autorelease];
  return self;
}
- (AttackClanRaidMonsterRequestProto_Builder*) clone {
  return [AttackClanRaidMonsterRequestProto builderWithPrototype:result];
}
- (AttackClanRaidMonsterRequestProto*) defaultInstance {
  return [AttackClanRaidMonsterRequestProto defaultInstance];
}
- (AttackClanRaidMonsterRequestProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (AttackClanRaidMonsterRequestProto*) buildPartial {
  AttackClanRaidMonsterRequestProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (AttackClanRaidMonsterRequestProto_Builder*) mergeFrom:(AttackClanRaidMonsterRequestProto*) other {
  if (other == [AttackClanRaidMonsterRequestProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasEventDetails) {
    [self mergeEventDetails:other.eventDetails];
  }
  if (other.hasClientTime) {
    [self setClientTime:other.clientTime];
  }
  if (other.hasDamageDealt) {
    [self setDamageDealt:other.damageDealt];
  }
  if (other.mutableMonsterHealthsList.count > 0) {
    if (result.mutableMonsterHealthsList == nil) {
      result.mutableMonsterHealthsList = [NSMutableArray array];
    }
    [result.mutableMonsterHealthsList addObjectsFromArray:other.mutableMonsterHealthsList];
  }
  if (other.hasUserMonsterThatAttacked) {
    [self mergeUserMonsterThatAttacked:other.userMonsterThatAttacked];
  }
  if (other.hasUserMonsterTeam) {
    [self mergeUserMonsterTeam:other.userMonsterTeam];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (AttackClanRaidMonsterRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (AttackClanRaidMonsterRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        PersistentClanEventClanInfoProto_Builder* subBuilder = [PersistentClanEventClanInfoProto builder];
        if (self.hasEventDetails) {
          [subBuilder mergeFrom:self.eventDetails];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setEventDetails:[subBuilder buildPartial]];
        break;
      }
      case 24: {
        [self setClientTime:[input readInt64]];
        break;
      }
      case 32: {
        [self setDamageDealt:[input readInt32]];
        break;
      }
      case 42: {
        UserMonsterCurrentHealthProto_Builder* subBuilder = [UserMonsterCurrentHealthProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addMonsterHealths:[subBuilder buildPartial]];
        break;
      }
      case 74: {
        FullUserMonsterProto_Builder* subBuilder = [FullUserMonsterProto builder];
        if (self.hasUserMonsterThatAttacked) {
          [subBuilder mergeFrom:self.userMonsterThatAttacked];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setUserMonsterThatAttacked:[subBuilder buildPartial]];
        break;
      }
      case 82: {
        UserCurrentMonsterTeamProto_Builder* subBuilder = [UserCurrentMonsterTeamProto builder];
        if (self.hasUserMonsterTeam) {
          [subBuilder mergeFrom:self.userMonsterTeam];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setUserMonsterTeam:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (AttackClanRaidMonsterRequestProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (AttackClanRaidMonsterRequestProto_Builder*) setSenderBuilder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (AttackClanRaidMonsterRequestProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (AttackClanRaidMonsterRequestProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasEventDetails {
  return result.hasEventDetails;
}
- (PersistentClanEventClanInfoProto*) eventDetails {
  return result.eventDetails;
}
- (AttackClanRaidMonsterRequestProto_Builder*) setEventDetails:(PersistentClanEventClanInfoProto*) value {
  result.hasEventDetails = YES;
  result.eventDetails = value;
  return self;
}
- (AttackClanRaidMonsterRequestProto_Builder*) setEventDetailsBuilder:(PersistentClanEventClanInfoProto_Builder*) builderForValue {
  return [self setEventDetails:[builderForValue build]];
}
- (AttackClanRaidMonsterRequestProto_Builder*) mergeEventDetails:(PersistentClanEventClanInfoProto*) value {
  if (result.hasEventDetails &&
      result.eventDetails != [PersistentClanEventClanInfoProto defaultInstance]) {
    result.eventDetails =
      [[[PersistentClanEventClanInfoProto builderWithPrototype:result.eventDetails] mergeFrom:value] buildPartial];
  } else {
    result.eventDetails = value;
  }
  result.hasEventDetails = YES;
  return self;
}
- (AttackClanRaidMonsterRequestProto_Builder*) clearEventDetails {
  result.hasEventDetails = NO;
  result.eventDetails = [PersistentClanEventClanInfoProto defaultInstance];
  return self;
}
- (BOOL) hasClientTime {
  return result.hasClientTime;
}
- (int64_t) clientTime {
  return result.clientTime;
}
- (AttackClanRaidMonsterRequestProto_Builder*) setClientTime:(int64_t) value {
  result.hasClientTime = YES;
  result.clientTime = value;
  return self;
}
- (AttackClanRaidMonsterRequestProto_Builder*) clearClientTime {
  result.hasClientTime = NO;
  result.clientTime = 0L;
  return self;
}
- (BOOL) hasDamageDealt {
  return result.hasDamageDealt;
}
- (int32_t) damageDealt {
  return result.damageDealt;
}
- (AttackClanRaidMonsterRequestProto_Builder*) setDamageDealt:(int32_t) value {
  result.hasDamageDealt = YES;
  result.damageDealt = value;
  return self;
}
- (AttackClanRaidMonsterRequestProto_Builder*) clearDamageDealt {
  result.hasDamageDealt = NO;
  result.damageDealt = 0;
  return self;
}
- (NSArray*) monsterHealthsList {
  if (result.mutableMonsterHealthsList == nil) { return [NSArray array]; }
  return result.mutableMonsterHealthsList;
}
- (UserMonsterCurrentHealthProto*) monsterHealthsAtIndex:(int32_t) index {
  return [result monsterHealthsAtIndex:index];
}
- (AttackClanRaidMonsterRequestProto_Builder*) replaceMonsterHealthsAtIndex:(int32_t) index with:(UserMonsterCurrentHealthProto*) value {
  [result.mutableMonsterHealthsList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (AttackClanRaidMonsterRequestProto_Builder*) addAllMonsterHealths:(NSArray*) values {
  if (result.mutableMonsterHealthsList == nil) {
    result.mutableMonsterHealthsList = [NSMutableArray array];
  }
  [result.mutableMonsterHealthsList addObjectsFromArray:values];
  return self;
}
- (AttackClanRaidMonsterRequestProto_Builder*) clearMonsterHealthsList {
  result.mutableMonsterHealthsList = nil;
  return self;
}
- (AttackClanRaidMonsterRequestProto_Builder*) addMonsterHealths:(UserMonsterCurrentHealthProto*) value {
  if (result.mutableMonsterHealthsList == nil) {
    result.mutableMonsterHealthsList = [NSMutableArray array];
  }
  [result.mutableMonsterHealthsList addObject:value];
  return self;
}
- (BOOL) hasUserMonsterThatAttacked {
  return result.hasUserMonsterThatAttacked;
}
- (FullUserMonsterProto*) userMonsterThatAttacked {
  return result.userMonsterThatAttacked;
}
- (AttackClanRaidMonsterRequestProto_Builder*) setUserMonsterThatAttacked:(FullUserMonsterProto*) value {
  result.hasUserMonsterThatAttacked = YES;
  result.userMonsterThatAttacked = value;
  return self;
}
- (AttackClanRaidMonsterRequestProto_Builder*) setUserMonsterThatAttackedBuilder:(FullUserMonsterProto_Builder*) builderForValue {
  return [self setUserMonsterThatAttacked:[builderForValue build]];
}
- (AttackClanRaidMonsterRequestProto_Builder*) mergeUserMonsterThatAttacked:(FullUserMonsterProto*) value {
  if (result.hasUserMonsterThatAttacked &&
      result.userMonsterThatAttacked != [FullUserMonsterProto defaultInstance]) {
    result.userMonsterThatAttacked =
      [[[FullUserMonsterProto builderWithPrototype:result.userMonsterThatAttacked] mergeFrom:value] buildPartial];
  } else {
    result.userMonsterThatAttacked = value;
  }
  result.hasUserMonsterThatAttacked = YES;
  return self;
}
- (AttackClanRaidMonsterRequestProto_Builder*) clearUserMonsterThatAttacked {
  result.hasUserMonsterThatAttacked = NO;
  result.userMonsterThatAttacked = [FullUserMonsterProto defaultInstance];
  return self;
}
- (BOOL) hasUserMonsterTeam {
  return result.hasUserMonsterTeam;
}
- (UserCurrentMonsterTeamProto*) userMonsterTeam {
  return result.userMonsterTeam;
}
- (AttackClanRaidMonsterRequestProto_Builder*) setUserMonsterTeam:(UserCurrentMonsterTeamProto*) value {
  result.hasUserMonsterTeam = YES;
  result.userMonsterTeam = value;
  return self;
}
- (AttackClanRaidMonsterRequestProto_Builder*) setUserMonsterTeamBuilder:(UserCurrentMonsterTeamProto_Builder*) builderForValue {
  return [self setUserMonsterTeam:[builderForValue build]];
}
- (AttackClanRaidMonsterRequestProto_Builder*) mergeUserMonsterTeam:(UserCurrentMonsterTeamProto*) value {
  if (result.hasUserMonsterTeam &&
      result.userMonsterTeam != [UserCurrentMonsterTeamProto defaultInstance]) {
    result.userMonsterTeam =
      [[[UserCurrentMonsterTeamProto builderWithPrototype:result.userMonsterTeam] mergeFrom:value] buildPartial];
  } else {
    result.userMonsterTeam = value;
  }
  result.hasUserMonsterTeam = YES;
  return self;
}
- (AttackClanRaidMonsterRequestProto_Builder*) clearUserMonsterTeam {
  result.hasUserMonsterTeam = NO;
  result.userMonsterTeam = [UserCurrentMonsterTeamProto defaultInstance];
  return self;
}
@end

@interface AttackClanRaidMonsterResponseProto ()
@property (retain) MinimumUserProto* sender;
@property int32_t dmgDealt;
@property (retain) PersistentClanEventClanInfoProto* eventDetails;
@property (retain) NSMutableArray* mutableClanUsersDetailsList;
@property (retain) FullUserMonsterProto* userMonsterThatAttacked;
@property AttackClanRaidMonsterResponseProto_AttackClanRaidMonsterStatus status;
@end

@implementation AttackClanRaidMonsterResponseProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value {
  hasSender_ = !!value;
}
@synthesize sender;
- (BOOL) hasDmgDealt {
  return !!hasDmgDealt_;
}
- (void) setHasDmgDealt:(BOOL) value {
  hasDmgDealt_ = !!value;
}
@synthesize dmgDealt;
- (BOOL) hasEventDetails {
  return !!hasEventDetails_;
}
- (void) setHasEventDetails:(BOOL) value {
  hasEventDetails_ = !!value;
}
@synthesize eventDetails;
@synthesize mutableClanUsersDetailsList;
- (BOOL) hasUserMonsterThatAttacked {
  return !!hasUserMonsterThatAttacked_;
}
- (void) setHasUserMonsterThatAttacked:(BOOL) value {
  hasUserMonsterThatAttacked_ = !!value;
}
@synthesize userMonsterThatAttacked;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value {
  hasStatus_ = !!value;
}
@synthesize status;
- (void) dealloc {
  self.sender = nil;
  self.eventDetails = nil;
  self.mutableClanUsersDetailsList = nil;
  self.userMonsterThatAttacked = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.dmgDealt = 0;
    self.eventDetails = [PersistentClanEventClanInfoProto defaultInstance];
    self.userMonsterThatAttacked = [FullUserMonsterProto defaultInstance];
    self.status = AttackClanRaidMonsterResponseProto_AttackClanRaidMonsterStatusSuccess;
  }
  return self;
}
static AttackClanRaidMonsterResponseProto* defaultAttackClanRaidMonsterResponseProtoInstance = nil;
+ (void) initialize {
  if (self == [AttackClanRaidMonsterResponseProto class]) {
    defaultAttackClanRaidMonsterResponseProtoInstance = [[AttackClanRaidMonsterResponseProto alloc] init];
  }
}
+ (AttackClanRaidMonsterResponseProto*) defaultInstance {
  return defaultAttackClanRaidMonsterResponseProtoInstance;
}
- (AttackClanRaidMonsterResponseProto*) defaultInstance {
  return defaultAttackClanRaidMonsterResponseProtoInstance;
}
- (NSArray*) clanUsersDetailsList {
  return mutableClanUsersDetailsList;
}
- (PersistentClanEventUserInfoProto*) clanUsersDetailsAtIndex:(int32_t) index {
  id value = [mutableClanUsersDetailsList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasDmgDealt) {
    [output writeInt32:2 value:self.dmgDealt];
  }
  if (self.hasEventDetails) {
    [output writeMessage:3 value:self.eventDetails];
  }
  for (PersistentClanEventUserInfoProto* element in self.clanUsersDetailsList) {
    [output writeMessage:4 value:element];
  }
  if (self.hasUserMonsterThatAttacked) {
    [output writeMessage:5 value:self.userMonsterThatAttacked];
  }
  if (self.hasStatus) {
    [output writeEnum:6 value:self.status];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSender) {
    size += computeMessageSize(1, self.sender);
  }
  if (self.hasDmgDealt) {
    size += computeInt32Size(2, self.dmgDealt);
  }
  if (self.hasEventDetails) {
    size += computeMessageSize(3, self.eventDetails);
  }
  for (PersistentClanEventUserInfoProto* element in self.clanUsersDetailsList) {
    size += computeMessageSize(4, element);
  }
  if (self.hasUserMonsterThatAttacked) {
    size += computeMessageSize(5, self.userMonsterThatAttacked);
  }
  if (self.hasStatus) {
    size += computeEnumSize(6, self.status);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (AttackClanRaidMonsterResponseProto*) parseFromData:(NSData*) data {
  return (AttackClanRaidMonsterResponseProto*)[[[AttackClanRaidMonsterResponseProto builder] mergeFromData:data] build];
}
+ (AttackClanRaidMonsterResponseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (AttackClanRaidMonsterResponseProto*)[[[AttackClanRaidMonsterResponseProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (AttackClanRaidMonsterResponseProto*) parseFromInputStream:(NSInputStream*) input {
  return (AttackClanRaidMonsterResponseProto*)[[[AttackClanRaidMonsterResponseProto builder] mergeFromInputStream:input] build];
}
+ (AttackClanRaidMonsterResponseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (AttackClanRaidMonsterResponseProto*)[[[AttackClanRaidMonsterResponseProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (AttackClanRaidMonsterResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (AttackClanRaidMonsterResponseProto*)[[[AttackClanRaidMonsterResponseProto builder] mergeFromCodedInputStream:input] build];
}
+ (AttackClanRaidMonsterResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (AttackClanRaidMonsterResponseProto*)[[[AttackClanRaidMonsterResponseProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (AttackClanRaidMonsterResponseProto_Builder*) builder {
  return [[[AttackClanRaidMonsterResponseProto_Builder alloc] init] autorelease];
}
+ (AttackClanRaidMonsterResponseProto_Builder*) builderWithPrototype:(AttackClanRaidMonsterResponseProto*) prototype {
  return [[AttackClanRaidMonsterResponseProto builder] mergeFrom:prototype];
}
- (AttackClanRaidMonsterResponseProto_Builder*) builder {
  return [AttackClanRaidMonsterResponseProto builder];
}
@end

BOOL AttackClanRaidMonsterResponseProto_AttackClanRaidMonsterStatusIsValidValue(AttackClanRaidMonsterResponseProto_AttackClanRaidMonsterStatus value) {
  switch (value) {
    case AttackClanRaidMonsterResponseProto_AttackClanRaidMonsterStatusSuccess:
    case AttackClanRaidMonsterResponseProto_AttackClanRaidMonsterStatusSuccessMonsterJustDied:
    case AttackClanRaidMonsterResponseProto_AttackClanRaidMonsterStatusFailUserNotInClan:
    case AttackClanRaidMonsterResponseProto_AttackClanRaidMonsterStatusFailNoStageRaidInProgress:
    case AttackClanRaidMonsterResponseProto_AttackClanRaidMonsterStatusFailMonsterAlreadyDead:
    case AttackClanRaidMonsterResponseProto_AttackClanRaidMonsterStatusFailOther:
      return YES;
    default:
      return NO;
  }
}
@interface AttackClanRaidMonsterResponseProto_Builder()
@property (retain) AttackClanRaidMonsterResponseProto* result;
@end

@implementation AttackClanRaidMonsterResponseProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[AttackClanRaidMonsterResponseProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (AttackClanRaidMonsterResponseProto_Builder*) clear {
  self.result = [[[AttackClanRaidMonsterResponseProto alloc] init] autorelease];
  return self;
}
- (AttackClanRaidMonsterResponseProto_Builder*) clone {
  return [AttackClanRaidMonsterResponseProto builderWithPrototype:result];
}
- (AttackClanRaidMonsterResponseProto*) defaultInstance {
  return [AttackClanRaidMonsterResponseProto defaultInstance];
}
- (AttackClanRaidMonsterResponseProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (AttackClanRaidMonsterResponseProto*) buildPartial {
  AttackClanRaidMonsterResponseProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (AttackClanRaidMonsterResponseProto_Builder*) mergeFrom:(AttackClanRaidMonsterResponseProto*) other {
  if (other == [AttackClanRaidMonsterResponseProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasDmgDealt) {
    [self setDmgDealt:other.dmgDealt];
  }
  if (other.hasEventDetails) {
    [self mergeEventDetails:other.eventDetails];
  }
  if (other.mutableClanUsersDetailsList.count > 0) {
    if (result.mutableClanUsersDetailsList == nil) {
      result.mutableClanUsersDetailsList = [NSMutableArray array];
    }
    [result.mutableClanUsersDetailsList addObjectsFromArray:other.mutableClanUsersDetailsList];
  }
  if (other.hasUserMonsterThatAttacked) {
    [self mergeUserMonsterThatAttacked:other.userMonsterThatAttacked];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (AttackClanRaidMonsterResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (AttackClanRaidMonsterResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setDmgDealt:[input readInt32]];
        break;
      }
      case 26: {
        PersistentClanEventClanInfoProto_Builder* subBuilder = [PersistentClanEventClanInfoProto builder];
        if (self.hasEventDetails) {
          [subBuilder mergeFrom:self.eventDetails];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setEventDetails:[subBuilder buildPartial]];
        break;
      }
      case 34: {
        PersistentClanEventUserInfoProto_Builder* subBuilder = [PersistentClanEventUserInfoProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addClanUsersDetails:[subBuilder buildPartial]];
        break;
      }
      case 42: {
        FullUserMonsterProto_Builder* subBuilder = [FullUserMonsterProto builder];
        if (self.hasUserMonsterThatAttacked) {
          [subBuilder mergeFrom:self.userMonsterThatAttacked];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setUserMonsterThatAttacked:[subBuilder buildPartial]];
        break;
      }
      case 48: {
        int32_t value = [input readEnum];
        if (AttackClanRaidMonsterResponseProto_AttackClanRaidMonsterStatusIsValidValue(value)) {
          [self setStatus:value];
        } else {
          [unknownFields mergeVarintField:6 value:value];
        }
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (AttackClanRaidMonsterResponseProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (AttackClanRaidMonsterResponseProto_Builder*) setSenderBuilder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (AttackClanRaidMonsterResponseProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (AttackClanRaidMonsterResponseProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasDmgDealt {
  return result.hasDmgDealt;
}
- (int32_t) dmgDealt {
  return result.dmgDealt;
}
- (AttackClanRaidMonsterResponseProto_Builder*) setDmgDealt:(int32_t) value {
  result.hasDmgDealt = YES;
  result.dmgDealt = value;
  return self;
}
- (AttackClanRaidMonsterResponseProto_Builder*) clearDmgDealt {
  result.hasDmgDealt = NO;
  result.dmgDealt = 0;
  return self;
}
- (BOOL) hasEventDetails {
  return result.hasEventDetails;
}
- (PersistentClanEventClanInfoProto*) eventDetails {
  return result.eventDetails;
}
- (AttackClanRaidMonsterResponseProto_Builder*) setEventDetails:(PersistentClanEventClanInfoProto*) value {
  result.hasEventDetails = YES;
  result.eventDetails = value;
  return self;
}
- (AttackClanRaidMonsterResponseProto_Builder*) setEventDetailsBuilder:(PersistentClanEventClanInfoProto_Builder*) builderForValue {
  return [self setEventDetails:[builderForValue build]];
}
- (AttackClanRaidMonsterResponseProto_Builder*) mergeEventDetails:(PersistentClanEventClanInfoProto*) value {
  if (result.hasEventDetails &&
      result.eventDetails != [PersistentClanEventClanInfoProto defaultInstance]) {
    result.eventDetails =
      [[[PersistentClanEventClanInfoProto builderWithPrototype:result.eventDetails] mergeFrom:value] buildPartial];
  } else {
    result.eventDetails = value;
  }
  result.hasEventDetails = YES;
  return self;
}
- (AttackClanRaidMonsterResponseProto_Builder*) clearEventDetails {
  result.hasEventDetails = NO;
  result.eventDetails = [PersistentClanEventClanInfoProto defaultInstance];
  return self;
}
- (NSArray*) clanUsersDetailsList {
  if (result.mutableClanUsersDetailsList == nil) { return [NSArray array]; }
  return result.mutableClanUsersDetailsList;
}
- (PersistentClanEventUserInfoProto*) clanUsersDetailsAtIndex:(int32_t) index {
  return [result clanUsersDetailsAtIndex:index];
}
- (AttackClanRaidMonsterResponseProto_Builder*) replaceClanUsersDetailsAtIndex:(int32_t) index with:(PersistentClanEventUserInfoProto*) value {
  [result.mutableClanUsersDetailsList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (AttackClanRaidMonsterResponseProto_Builder*) addAllClanUsersDetails:(NSArray*) values {
  if (result.mutableClanUsersDetailsList == nil) {
    result.mutableClanUsersDetailsList = [NSMutableArray array];
  }
  [result.mutableClanUsersDetailsList addObjectsFromArray:values];
  return self;
}
- (AttackClanRaidMonsterResponseProto_Builder*) clearClanUsersDetailsList {
  result.mutableClanUsersDetailsList = nil;
  return self;
}
- (AttackClanRaidMonsterResponseProto_Builder*) addClanUsersDetails:(PersistentClanEventUserInfoProto*) value {
  if (result.mutableClanUsersDetailsList == nil) {
    result.mutableClanUsersDetailsList = [NSMutableArray array];
  }
  [result.mutableClanUsersDetailsList addObject:value];
  return self;
}
- (BOOL) hasUserMonsterThatAttacked {
  return result.hasUserMonsterThatAttacked;
}
- (FullUserMonsterProto*) userMonsterThatAttacked {
  return result.userMonsterThatAttacked;
}
- (AttackClanRaidMonsterResponseProto_Builder*) setUserMonsterThatAttacked:(FullUserMonsterProto*) value {
  result.hasUserMonsterThatAttacked = YES;
  result.userMonsterThatAttacked = value;
  return self;
}
- (AttackClanRaidMonsterResponseProto_Builder*) setUserMonsterThatAttackedBuilder:(FullUserMonsterProto_Builder*) builderForValue {
  return [self setUserMonsterThatAttacked:[builderForValue build]];
}
- (AttackClanRaidMonsterResponseProto_Builder*) mergeUserMonsterThatAttacked:(FullUserMonsterProto*) value {
  if (result.hasUserMonsterThatAttacked &&
      result.userMonsterThatAttacked != [FullUserMonsterProto defaultInstance]) {
    result.userMonsterThatAttacked =
      [[[FullUserMonsterProto builderWithPrototype:result.userMonsterThatAttacked] mergeFrom:value] buildPartial];
  } else {
    result.userMonsterThatAttacked = value;
  }
  result.hasUserMonsterThatAttacked = YES;
  return self;
}
- (AttackClanRaidMonsterResponseProto_Builder*) clearUserMonsterThatAttacked {
  result.hasUserMonsterThatAttacked = NO;
  result.userMonsterThatAttacked = [FullUserMonsterProto defaultInstance];
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (AttackClanRaidMonsterResponseProto_AttackClanRaidMonsterStatus) status {
  return result.status;
}
- (AttackClanRaidMonsterResponseProto_Builder*) setStatus:(AttackClanRaidMonsterResponseProto_AttackClanRaidMonsterStatus) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (AttackClanRaidMonsterResponseProto_Builder*) clearStatus {
  result.hasStatus = NO;
  result.status = AttackClanRaidMonsterResponseProto_AttackClanRaidMonsterStatusSuccess;
  return self;
}
@end

@interface AwardClanRaidStageRewardResponseProto ()
@property int32_t crsId;
@property (retain) NSMutableArray* mutableAllRewardsList;
@end

@implementation AwardClanRaidStageRewardResponseProto

- (BOOL) hasCrsId {
  return !!hasCrsId_;
}
- (void) setHasCrsId:(BOOL) value {
  hasCrsId_ = !!value;
}
@synthesize crsId;
@synthesize mutableAllRewardsList;
- (void) dealloc {
  self.mutableAllRewardsList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.crsId = 0;
  }
  return self;
}
static AwardClanRaidStageRewardResponseProto* defaultAwardClanRaidStageRewardResponseProtoInstance = nil;
+ (void) initialize {
  if (self == [AwardClanRaidStageRewardResponseProto class]) {
    defaultAwardClanRaidStageRewardResponseProtoInstance = [[AwardClanRaidStageRewardResponseProto alloc] init];
  }
}
+ (AwardClanRaidStageRewardResponseProto*) defaultInstance {
  return defaultAwardClanRaidStageRewardResponseProtoInstance;
}
- (AwardClanRaidStageRewardResponseProto*) defaultInstance {
  return defaultAwardClanRaidStageRewardResponseProtoInstance;
}
- (NSArray*) allRewardsList {
  return mutableAllRewardsList;
}
- (PersistentClanEventUserRewardProto*) allRewardsAtIndex:(int32_t) index {
  id value = [mutableAllRewardsList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCrsId) {
    [output writeInt32:1 value:self.crsId];
  }
  for (PersistentClanEventUserRewardProto* element in self.allRewardsList) {
    [output writeMessage:2 value:element];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasCrsId) {
    size += computeInt32Size(1, self.crsId);
  }
  for (PersistentClanEventUserRewardProto* element in self.allRewardsList) {
    size += computeMessageSize(2, element);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (AwardClanRaidStageRewardResponseProto*) parseFromData:(NSData*) data {
  return (AwardClanRaidStageRewardResponseProto*)[[[AwardClanRaidStageRewardResponseProto builder] mergeFromData:data] build];
}
+ (AwardClanRaidStageRewardResponseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (AwardClanRaidStageRewardResponseProto*)[[[AwardClanRaidStageRewardResponseProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (AwardClanRaidStageRewardResponseProto*) parseFromInputStream:(NSInputStream*) input {
  return (AwardClanRaidStageRewardResponseProto*)[[[AwardClanRaidStageRewardResponseProto builder] mergeFromInputStream:input] build];
}
+ (AwardClanRaidStageRewardResponseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (AwardClanRaidStageRewardResponseProto*)[[[AwardClanRaidStageRewardResponseProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (AwardClanRaidStageRewardResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (AwardClanRaidStageRewardResponseProto*)[[[AwardClanRaidStageRewardResponseProto builder] mergeFromCodedInputStream:input] build];
}
+ (AwardClanRaidStageRewardResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (AwardClanRaidStageRewardResponseProto*)[[[AwardClanRaidStageRewardResponseProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (AwardClanRaidStageRewardResponseProto_Builder*) builder {
  return [[[AwardClanRaidStageRewardResponseProto_Builder alloc] init] autorelease];
}
+ (AwardClanRaidStageRewardResponseProto_Builder*) builderWithPrototype:(AwardClanRaidStageRewardResponseProto*) prototype {
  return [[AwardClanRaidStageRewardResponseProto builder] mergeFrom:prototype];
}
- (AwardClanRaidStageRewardResponseProto_Builder*) builder {
  return [AwardClanRaidStageRewardResponseProto builder];
}
@end

@interface AwardClanRaidStageRewardResponseProto_Builder()
@property (retain) AwardClanRaidStageRewardResponseProto* result;
@end

@implementation AwardClanRaidStageRewardResponseProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[AwardClanRaidStageRewardResponseProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (AwardClanRaidStageRewardResponseProto_Builder*) clear {
  self.result = [[[AwardClanRaidStageRewardResponseProto alloc] init] autorelease];
  return self;
}
- (AwardClanRaidStageRewardResponseProto_Builder*) clone {
  return [AwardClanRaidStageRewardResponseProto builderWithPrototype:result];
}
- (AwardClanRaidStageRewardResponseProto*) defaultInstance {
  return [AwardClanRaidStageRewardResponseProto defaultInstance];
}
- (AwardClanRaidStageRewardResponseProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (AwardClanRaidStageRewardResponseProto*) buildPartial {
  AwardClanRaidStageRewardResponseProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (AwardClanRaidStageRewardResponseProto_Builder*) mergeFrom:(AwardClanRaidStageRewardResponseProto*) other {
  if (other == [AwardClanRaidStageRewardResponseProto defaultInstance]) {
    return self;
  }
  if (other.hasCrsId) {
    [self setCrsId:other.crsId];
  }
  if (other.mutableAllRewardsList.count > 0) {
    if (result.mutableAllRewardsList == nil) {
      result.mutableAllRewardsList = [NSMutableArray array];
    }
    [result.mutableAllRewardsList addObjectsFromArray:other.mutableAllRewardsList];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (AwardClanRaidStageRewardResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (AwardClanRaidStageRewardResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setCrsId:[input readInt32]];
        break;
      }
      case 18: {
        PersistentClanEventUserRewardProto_Builder* subBuilder = [PersistentClanEventUserRewardProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addAllRewards:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasCrsId {
  return result.hasCrsId;
}
- (int32_t) crsId {
  return result.crsId;
}
- (AwardClanRaidStageRewardResponseProto_Builder*) setCrsId:(int32_t) value {
  result.hasCrsId = YES;
  result.crsId = value;
  return self;
}
- (AwardClanRaidStageRewardResponseProto_Builder*) clearCrsId {
  result.hasCrsId = NO;
  result.crsId = 0;
  return self;
}
- (NSArray*) allRewardsList {
  if (result.mutableAllRewardsList == nil) { return [NSArray array]; }
  return result.mutableAllRewardsList;
}
- (PersistentClanEventUserRewardProto*) allRewardsAtIndex:(int32_t) index {
  return [result allRewardsAtIndex:index];
}
- (AwardClanRaidStageRewardResponseProto_Builder*) replaceAllRewardsAtIndex:(int32_t) index with:(PersistentClanEventUserRewardProto*) value {
  [result.mutableAllRewardsList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (AwardClanRaidStageRewardResponseProto_Builder*) addAllAllRewards:(NSArray*) values {
  if (result.mutableAllRewardsList == nil) {
    result.mutableAllRewardsList = [NSMutableArray array];
  }
  [result.mutableAllRewardsList addObjectsFromArray:values];
  return self;
}
- (AwardClanRaidStageRewardResponseProto_Builder*) clearAllRewardsList {
  result.mutableAllRewardsList = nil;
  return self;
}
- (AwardClanRaidStageRewardResponseProto_Builder*) addAllRewards:(PersistentClanEventUserRewardProto*) value {
  if (result.mutableAllRewardsList == nil) {
    result.mutableAllRewardsList = [NSMutableArray array];
  }
  [result.mutableAllRewardsList addObject:value];
  return self;
}
@end

@interface RecordClanRaidStatsRequestProto ()
@property (retain) MinimumUserProto* sender;
@property int32_t clanId;
@property int64_t clientTime;
@end

@implementation RecordClanRaidStatsRequestProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value {
  hasSender_ = !!value;
}
@synthesize sender;
- (BOOL) hasClanId {
  return !!hasClanId_;
}
- (void) setHasClanId:(BOOL) value {
  hasClanId_ = !!value;
}
@synthesize clanId;
- (BOOL) hasClientTime {
  return !!hasClientTime_;
}
- (void) setHasClientTime:(BOOL) value {
  hasClientTime_ = !!value;
}
@synthesize clientTime;
- (void) dealloc {
  self.sender = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.clanId = 0;
    self.clientTime = 0L;
  }
  return self;
}
static RecordClanRaidStatsRequestProto* defaultRecordClanRaidStatsRequestProtoInstance = nil;
+ (void) initialize {
  if (self == [RecordClanRaidStatsRequestProto class]) {
    defaultRecordClanRaidStatsRequestProtoInstance = [[RecordClanRaidStatsRequestProto alloc] init];
  }
}
+ (RecordClanRaidStatsRequestProto*) defaultInstance {
  return defaultRecordClanRaidStatsRequestProtoInstance;
}
- (RecordClanRaidStatsRequestProto*) defaultInstance {
  return defaultRecordClanRaidStatsRequestProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasClanId) {
    [output writeInt32:2 value:self.clanId];
  }
  if (self.hasClientTime) {
    [output writeInt64:3 value:self.clientTime];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSender) {
    size += computeMessageSize(1, self.sender);
  }
  if (self.hasClanId) {
    size += computeInt32Size(2, self.clanId);
  }
  if (self.hasClientTime) {
    size += computeInt64Size(3, self.clientTime);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (RecordClanRaidStatsRequestProto*) parseFromData:(NSData*) data {
  return (RecordClanRaidStatsRequestProto*)[[[RecordClanRaidStatsRequestProto builder] mergeFromData:data] build];
}
+ (RecordClanRaidStatsRequestProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RecordClanRaidStatsRequestProto*)[[[RecordClanRaidStatsRequestProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (RecordClanRaidStatsRequestProto*) parseFromInputStream:(NSInputStream*) input {
  return (RecordClanRaidStatsRequestProto*)[[[RecordClanRaidStatsRequestProto builder] mergeFromInputStream:input] build];
}
+ (RecordClanRaidStatsRequestProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RecordClanRaidStatsRequestProto*)[[[RecordClanRaidStatsRequestProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RecordClanRaidStatsRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (RecordClanRaidStatsRequestProto*)[[[RecordClanRaidStatsRequestProto builder] mergeFromCodedInputStream:input] build];
}
+ (RecordClanRaidStatsRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RecordClanRaidStatsRequestProto*)[[[RecordClanRaidStatsRequestProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RecordClanRaidStatsRequestProto_Builder*) builder {
  return [[[RecordClanRaidStatsRequestProto_Builder alloc] init] autorelease];
}
+ (RecordClanRaidStatsRequestProto_Builder*) builderWithPrototype:(RecordClanRaidStatsRequestProto*) prototype {
  return [[RecordClanRaidStatsRequestProto builder] mergeFrom:prototype];
}
- (RecordClanRaidStatsRequestProto_Builder*) builder {
  return [RecordClanRaidStatsRequestProto builder];
}
@end

@interface RecordClanRaidStatsRequestProto_Builder()
@property (retain) RecordClanRaidStatsRequestProto* result;
@end

@implementation RecordClanRaidStatsRequestProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[RecordClanRaidStatsRequestProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (RecordClanRaidStatsRequestProto_Builder*) clear {
  self.result = [[[RecordClanRaidStatsRequestProto alloc] init] autorelease];
  return self;
}
- (RecordClanRaidStatsRequestProto_Builder*) clone {
  return [RecordClanRaidStatsRequestProto builderWithPrototype:result];
}
- (RecordClanRaidStatsRequestProto*) defaultInstance {
  return [RecordClanRaidStatsRequestProto defaultInstance];
}
- (RecordClanRaidStatsRequestProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (RecordClanRaidStatsRequestProto*) buildPartial {
  RecordClanRaidStatsRequestProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (RecordClanRaidStatsRequestProto_Builder*) mergeFrom:(RecordClanRaidStatsRequestProto*) other {
  if (other == [RecordClanRaidStatsRequestProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasClanId) {
    [self setClanId:other.clanId];
  }
  if (other.hasClientTime) {
    [self setClientTime:other.clientTime];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (RecordClanRaidStatsRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (RecordClanRaidStatsRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setClanId:[input readInt32]];
        break;
      }
      case 24: {
        [self setClientTime:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (RecordClanRaidStatsRequestProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (RecordClanRaidStatsRequestProto_Builder*) setSenderBuilder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (RecordClanRaidStatsRequestProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (RecordClanRaidStatsRequestProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasClanId {
  return result.hasClanId;
}
- (int32_t) clanId {
  return result.clanId;
}
- (RecordClanRaidStatsRequestProto_Builder*) setClanId:(int32_t) value {
  result.hasClanId = YES;
  result.clanId = value;
  return self;
}
- (RecordClanRaidStatsRequestProto_Builder*) clearClanId {
  result.hasClanId = NO;
  result.clanId = 0;
  return self;
}
- (BOOL) hasClientTime {
  return result.hasClientTime;
}
- (int64_t) clientTime {
  return result.clientTime;
}
- (RecordClanRaidStatsRequestProto_Builder*) setClientTime:(int64_t) value {
  result.hasClientTime = YES;
  result.clientTime = value;
  return self;
}
- (RecordClanRaidStatsRequestProto_Builder*) clearClientTime {
  result.hasClientTime = NO;
  result.clientTime = 0L;
  return self;
}
@end

@interface RecordClanRaidStatsResponseProto ()
@property (retain) MinimumUserProto* sender;
@property RecordClanRaidStatsResponseProto_RecordClanRaidStatsStatus status;
@end

@implementation RecordClanRaidStatsResponseProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value {
  hasSender_ = !!value;
}
@synthesize sender;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value {
  hasStatus_ = !!value;
}
@synthesize status;
- (void) dealloc {
  self.sender = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.status = RecordClanRaidStatsResponseProto_RecordClanRaidStatsStatusSuccess;
  }
  return self;
}
static RecordClanRaidStatsResponseProto* defaultRecordClanRaidStatsResponseProtoInstance = nil;
+ (void) initialize {
  if (self == [RecordClanRaidStatsResponseProto class]) {
    defaultRecordClanRaidStatsResponseProtoInstance = [[RecordClanRaidStatsResponseProto alloc] init];
  }
}
+ (RecordClanRaidStatsResponseProto*) defaultInstance {
  return defaultRecordClanRaidStatsResponseProtoInstance;
}
- (RecordClanRaidStatsResponseProto*) defaultInstance {
  return defaultRecordClanRaidStatsResponseProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasStatus) {
    [output writeEnum:2 value:self.status];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSender) {
    size += computeMessageSize(1, self.sender);
  }
  if (self.hasStatus) {
    size += computeEnumSize(2, self.status);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (RecordClanRaidStatsResponseProto*) parseFromData:(NSData*) data {
  return (RecordClanRaidStatsResponseProto*)[[[RecordClanRaidStatsResponseProto builder] mergeFromData:data] build];
}
+ (RecordClanRaidStatsResponseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RecordClanRaidStatsResponseProto*)[[[RecordClanRaidStatsResponseProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (RecordClanRaidStatsResponseProto*) parseFromInputStream:(NSInputStream*) input {
  return (RecordClanRaidStatsResponseProto*)[[[RecordClanRaidStatsResponseProto builder] mergeFromInputStream:input] build];
}
+ (RecordClanRaidStatsResponseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RecordClanRaidStatsResponseProto*)[[[RecordClanRaidStatsResponseProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RecordClanRaidStatsResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (RecordClanRaidStatsResponseProto*)[[[RecordClanRaidStatsResponseProto builder] mergeFromCodedInputStream:input] build];
}
+ (RecordClanRaidStatsResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RecordClanRaidStatsResponseProto*)[[[RecordClanRaidStatsResponseProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RecordClanRaidStatsResponseProto_Builder*) builder {
  return [[[RecordClanRaidStatsResponseProto_Builder alloc] init] autorelease];
}
+ (RecordClanRaidStatsResponseProto_Builder*) builderWithPrototype:(RecordClanRaidStatsResponseProto*) prototype {
  return [[RecordClanRaidStatsResponseProto builder] mergeFrom:prototype];
}
- (RecordClanRaidStatsResponseProto_Builder*) builder {
  return [RecordClanRaidStatsResponseProto builder];
}
@end

BOOL RecordClanRaidStatsResponseProto_RecordClanRaidStatsStatusIsValidValue(RecordClanRaidStatsResponseProto_RecordClanRaidStatsStatus value) {
  switch (value) {
    case RecordClanRaidStatsResponseProto_RecordClanRaidStatsStatusSuccess:
    case RecordClanRaidStatsResponseProto_RecordClanRaidStatsStatusFailMonsterAlreadyDead:
    case RecordClanRaidStatsResponseProto_RecordClanRaidStatsStatusFailOther:
      return YES;
    default:
      return NO;
  }
}
@interface RecordClanRaidStatsResponseProto_Builder()
@property (retain) RecordClanRaidStatsResponseProto* result;
@end

@implementation RecordClanRaidStatsResponseProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[RecordClanRaidStatsResponseProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (RecordClanRaidStatsResponseProto_Builder*) clear {
  self.result = [[[RecordClanRaidStatsResponseProto alloc] init] autorelease];
  return self;
}
- (RecordClanRaidStatsResponseProto_Builder*) clone {
  return [RecordClanRaidStatsResponseProto builderWithPrototype:result];
}
- (RecordClanRaidStatsResponseProto*) defaultInstance {
  return [RecordClanRaidStatsResponseProto defaultInstance];
}
- (RecordClanRaidStatsResponseProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (RecordClanRaidStatsResponseProto*) buildPartial {
  RecordClanRaidStatsResponseProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (RecordClanRaidStatsResponseProto_Builder*) mergeFrom:(RecordClanRaidStatsResponseProto*) other {
  if (other == [RecordClanRaidStatsResponseProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (RecordClanRaidStatsResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (RecordClanRaidStatsResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        int32_t value = [input readEnum];
        if (RecordClanRaidStatsResponseProto_RecordClanRaidStatsStatusIsValidValue(value)) {
          [self setStatus:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (RecordClanRaidStatsResponseProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (RecordClanRaidStatsResponseProto_Builder*) setSenderBuilder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (RecordClanRaidStatsResponseProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (RecordClanRaidStatsResponseProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (RecordClanRaidStatsResponseProto_RecordClanRaidStatsStatus) status {
  return result.status;
}
- (RecordClanRaidStatsResponseProto_Builder*) setStatus:(RecordClanRaidStatsResponseProto_RecordClanRaidStatsStatus) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (RecordClanRaidStatsResponseProto_Builder*) clearStatus {
  result.hasStatus = NO;
  result.status = RecordClanRaidStatsResponseProto_RecordClanRaidStatsStatusSuccess;
  return self;
}
@end

@interface PromoteDemoteClanMemberRequestProto ()
@property (retain) MinimumUserProto* sender;
@property int32_t victimId;
@property UserClanStatus userClanStatus;
@end

@implementation PromoteDemoteClanMemberRequestProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value {
  hasSender_ = !!value;
}
@synthesize sender;
- (BOOL) hasVictimId {
  return !!hasVictimId_;
}
- (void) setHasVictimId:(BOOL) value {
  hasVictimId_ = !!value;
}
@synthesize victimId;
- (BOOL) hasUserClanStatus {
  return !!hasUserClanStatus_;
}
- (void) setHasUserClanStatus:(BOOL) value {
  hasUserClanStatus_ = !!value;
}
@synthesize userClanStatus;
- (void) dealloc {
  self.sender = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.victimId = 0;
    self.userClanStatus = UserClanStatusMember;
  }
  return self;
}
static PromoteDemoteClanMemberRequestProto* defaultPromoteDemoteClanMemberRequestProtoInstance = nil;
+ (void) initialize {
  if (self == [PromoteDemoteClanMemberRequestProto class]) {
    defaultPromoteDemoteClanMemberRequestProtoInstance = [[PromoteDemoteClanMemberRequestProto alloc] init];
  }
}
+ (PromoteDemoteClanMemberRequestProto*) defaultInstance {
  return defaultPromoteDemoteClanMemberRequestProtoInstance;
}
- (PromoteDemoteClanMemberRequestProto*) defaultInstance {
  return defaultPromoteDemoteClanMemberRequestProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasVictimId) {
    [output writeInt32:2 value:self.victimId];
  }
  if (self.hasUserClanStatus) {
    [output writeEnum:3 value:self.userClanStatus];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSender) {
    size += computeMessageSize(1, self.sender);
  }
  if (self.hasVictimId) {
    size += computeInt32Size(2, self.victimId);
  }
  if (self.hasUserClanStatus) {
    size += computeEnumSize(3, self.userClanStatus);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (PromoteDemoteClanMemberRequestProto*) parseFromData:(NSData*) data {
  return (PromoteDemoteClanMemberRequestProto*)[[[PromoteDemoteClanMemberRequestProto builder] mergeFromData:data] build];
}
+ (PromoteDemoteClanMemberRequestProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PromoteDemoteClanMemberRequestProto*)[[[PromoteDemoteClanMemberRequestProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PromoteDemoteClanMemberRequestProto*) parseFromInputStream:(NSInputStream*) input {
  return (PromoteDemoteClanMemberRequestProto*)[[[PromoteDemoteClanMemberRequestProto builder] mergeFromInputStream:input] build];
}
+ (PromoteDemoteClanMemberRequestProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PromoteDemoteClanMemberRequestProto*)[[[PromoteDemoteClanMemberRequestProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PromoteDemoteClanMemberRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PromoteDemoteClanMemberRequestProto*)[[[PromoteDemoteClanMemberRequestProto builder] mergeFromCodedInputStream:input] build];
}
+ (PromoteDemoteClanMemberRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PromoteDemoteClanMemberRequestProto*)[[[PromoteDemoteClanMemberRequestProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PromoteDemoteClanMemberRequestProto_Builder*) builder {
  return [[[PromoteDemoteClanMemberRequestProto_Builder alloc] init] autorelease];
}
+ (PromoteDemoteClanMemberRequestProto_Builder*) builderWithPrototype:(PromoteDemoteClanMemberRequestProto*) prototype {
  return [[PromoteDemoteClanMemberRequestProto builder] mergeFrom:prototype];
}
- (PromoteDemoteClanMemberRequestProto_Builder*) builder {
  return [PromoteDemoteClanMemberRequestProto builder];
}
@end

@interface PromoteDemoteClanMemberRequestProto_Builder()
@property (retain) PromoteDemoteClanMemberRequestProto* result;
@end

@implementation PromoteDemoteClanMemberRequestProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[PromoteDemoteClanMemberRequestProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PromoteDemoteClanMemberRequestProto_Builder*) clear {
  self.result = [[[PromoteDemoteClanMemberRequestProto alloc] init] autorelease];
  return self;
}
- (PromoteDemoteClanMemberRequestProto_Builder*) clone {
  return [PromoteDemoteClanMemberRequestProto builderWithPrototype:result];
}
- (PromoteDemoteClanMemberRequestProto*) defaultInstance {
  return [PromoteDemoteClanMemberRequestProto defaultInstance];
}
- (PromoteDemoteClanMemberRequestProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PromoteDemoteClanMemberRequestProto*) buildPartial {
  PromoteDemoteClanMemberRequestProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (PromoteDemoteClanMemberRequestProto_Builder*) mergeFrom:(PromoteDemoteClanMemberRequestProto*) other {
  if (other == [PromoteDemoteClanMemberRequestProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasVictimId) {
    [self setVictimId:other.victimId];
  }
  if (other.hasUserClanStatus) {
    [self setUserClanStatus:other.userClanStatus];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PromoteDemoteClanMemberRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PromoteDemoteClanMemberRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setVictimId:[input readInt32]];
        break;
      }
      case 24: {
        int32_t value = [input readEnum];
        if (UserClanStatusIsValidValue(value)) {
          [self setUserClanStatus:value];
        } else {
          [unknownFields mergeVarintField:3 value:value];
        }
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (PromoteDemoteClanMemberRequestProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (PromoteDemoteClanMemberRequestProto_Builder*) setSenderBuilder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (PromoteDemoteClanMemberRequestProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (PromoteDemoteClanMemberRequestProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasVictimId {
  return result.hasVictimId;
}
- (int32_t) victimId {
  return result.victimId;
}
- (PromoteDemoteClanMemberRequestProto_Builder*) setVictimId:(int32_t) value {
  result.hasVictimId = YES;
  result.victimId = value;
  return self;
}
- (PromoteDemoteClanMemberRequestProto_Builder*) clearVictimId {
  result.hasVictimId = NO;
  result.victimId = 0;
  return self;
}
- (BOOL) hasUserClanStatus {
  return result.hasUserClanStatus;
}
- (UserClanStatus) userClanStatus {
  return result.userClanStatus;
}
- (PromoteDemoteClanMemberRequestProto_Builder*) setUserClanStatus:(UserClanStatus) value {
  result.hasUserClanStatus = YES;
  result.userClanStatus = value;
  return self;
}
- (PromoteDemoteClanMemberRequestProto_Builder*) clearUserClanStatus {
  result.hasUserClanStatus = NO;
  result.userClanStatus = UserClanStatusMember;
  return self;
}
@end

@interface PromoteDemoteClanMemberResponseProto ()
@property (retain) MinimumUserProto* sender;
@property (retain) MinimumUserProto* victim;
@property UserClanStatus userClanStatus;
@property UserClanStatus prevUserClanStatus;
@property PromoteDemoteClanMemberResponseProto_PromoteDemoteClanMemberStatus status;
@end

@implementation PromoteDemoteClanMemberResponseProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value {
  hasSender_ = !!value;
}
@synthesize sender;
- (BOOL) hasVictim {
  return !!hasVictim_;
}
- (void) setHasVictim:(BOOL) value {
  hasVictim_ = !!value;
}
@synthesize victim;
- (BOOL) hasUserClanStatus {
  return !!hasUserClanStatus_;
}
- (void) setHasUserClanStatus:(BOOL) value {
  hasUserClanStatus_ = !!value;
}
@synthesize userClanStatus;
- (BOOL) hasPrevUserClanStatus {
  return !!hasPrevUserClanStatus_;
}
- (void) setHasPrevUserClanStatus:(BOOL) value {
  hasPrevUserClanStatus_ = !!value;
}
@synthesize prevUserClanStatus;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value {
  hasStatus_ = !!value;
}
@synthesize status;
- (void) dealloc {
  self.sender = nil;
  self.victim = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.victim = [MinimumUserProto defaultInstance];
    self.userClanStatus = UserClanStatusMember;
    self.prevUserClanStatus = UserClanStatusMember;
    self.status = PromoteDemoteClanMemberResponseProto_PromoteDemoteClanMemberStatusSuccess;
  }
  return self;
}
static PromoteDemoteClanMemberResponseProto* defaultPromoteDemoteClanMemberResponseProtoInstance = nil;
+ (void) initialize {
  if (self == [PromoteDemoteClanMemberResponseProto class]) {
    defaultPromoteDemoteClanMemberResponseProtoInstance = [[PromoteDemoteClanMemberResponseProto alloc] init];
  }
}
+ (PromoteDemoteClanMemberResponseProto*) defaultInstance {
  return defaultPromoteDemoteClanMemberResponseProtoInstance;
}
- (PromoteDemoteClanMemberResponseProto*) defaultInstance {
  return defaultPromoteDemoteClanMemberResponseProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasVictim) {
    [output writeMessage:2 value:self.victim];
  }
  if (self.hasUserClanStatus) {
    [output writeEnum:3 value:self.userClanStatus];
  }
  if (self.hasStatus) {
    [output writeEnum:4 value:self.status];
  }
  if (self.hasPrevUserClanStatus) {
    [output writeEnum:5 value:self.prevUserClanStatus];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSender) {
    size += computeMessageSize(1, self.sender);
  }
  if (self.hasVictim) {
    size += computeMessageSize(2, self.victim);
  }
  if (self.hasUserClanStatus) {
    size += computeEnumSize(3, self.userClanStatus);
  }
  if (self.hasStatus) {
    size += computeEnumSize(4, self.status);
  }
  if (self.hasPrevUserClanStatus) {
    size += computeEnumSize(5, self.prevUserClanStatus);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (PromoteDemoteClanMemberResponseProto*) parseFromData:(NSData*) data {
  return (PromoteDemoteClanMemberResponseProto*)[[[PromoteDemoteClanMemberResponseProto builder] mergeFromData:data] build];
}
+ (PromoteDemoteClanMemberResponseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PromoteDemoteClanMemberResponseProto*)[[[PromoteDemoteClanMemberResponseProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PromoteDemoteClanMemberResponseProto*) parseFromInputStream:(NSInputStream*) input {
  return (PromoteDemoteClanMemberResponseProto*)[[[PromoteDemoteClanMemberResponseProto builder] mergeFromInputStream:input] build];
}
+ (PromoteDemoteClanMemberResponseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PromoteDemoteClanMemberResponseProto*)[[[PromoteDemoteClanMemberResponseProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PromoteDemoteClanMemberResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PromoteDemoteClanMemberResponseProto*)[[[PromoteDemoteClanMemberResponseProto builder] mergeFromCodedInputStream:input] build];
}
+ (PromoteDemoteClanMemberResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PromoteDemoteClanMemberResponseProto*)[[[PromoteDemoteClanMemberResponseProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PromoteDemoteClanMemberResponseProto_Builder*) builder {
  return [[[PromoteDemoteClanMemberResponseProto_Builder alloc] init] autorelease];
}
+ (PromoteDemoteClanMemberResponseProto_Builder*) builderWithPrototype:(PromoteDemoteClanMemberResponseProto*) prototype {
  return [[PromoteDemoteClanMemberResponseProto builder] mergeFrom:prototype];
}
- (PromoteDemoteClanMemberResponseProto_Builder*) builder {
  return [PromoteDemoteClanMemberResponseProto builder];
}
@end

BOOL PromoteDemoteClanMemberResponseProto_PromoteDemoteClanMemberStatusIsValidValue(PromoteDemoteClanMemberResponseProto_PromoteDemoteClanMemberStatus value) {
  switch (value) {
    case PromoteDemoteClanMemberResponseProto_PromoteDemoteClanMemberStatusSuccess:
    case PromoteDemoteClanMemberResponseProto_PromoteDemoteClanMemberStatusFailNotInClan:
    case PromoteDemoteClanMemberResponseProto_PromoteDemoteClanMemberStatusFailNotAuthorized:
    case PromoteDemoteClanMemberResponseProto_PromoteDemoteClanMemberStatusFailOther:
      return YES;
    default:
      return NO;
  }
}
@interface PromoteDemoteClanMemberResponseProto_Builder()
@property (retain) PromoteDemoteClanMemberResponseProto* result;
@end

@implementation PromoteDemoteClanMemberResponseProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[PromoteDemoteClanMemberResponseProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PromoteDemoteClanMemberResponseProto_Builder*) clear {
  self.result = [[[PromoteDemoteClanMemberResponseProto alloc] init] autorelease];
  return self;
}
- (PromoteDemoteClanMemberResponseProto_Builder*) clone {
  return [PromoteDemoteClanMemberResponseProto builderWithPrototype:result];
}
- (PromoteDemoteClanMemberResponseProto*) defaultInstance {
  return [PromoteDemoteClanMemberResponseProto defaultInstance];
}
- (PromoteDemoteClanMemberResponseProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PromoteDemoteClanMemberResponseProto*) buildPartial {
  PromoteDemoteClanMemberResponseProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (PromoteDemoteClanMemberResponseProto_Builder*) mergeFrom:(PromoteDemoteClanMemberResponseProto*) other {
  if (other == [PromoteDemoteClanMemberResponseProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasVictim) {
    [self mergeVictim:other.victim];
  }
  if (other.hasUserClanStatus) {
    [self setUserClanStatus:other.userClanStatus];
  }
  if (other.hasPrevUserClanStatus) {
    [self setPrevUserClanStatus:other.prevUserClanStatus];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PromoteDemoteClanMemberResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PromoteDemoteClanMemberResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasVictim) {
          [subBuilder mergeFrom:self.victim];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setVictim:[subBuilder buildPartial]];
        break;
      }
      case 24: {
        int32_t value = [input readEnum];
        if (UserClanStatusIsValidValue(value)) {
          [self setUserClanStatus:value];
        } else {
          [unknownFields mergeVarintField:3 value:value];
        }
        break;
      }
      case 32: {
        int32_t value = [input readEnum];
        if (PromoteDemoteClanMemberResponseProto_PromoteDemoteClanMemberStatusIsValidValue(value)) {
          [self setStatus:value];
        } else {
          [unknownFields mergeVarintField:4 value:value];
        }
        break;
      }
      case 40: {
        int32_t value = [input readEnum];
        if (UserClanStatusIsValidValue(value)) {
          [self setPrevUserClanStatus:value];
        } else {
          [unknownFields mergeVarintField:5 value:value];
        }
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (PromoteDemoteClanMemberResponseProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (PromoteDemoteClanMemberResponseProto_Builder*) setSenderBuilder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (PromoteDemoteClanMemberResponseProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (PromoteDemoteClanMemberResponseProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasVictim {
  return result.hasVictim;
}
- (MinimumUserProto*) victim {
  return result.victim;
}
- (PromoteDemoteClanMemberResponseProto_Builder*) setVictim:(MinimumUserProto*) value {
  result.hasVictim = YES;
  result.victim = value;
  return self;
}
- (PromoteDemoteClanMemberResponseProto_Builder*) setVictimBuilder:(MinimumUserProto_Builder*) builderForValue {
  return [self setVictim:[builderForValue build]];
}
- (PromoteDemoteClanMemberResponseProto_Builder*) mergeVictim:(MinimumUserProto*) value {
  if (result.hasVictim &&
      result.victim != [MinimumUserProto defaultInstance]) {
    result.victim =
      [[[MinimumUserProto builderWithPrototype:result.victim] mergeFrom:value] buildPartial];
  } else {
    result.victim = value;
  }
  result.hasVictim = YES;
  return self;
}
- (PromoteDemoteClanMemberResponseProto_Builder*) clearVictim {
  result.hasVictim = NO;
  result.victim = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasUserClanStatus {
  return result.hasUserClanStatus;
}
- (UserClanStatus) userClanStatus {
  return result.userClanStatus;
}
- (PromoteDemoteClanMemberResponseProto_Builder*) setUserClanStatus:(UserClanStatus) value {
  result.hasUserClanStatus = YES;
  result.userClanStatus = value;
  return self;
}
- (PromoteDemoteClanMemberResponseProto_Builder*) clearUserClanStatus {
  result.hasUserClanStatus = NO;
  result.userClanStatus = UserClanStatusMember;
  return self;
}
- (BOOL) hasPrevUserClanStatus {
  return result.hasPrevUserClanStatus;
}
- (UserClanStatus) prevUserClanStatus {
  return result.prevUserClanStatus;
}
- (PromoteDemoteClanMemberResponseProto_Builder*) setPrevUserClanStatus:(UserClanStatus) value {
  result.hasPrevUserClanStatus = YES;
  result.prevUserClanStatus = value;
  return self;
}
- (PromoteDemoteClanMemberResponseProto_Builder*) clearPrevUserClanStatus {
  result.hasPrevUserClanStatus = NO;
  result.prevUserClanStatus = UserClanStatusMember;
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (PromoteDemoteClanMemberResponseProto_PromoteDemoteClanMemberStatus) status {
  return result.status;
}
- (PromoteDemoteClanMemberResponseProto_Builder*) setStatus:(PromoteDemoteClanMemberResponseProto_PromoteDemoteClanMemberStatus) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (PromoteDemoteClanMemberResponseProto_Builder*) clearStatus {
  result.hasStatus = NO;
  result.status = PromoteDemoteClanMemberResponseProto_PromoteDemoteClanMemberStatusSuccess;
  return self;
}
@end


// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "EventStructure.pb.h"

@implementation EventStructureRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [EventStructureRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    [CityRoot registerAllExtensions:registry];
    [StructureRoot registerAllExtensions:registry];
    [UserRoot registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface PurchaseNormStructureRequestProto ()
@property (retain) MinimumUserProto* sender;
@property (retain) CoordinateProto* structCoordinates;
@property int32_t structId;
@property int64_t timeOfPurchase;
@property int32_t gemsSpent;
@property int32_t resourceChange;
@property ResourceType resourceType;
@end

@implementation PurchaseNormStructureRequestProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value {
  hasSender_ = !!value;
}
@synthesize sender;
- (BOOL) hasStructCoordinates {
  return !!hasStructCoordinates_;
}
- (void) setHasStructCoordinates:(BOOL) value {
  hasStructCoordinates_ = !!value;
}
@synthesize structCoordinates;
- (BOOL) hasStructId {
  return !!hasStructId_;
}
- (void) setHasStructId:(BOOL) value {
  hasStructId_ = !!value;
}
@synthesize structId;
- (BOOL) hasTimeOfPurchase {
  return !!hasTimeOfPurchase_;
}
- (void) setHasTimeOfPurchase:(BOOL) value {
  hasTimeOfPurchase_ = !!value;
}
@synthesize timeOfPurchase;
- (BOOL) hasGemsSpent {
  return !!hasGemsSpent_;
}
- (void) setHasGemsSpent:(BOOL) value {
  hasGemsSpent_ = !!value;
}
@synthesize gemsSpent;
- (BOOL) hasResourceChange {
  return !!hasResourceChange_;
}
- (void) setHasResourceChange:(BOOL) value {
  hasResourceChange_ = !!value;
}
@synthesize resourceChange;
- (BOOL) hasResourceType {
  return !!hasResourceType_;
}
- (void) setHasResourceType:(BOOL) value {
  hasResourceType_ = !!value;
}
@synthesize resourceType;
- (void) dealloc {
  self.sender = nil;
  self.structCoordinates = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.structCoordinates = [CoordinateProto defaultInstance];
    self.structId = 0;
    self.timeOfPurchase = 0L;
    self.gemsSpent = 0;
    self.resourceChange = 0;
    self.resourceType = ResourceTypeCash;
  }
  return self;
}
static PurchaseNormStructureRequestProto* defaultPurchaseNormStructureRequestProtoInstance = nil;
+ (void) initialize {
  if (self == [PurchaseNormStructureRequestProto class]) {
    defaultPurchaseNormStructureRequestProtoInstance = [[PurchaseNormStructureRequestProto alloc] init];
  }
}
+ (PurchaseNormStructureRequestProto*) defaultInstance {
  return defaultPurchaseNormStructureRequestProtoInstance;
}
- (PurchaseNormStructureRequestProto*) defaultInstance {
  return defaultPurchaseNormStructureRequestProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasStructCoordinates) {
    [output writeMessage:2 value:self.structCoordinates];
  }
  if (self.hasStructId) {
    [output writeInt32:3 value:self.structId];
  }
  if (self.hasTimeOfPurchase) {
    [output writeInt64:4 value:self.timeOfPurchase];
  }
  if (self.hasGemsSpent) {
    [output writeInt32:5 value:self.gemsSpent];
  }
  if (self.hasResourceChange) {
    [output writeSInt32:6 value:self.resourceChange];
  }
  if (self.hasResourceType) {
    [output writeEnum:7 value:self.resourceType];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSender) {
    size += computeMessageSize(1, self.sender);
  }
  if (self.hasStructCoordinates) {
    size += computeMessageSize(2, self.structCoordinates);
  }
  if (self.hasStructId) {
    size += computeInt32Size(3, self.structId);
  }
  if (self.hasTimeOfPurchase) {
    size += computeInt64Size(4, self.timeOfPurchase);
  }
  if (self.hasGemsSpent) {
    size += computeInt32Size(5, self.gemsSpent);
  }
  if (self.hasResourceChange) {
    size += computeSInt32Size(6, self.resourceChange);
  }
  if (self.hasResourceType) {
    size += computeEnumSize(7, self.resourceType);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (PurchaseNormStructureRequestProto*) parseFromData:(NSData*) data {
  return (PurchaseNormStructureRequestProto*)[[[PurchaseNormStructureRequestProto builder] mergeFromData:data] build];
}
+ (PurchaseNormStructureRequestProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PurchaseNormStructureRequestProto*)[[[PurchaseNormStructureRequestProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PurchaseNormStructureRequestProto*) parseFromInputStream:(NSInputStream*) input {
  return (PurchaseNormStructureRequestProto*)[[[PurchaseNormStructureRequestProto builder] mergeFromInputStream:input] build];
}
+ (PurchaseNormStructureRequestProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PurchaseNormStructureRequestProto*)[[[PurchaseNormStructureRequestProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PurchaseNormStructureRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PurchaseNormStructureRequestProto*)[[[PurchaseNormStructureRequestProto builder] mergeFromCodedInputStream:input] build];
}
+ (PurchaseNormStructureRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PurchaseNormStructureRequestProto*)[[[PurchaseNormStructureRequestProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PurchaseNormStructureRequestProto_Builder*) builder {
  return [[[PurchaseNormStructureRequestProto_Builder alloc] init] autorelease];
}
+ (PurchaseNormStructureRequestProto_Builder*) builderWithPrototype:(PurchaseNormStructureRequestProto*) prototype {
  return [[PurchaseNormStructureRequestProto builder] mergeFrom:prototype];
}
- (PurchaseNormStructureRequestProto_Builder*) builder {
  return [PurchaseNormStructureRequestProto builder];
}
@end

@interface PurchaseNormStructureRequestProto_Builder()
@property (retain) PurchaseNormStructureRequestProto* result;
@end

@implementation PurchaseNormStructureRequestProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[PurchaseNormStructureRequestProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PurchaseNormStructureRequestProto_Builder*) clear {
  self.result = [[[PurchaseNormStructureRequestProto alloc] init] autorelease];
  return self;
}
- (PurchaseNormStructureRequestProto_Builder*) clone {
  return [PurchaseNormStructureRequestProto builderWithPrototype:result];
}
- (PurchaseNormStructureRequestProto*) defaultInstance {
  return [PurchaseNormStructureRequestProto defaultInstance];
}
- (PurchaseNormStructureRequestProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PurchaseNormStructureRequestProto*) buildPartial {
  PurchaseNormStructureRequestProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (PurchaseNormStructureRequestProto_Builder*) mergeFrom:(PurchaseNormStructureRequestProto*) other {
  if (other == [PurchaseNormStructureRequestProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasStructCoordinates) {
    [self mergeStructCoordinates:other.structCoordinates];
  }
  if (other.hasStructId) {
    [self setStructId:other.structId];
  }
  if (other.hasTimeOfPurchase) {
    [self setTimeOfPurchase:other.timeOfPurchase];
  }
  if (other.hasGemsSpent) {
    [self setGemsSpent:other.gemsSpent];
  }
  if (other.hasResourceChange) {
    [self setResourceChange:other.resourceChange];
  }
  if (other.hasResourceType) {
    [self setResourceType:other.resourceType];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PurchaseNormStructureRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PurchaseNormStructureRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        CoordinateProto_Builder* subBuilder = [CoordinateProto builder];
        if (self.hasStructCoordinates) {
          [subBuilder mergeFrom:self.structCoordinates];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setStructCoordinates:[subBuilder buildPartial]];
        break;
      }
      case 24: {
        [self setStructId:[input readInt32]];
        break;
      }
      case 32: {
        [self setTimeOfPurchase:[input readInt64]];
        break;
      }
      case 40: {
        [self setGemsSpent:[input readInt32]];
        break;
      }
      case 48: {
        [self setResourceChange:[input readSInt32]];
        break;
      }
      case 56: {
        int32_t value = [input readEnum];
        if (ResourceTypeIsValidValue(value)) {
          [self setResourceType:value];
        } else {
          [unknownFields mergeVarintField:7 value:value];
        }
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (PurchaseNormStructureRequestProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (PurchaseNormStructureRequestProto_Builder*) setSenderBuilder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (PurchaseNormStructureRequestProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (PurchaseNormStructureRequestProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasStructCoordinates {
  return result.hasStructCoordinates;
}
- (CoordinateProto*) structCoordinates {
  return result.structCoordinates;
}
- (PurchaseNormStructureRequestProto_Builder*) setStructCoordinates:(CoordinateProto*) value {
  result.hasStructCoordinates = YES;
  result.structCoordinates = value;
  return self;
}
- (PurchaseNormStructureRequestProto_Builder*) setStructCoordinatesBuilder:(CoordinateProto_Builder*) builderForValue {
  return [self setStructCoordinates:[builderForValue build]];
}
- (PurchaseNormStructureRequestProto_Builder*) mergeStructCoordinates:(CoordinateProto*) value {
  if (result.hasStructCoordinates &&
      result.structCoordinates != [CoordinateProto defaultInstance]) {
    result.structCoordinates =
      [[[CoordinateProto builderWithPrototype:result.structCoordinates] mergeFrom:value] buildPartial];
  } else {
    result.structCoordinates = value;
  }
  result.hasStructCoordinates = YES;
  return self;
}
- (PurchaseNormStructureRequestProto_Builder*) clearStructCoordinates {
  result.hasStructCoordinates = NO;
  result.structCoordinates = [CoordinateProto defaultInstance];
  return self;
}
- (BOOL) hasStructId {
  return result.hasStructId;
}
- (int32_t) structId {
  return result.structId;
}
- (PurchaseNormStructureRequestProto_Builder*) setStructId:(int32_t) value {
  result.hasStructId = YES;
  result.structId = value;
  return self;
}
- (PurchaseNormStructureRequestProto_Builder*) clearStructId {
  result.hasStructId = NO;
  result.structId = 0;
  return self;
}
- (BOOL) hasTimeOfPurchase {
  return result.hasTimeOfPurchase;
}
- (int64_t) timeOfPurchase {
  return result.timeOfPurchase;
}
- (PurchaseNormStructureRequestProto_Builder*) setTimeOfPurchase:(int64_t) value {
  result.hasTimeOfPurchase = YES;
  result.timeOfPurchase = value;
  return self;
}
- (PurchaseNormStructureRequestProto_Builder*) clearTimeOfPurchase {
  result.hasTimeOfPurchase = NO;
  result.timeOfPurchase = 0L;
  return self;
}
- (BOOL) hasGemsSpent {
  return result.hasGemsSpent;
}
- (int32_t) gemsSpent {
  return result.gemsSpent;
}
- (PurchaseNormStructureRequestProto_Builder*) setGemsSpent:(int32_t) value {
  result.hasGemsSpent = YES;
  result.gemsSpent = value;
  return self;
}
- (PurchaseNormStructureRequestProto_Builder*) clearGemsSpent {
  result.hasGemsSpent = NO;
  result.gemsSpent = 0;
  return self;
}
- (BOOL) hasResourceChange {
  return result.hasResourceChange;
}
- (int32_t) resourceChange {
  return result.resourceChange;
}
- (PurchaseNormStructureRequestProto_Builder*) setResourceChange:(int32_t) value {
  result.hasResourceChange = YES;
  result.resourceChange = value;
  return self;
}
- (PurchaseNormStructureRequestProto_Builder*) clearResourceChange {
  result.hasResourceChange = NO;
  result.resourceChange = 0;
  return self;
}
- (BOOL) hasResourceType {
  return result.hasResourceType;
}
- (ResourceType) resourceType {
  return result.resourceType;
}
- (PurchaseNormStructureRequestProto_Builder*) setResourceType:(ResourceType) value {
  result.hasResourceType = YES;
  result.resourceType = value;
  return self;
}
- (PurchaseNormStructureRequestProto_Builder*) clearResourceType {
  result.hasResourceType = NO;
  result.resourceType = ResourceTypeCash;
  return self;
}
@end

@interface PurchaseNormStructureResponseProto ()
@property (retain) MinimumUserProto* sender;
@property PurchaseNormStructureResponseProto_PurchaseNormStructureStatus status;
@property int32_t userStructId;
@end

@implementation PurchaseNormStructureResponseProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value {
  hasSender_ = !!value;
}
@synthesize sender;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value {
  hasStatus_ = !!value;
}
@synthesize status;
- (BOOL) hasUserStructId {
  return !!hasUserStructId_;
}
- (void) setHasUserStructId:(BOOL) value {
  hasUserStructId_ = !!value;
}
@synthesize userStructId;
- (void) dealloc {
  self.sender = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.status = PurchaseNormStructureResponseProto_PurchaseNormStructureStatusSuccess;
    self.userStructId = 0;
  }
  return self;
}
static PurchaseNormStructureResponseProto* defaultPurchaseNormStructureResponseProtoInstance = nil;
+ (void) initialize {
  if (self == [PurchaseNormStructureResponseProto class]) {
    defaultPurchaseNormStructureResponseProtoInstance = [[PurchaseNormStructureResponseProto alloc] init];
  }
}
+ (PurchaseNormStructureResponseProto*) defaultInstance {
  return defaultPurchaseNormStructureResponseProtoInstance;
}
- (PurchaseNormStructureResponseProto*) defaultInstance {
  return defaultPurchaseNormStructureResponseProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasStatus) {
    [output writeEnum:2 value:self.status];
  }
  if (self.hasUserStructId) {
    [output writeInt32:3 value:self.userStructId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSender) {
    size += computeMessageSize(1, self.sender);
  }
  if (self.hasStatus) {
    size += computeEnumSize(2, self.status);
  }
  if (self.hasUserStructId) {
    size += computeInt32Size(3, self.userStructId);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (PurchaseNormStructureResponseProto*) parseFromData:(NSData*) data {
  return (PurchaseNormStructureResponseProto*)[[[PurchaseNormStructureResponseProto builder] mergeFromData:data] build];
}
+ (PurchaseNormStructureResponseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PurchaseNormStructureResponseProto*)[[[PurchaseNormStructureResponseProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PurchaseNormStructureResponseProto*) parseFromInputStream:(NSInputStream*) input {
  return (PurchaseNormStructureResponseProto*)[[[PurchaseNormStructureResponseProto builder] mergeFromInputStream:input] build];
}
+ (PurchaseNormStructureResponseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PurchaseNormStructureResponseProto*)[[[PurchaseNormStructureResponseProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PurchaseNormStructureResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PurchaseNormStructureResponseProto*)[[[PurchaseNormStructureResponseProto builder] mergeFromCodedInputStream:input] build];
}
+ (PurchaseNormStructureResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PurchaseNormStructureResponseProto*)[[[PurchaseNormStructureResponseProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PurchaseNormStructureResponseProto_Builder*) builder {
  return [[[PurchaseNormStructureResponseProto_Builder alloc] init] autorelease];
}
+ (PurchaseNormStructureResponseProto_Builder*) builderWithPrototype:(PurchaseNormStructureResponseProto*) prototype {
  return [[PurchaseNormStructureResponseProto builder] mergeFrom:prototype];
}
- (PurchaseNormStructureResponseProto_Builder*) builder {
  return [PurchaseNormStructureResponseProto builder];
}
@end

BOOL PurchaseNormStructureResponseProto_PurchaseNormStructureStatusIsValidValue(PurchaseNormStructureResponseProto_PurchaseNormStructureStatus value) {
  switch (value) {
    case PurchaseNormStructureResponseProto_PurchaseNormStructureStatusSuccess:
    case PurchaseNormStructureResponseProto_PurchaseNormStructureStatusFailInsufficientCash:
    case PurchaseNormStructureResponseProto_PurchaseNormStructureStatusFailInsufficientGems:
    case PurchaseNormStructureResponseProto_PurchaseNormStructureStatusFailInsufficientOil:
    case PurchaseNormStructureResponseProto_PurchaseNormStructureStatusFailOther:
      return YES;
    default:
      return NO;
  }
}
@interface PurchaseNormStructureResponseProto_Builder()
@property (retain) PurchaseNormStructureResponseProto* result;
@end

@implementation PurchaseNormStructureResponseProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[PurchaseNormStructureResponseProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PurchaseNormStructureResponseProto_Builder*) clear {
  self.result = [[[PurchaseNormStructureResponseProto alloc] init] autorelease];
  return self;
}
- (PurchaseNormStructureResponseProto_Builder*) clone {
  return [PurchaseNormStructureResponseProto builderWithPrototype:result];
}
- (PurchaseNormStructureResponseProto*) defaultInstance {
  return [PurchaseNormStructureResponseProto defaultInstance];
}
- (PurchaseNormStructureResponseProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PurchaseNormStructureResponseProto*) buildPartial {
  PurchaseNormStructureResponseProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (PurchaseNormStructureResponseProto_Builder*) mergeFrom:(PurchaseNormStructureResponseProto*) other {
  if (other == [PurchaseNormStructureResponseProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  if (other.hasUserStructId) {
    [self setUserStructId:other.userStructId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PurchaseNormStructureResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PurchaseNormStructureResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        int32_t value = [input readEnum];
        if (PurchaseNormStructureResponseProto_PurchaseNormStructureStatusIsValidValue(value)) {
          [self setStatus:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
      case 24: {
        [self setUserStructId:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (PurchaseNormStructureResponseProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (PurchaseNormStructureResponseProto_Builder*) setSenderBuilder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (PurchaseNormStructureResponseProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (PurchaseNormStructureResponseProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (PurchaseNormStructureResponseProto_PurchaseNormStructureStatus) status {
  return result.status;
}
- (PurchaseNormStructureResponseProto_Builder*) setStatus:(PurchaseNormStructureResponseProto_PurchaseNormStructureStatus) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (PurchaseNormStructureResponseProto_Builder*) clearStatus {
  result.hasStatus = NO;
  result.status = PurchaseNormStructureResponseProto_PurchaseNormStructureStatusSuccess;
  return self;
}
- (BOOL) hasUserStructId {
  return result.hasUserStructId;
}
- (int32_t) userStructId {
  return result.userStructId;
}
- (PurchaseNormStructureResponseProto_Builder*) setUserStructId:(int32_t) value {
  result.hasUserStructId = YES;
  result.userStructId = value;
  return self;
}
- (PurchaseNormStructureResponseProto_Builder*) clearUserStructId {
  result.hasUserStructId = NO;
  result.userStructId = 0;
  return self;
}
@end

@interface MoveOrRotateNormStructureRequestProto ()
@property (retain) MinimumUserProto* sender;
@property int32_t userStructId;
@property MoveOrRotateNormStructureRequestProto_MoveOrRotateNormStructType type;
@property (retain) CoordinateProto* curStructCoordinates;
@property StructOrientation newOrientation;
@end

@implementation MoveOrRotateNormStructureRequestProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value {
  hasSender_ = !!value;
}
@synthesize sender;
- (BOOL) hasUserStructId {
  return !!hasUserStructId_;
}
- (void) setHasUserStructId:(BOOL) value {
  hasUserStructId_ = !!value;
}
@synthesize userStructId;
- (BOOL) hasType {
  return !!hasType_;
}
- (void) setHasType:(BOOL) value {
  hasType_ = !!value;
}
@synthesize type;
- (BOOL) hasCurStructCoordinates {
  return !!hasCurStructCoordinates_;
}
- (void) setHasCurStructCoordinates:(BOOL) value {
  hasCurStructCoordinates_ = !!value;
}
@synthesize curStructCoordinates;
- (BOOL) hasNewOrientation {
  return !!hasNewOrientation_;
}
- (void) setHasNewOrientation:(BOOL) value {
  hasNewOrientation_ = !!value;
}
@synthesize newOrientation;
- (void) dealloc {
  self.sender = nil;
  self.curStructCoordinates = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.userStructId = 0;
    self.type = MoveOrRotateNormStructureRequestProto_MoveOrRotateNormStructTypeMove;
    self.curStructCoordinates = [CoordinateProto defaultInstance];
    self.newOrientation = StructOrientationPosition1;
  }
  return self;
}
static MoveOrRotateNormStructureRequestProto* defaultMoveOrRotateNormStructureRequestProtoInstance = nil;
+ (void) initialize {
  if (self == [MoveOrRotateNormStructureRequestProto class]) {
    defaultMoveOrRotateNormStructureRequestProtoInstance = [[MoveOrRotateNormStructureRequestProto alloc] init];
  }
}
+ (MoveOrRotateNormStructureRequestProto*) defaultInstance {
  return defaultMoveOrRotateNormStructureRequestProtoInstance;
}
- (MoveOrRotateNormStructureRequestProto*) defaultInstance {
  return defaultMoveOrRotateNormStructureRequestProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasUserStructId) {
    [output writeInt32:2 value:self.userStructId];
  }
  if (self.hasType) {
    [output writeEnum:3 value:self.type];
  }
  if (self.hasCurStructCoordinates) {
    [output writeMessage:4 value:self.curStructCoordinates];
  }
  if (self.hasNewOrientation) {
    [output writeEnum:5 value:self.newOrientation];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSender) {
    size += computeMessageSize(1, self.sender);
  }
  if (self.hasUserStructId) {
    size += computeInt32Size(2, self.userStructId);
  }
  if (self.hasType) {
    size += computeEnumSize(3, self.type);
  }
  if (self.hasCurStructCoordinates) {
    size += computeMessageSize(4, self.curStructCoordinates);
  }
  if (self.hasNewOrientation) {
    size += computeEnumSize(5, self.newOrientation);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (MoveOrRotateNormStructureRequestProto*) parseFromData:(NSData*) data {
  return (MoveOrRotateNormStructureRequestProto*)[[[MoveOrRotateNormStructureRequestProto builder] mergeFromData:data] build];
}
+ (MoveOrRotateNormStructureRequestProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MoveOrRotateNormStructureRequestProto*)[[[MoveOrRotateNormStructureRequestProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (MoveOrRotateNormStructureRequestProto*) parseFromInputStream:(NSInputStream*) input {
  return (MoveOrRotateNormStructureRequestProto*)[[[MoveOrRotateNormStructureRequestProto builder] mergeFromInputStream:input] build];
}
+ (MoveOrRotateNormStructureRequestProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MoveOrRotateNormStructureRequestProto*)[[[MoveOrRotateNormStructureRequestProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MoveOrRotateNormStructureRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (MoveOrRotateNormStructureRequestProto*)[[[MoveOrRotateNormStructureRequestProto builder] mergeFromCodedInputStream:input] build];
}
+ (MoveOrRotateNormStructureRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MoveOrRotateNormStructureRequestProto*)[[[MoveOrRotateNormStructureRequestProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MoveOrRotateNormStructureRequestProto_Builder*) builder {
  return [[[MoveOrRotateNormStructureRequestProto_Builder alloc] init] autorelease];
}
+ (MoveOrRotateNormStructureRequestProto_Builder*) builderWithPrototype:(MoveOrRotateNormStructureRequestProto*) prototype {
  return [[MoveOrRotateNormStructureRequestProto builder] mergeFrom:prototype];
}
- (MoveOrRotateNormStructureRequestProto_Builder*) builder {
  return [MoveOrRotateNormStructureRequestProto builder];
}
@end

BOOL MoveOrRotateNormStructureRequestProto_MoveOrRotateNormStructTypeIsValidValue(MoveOrRotateNormStructureRequestProto_MoveOrRotateNormStructType value) {
  switch (value) {
    case MoveOrRotateNormStructureRequestProto_MoveOrRotateNormStructTypeMove:
      return YES;
    default:
      return NO;
  }
}
@interface MoveOrRotateNormStructureRequestProto_Builder()
@property (retain) MoveOrRotateNormStructureRequestProto* result;
@end

@implementation MoveOrRotateNormStructureRequestProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[MoveOrRotateNormStructureRequestProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (MoveOrRotateNormStructureRequestProto_Builder*) clear {
  self.result = [[[MoveOrRotateNormStructureRequestProto alloc] init] autorelease];
  return self;
}
- (MoveOrRotateNormStructureRequestProto_Builder*) clone {
  return [MoveOrRotateNormStructureRequestProto builderWithPrototype:result];
}
- (MoveOrRotateNormStructureRequestProto*) defaultInstance {
  return [MoveOrRotateNormStructureRequestProto defaultInstance];
}
- (MoveOrRotateNormStructureRequestProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (MoveOrRotateNormStructureRequestProto*) buildPartial {
  MoveOrRotateNormStructureRequestProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (MoveOrRotateNormStructureRequestProto_Builder*) mergeFrom:(MoveOrRotateNormStructureRequestProto*) other {
  if (other == [MoveOrRotateNormStructureRequestProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasUserStructId) {
    [self setUserStructId:other.userStructId];
  }
  if (other.hasType) {
    [self setType:other.type];
  }
  if (other.hasCurStructCoordinates) {
    [self mergeCurStructCoordinates:other.curStructCoordinates];
  }
  if (other.hasNewOrientation) {
    [self setNewOrientation:other.newOrientation];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (MoveOrRotateNormStructureRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (MoveOrRotateNormStructureRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setUserStructId:[input readInt32]];
        break;
      }
      case 24: {
        int32_t value = [input readEnum];
        if (MoveOrRotateNormStructureRequestProto_MoveOrRotateNormStructTypeIsValidValue(value)) {
          [self setType:value];
        } else {
          [unknownFields mergeVarintField:3 value:value];
        }
        break;
      }
      case 34: {
        CoordinateProto_Builder* subBuilder = [CoordinateProto builder];
        if (self.hasCurStructCoordinates) {
          [subBuilder mergeFrom:self.curStructCoordinates];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setCurStructCoordinates:[subBuilder buildPartial]];
        break;
      }
      case 40: {
        int32_t value = [input readEnum];
        if (StructOrientationIsValidValue(value)) {
          [self setNewOrientation:value];
        } else {
          [unknownFields mergeVarintField:5 value:value];
        }
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (MoveOrRotateNormStructureRequestProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (MoveOrRotateNormStructureRequestProto_Builder*) setSenderBuilder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (MoveOrRotateNormStructureRequestProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (MoveOrRotateNormStructureRequestProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasUserStructId {
  return result.hasUserStructId;
}
- (int32_t) userStructId {
  return result.userStructId;
}
- (MoveOrRotateNormStructureRequestProto_Builder*) setUserStructId:(int32_t) value {
  result.hasUserStructId = YES;
  result.userStructId = value;
  return self;
}
- (MoveOrRotateNormStructureRequestProto_Builder*) clearUserStructId {
  result.hasUserStructId = NO;
  result.userStructId = 0;
  return self;
}
- (BOOL) hasType {
  return result.hasType;
}
- (MoveOrRotateNormStructureRequestProto_MoveOrRotateNormStructType) type {
  return result.type;
}
- (MoveOrRotateNormStructureRequestProto_Builder*) setType:(MoveOrRotateNormStructureRequestProto_MoveOrRotateNormStructType) value {
  result.hasType = YES;
  result.type = value;
  return self;
}
- (MoveOrRotateNormStructureRequestProto_Builder*) clearType {
  result.hasType = NO;
  result.type = MoveOrRotateNormStructureRequestProto_MoveOrRotateNormStructTypeMove;
  return self;
}
- (BOOL) hasCurStructCoordinates {
  return result.hasCurStructCoordinates;
}
- (CoordinateProto*) curStructCoordinates {
  return result.curStructCoordinates;
}
- (MoveOrRotateNormStructureRequestProto_Builder*) setCurStructCoordinates:(CoordinateProto*) value {
  result.hasCurStructCoordinates = YES;
  result.curStructCoordinates = value;
  return self;
}
- (MoveOrRotateNormStructureRequestProto_Builder*) setCurStructCoordinatesBuilder:(CoordinateProto_Builder*) builderForValue {
  return [self setCurStructCoordinates:[builderForValue build]];
}
- (MoveOrRotateNormStructureRequestProto_Builder*) mergeCurStructCoordinates:(CoordinateProto*) value {
  if (result.hasCurStructCoordinates &&
      result.curStructCoordinates != [CoordinateProto defaultInstance]) {
    result.curStructCoordinates =
      [[[CoordinateProto builderWithPrototype:result.curStructCoordinates] mergeFrom:value] buildPartial];
  } else {
    result.curStructCoordinates = value;
  }
  result.hasCurStructCoordinates = YES;
  return self;
}
- (MoveOrRotateNormStructureRequestProto_Builder*) clearCurStructCoordinates {
  result.hasCurStructCoordinates = NO;
  result.curStructCoordinates = [CoordinateProto defaultInstance];
  return self;
}
- (BOOL) hasNewOrientation {
  return result.hasNewOrientation;
}
- (StructOrientation) newOrientation {
  return result.newOrientation;
}
- (MoveOrRotateNormStructureRequestProto_Builder*) setNewOrientation:(StructOrientation) value {
  result.hasNewOrientation = YES;
  result.newOrientation = value;
  return self;
}
- (MoveOrRotateNormStructureRequestProto_Builder*) clearNewOrientation {
  result.hasNewOrientation = NO;
  result.newOrientation = StructOrientationPosition1;
  return self;
}
@end

@interface MoveOrRotateNormStructureResponseProto ()
@property (retain) MinimumUserProto* sender;
@property MoveOrRotateNormStructureResponseProto_MoveOrRotateNormStructureStatus status;
@end

@implementation MoveOrRotateNormStructureResponseProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value {
  hasSender_ = !!value;
}
@synthesize sender;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value {
  hasStatus_ = !!value;
}
@synthesize status;
- (void) dealloc {
  self.sender = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.status = MoveOrRotateNormStructureResponseProto_MoveOrRotateNormStructureStatusSuccess;
  }
  return self;
}
static MoveOrRotateNormStructureResponseProto* defaultMoveOrRotateNormStructureResponseProtoInstance = nil;
+ (void) initialize {
  if (self == [MoveOrRotateNormStructureResponseProto class]) {
    defaultMoveOrRotateNormStructureResponseProtoInstance = [[MoveOrRotateNormStructureResponseProto alloc] init];
  }
}
+ (MoveOrRotateNormStructureResponseProto*) defaultInstance {
  return defaultMoveOrRotateNormStructureResponseProtoInstance;
}
- (MoveOrRotateNormStructureResponseProto*) defaultInstance {
  return defaultMoveOrRotateNormStructureResponseProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasStatus) {
    [output writeEnum:2 value:self.status];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSender) {
    size += computeMessageSize(1, self.sender);
  }
  if (self.hasStatus) {
    size += computeEnumSize(2, self.status);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (MoveOrRotateNormStructureResponseProto*) parseFromData:(NSData*) data {
  return (MoveOrRotateNormStructureResponseProto*)[[[MoveOrRotateNormStructureResponseProto builder] mergeFromData:data] build];
}
+ (MoveOrRotateNormStructureResponseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MoveOrRotateNormStructureResponseProto*)[[[MoveOrRotateNormStructureResponseProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (MoveOrRotateNormStructureResponseProto*) parseFromInputStream:(NSInputStream*) input {
  return (MoveOrRotateNormStructureResponseProto*)[[[MoveOrRotateNormStructureResponseProto builder] mergeFromInputStream:input] build];
}
+ (MoveOrRotateNormStructureResponseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MoveOrRotateNormStructureResponseProto*)[[[MoveOrRotateNormStructureResponseProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MoveOrRotateNormStructureResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (MoveOrRotateNormStructureResponseProto*)[[[MoveOrRotateNormStructureResponseProto builder] mergeFromCodedInputStream:input] build];
}
+ (MoveOrRotateNormStructureResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MoveOrRotateNormStructureResponseProto*)[[[MoveOrRotateNormStructureResponseProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MoveOrRotateNormStructureResponseProto_Builder*) builder {
  return [[[MoveOrRotateNormStructureResponseProto_Builder alloc] init] autorelease];
}
+ (MoveOrRotateNormStructureResponseProto_Builder*) builderWithPrototype:(MoveOrRotateNormStructureResponseProto*) prototype {
  return [[MoveOrRotateNormStructureResponseProto builder] mergeFrom:prototype];
}
- (MoveOrRotateNormStructureResponseProto_Builder*) builder {
  return [MoveOrRotateNormStructureResponseProto builder];
}
@end

BOOL MoveOrRotateNormStructureResponseProto_MoveOrRotateNormStructureStatusIsValidValue(MoveOrRotateNormStructureResponseProto_MoveOrRotateNormStructureStatus value) {
  switch (value) {
    case MoveOrRotateNormStructureResponseProto_MoveOrRotateNormStructureStatusSuccess:
    case MoveOrRotateNormStructureResponseProto_MoveOrRotateNormStructureStatusOtherFail:
      return YES;
    default:
      return NO;
  }
}
@interface MoveOrRotateNormStructureResponseProto_Builder()
@property (retain) MoveOrRotateNormStructureResponseProto* result;
@end

@implementation MoveOrRotateNormStructureResponseProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[MoveOrRotateNormStructureResponseProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (MoveOrRotateNormStructureResponseProto_Builder*) clear {
  self.result = [[[MoveOrRotateNormStructureResponseProto alloc] init] autorelease];
  return self;
}
- (MoveOrRotateNormStructureResponseProto_Builder*) clone {
  return [MoveOrRotateNormStructureResponseProto builderWithPrototype:result];
}
- (MoveOrRotateNormStructureResponseProto*) defaultInstance {
  return [MoveOrRotateNormStructureResponseProto defaultInstance];
}
- (MoveOrRotateNormStructureResponseProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (MoveOrRotateNormStructureResponseProto*) buildPartial {
  MoveOrRotateNormStructureResponseProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (MoveOrRotateNormStructureResponseProto_Builder*) mergeFrom:(MoveOrRotateNormStructureResponseProto*) other {
  if (other == [MoveOrRotateNormStructureResponseProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (MoveOrRotateNormStructureResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (MoveOrRotateNormStructureResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        int32_t value = [input readEnum];
        if (MoveOrRotateNormStructureResponseProto_MoveOrRotateNormStructureStatusIsValidValue(value)) {
          [self setStatus:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (MoveOrRotateNormStructureResponseProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (MoveOrRotateNormStructureResponseProto_Builder*) setSenderBuilder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (MoveOrRotateNormStructureResponseProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (MoveOrRotateNormStructureResponseProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (MoveOrRotateNormStructureResponseProto_MoveOrRotateNormStructureStatus) status {
  return result.status;
}
- (MoveOrRotateNormStructureResponseProto_Builder*) setStatus:(MoveOrRotateNormStructureResponseProto_MoveOrRotateNormStructureStatus) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (MoveOrRotateNormStructureResponseProto_Builder*) clearStatus {
  result.hasStatus = NO;
  result.status = MoveOrRotateNormStructureResponseProto_MoveOrRotateNormStructureStatusSuccess;
  return self;
}
@end

@interface UpgradeNormStructureRequestProto ()
@property (retain) MinimumUserProto* sender;
@property int32_t userStructId;
@property int64_t timeOfUpgrade;
@property int32_t gemsSpent;
@property int32_t resourceChange;
@property ResourceType resourceType;
@end

@implementation UpgradeNormStructureRequestProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value {
  hasSender_ = !!value;
}
@synthesize sender;
- (BOOL) hasUserStructId {
  return !!hasUserStructId_;
}
- (void) setHasUserStructId:(BOOL) value {
  hasUserStructId_ = !!value;
}
@synthesize userStructId;
- (BOOL) hasTimeOfUpgrade {
  return !!hasTimeOfUpgrade_;
}
- (void) setHasTimeOfUpgrade:(BOOL) value {
  hasTimeOfUpgrade_ = !!value;
}
@synthesize timeOfUpgrade;
- (BOOL) hasGemsSpent {
  return !!hasGemsSpent_;
}
- (void) setHasGemsSpent:(BOOL) value {
  hasGemsSpent_ = !!value;
}
@synthesize gemsSpent;
- (BOOL) hasResourceChange {
  return !!hasResourceChange_;
}
- (void) setHasResourceChange:(BOOL) value {
  hasResourceChange_ = !!value;
}
@synthesize resourceChange;
- (BOOL) hasResourceType {
  return !!hasResourceType_;
}
- (void) setHasResourceType:(BOOL) value {
  hasResourceType_ = !!value;
}
@synthesize resourceType;
- (void) dealloc {
  self.sender = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.userStructId = 0;
    self.timeOfUpgrade = 0L;
    self.gemsSpent = 0;
    self.resourceChange = 0;
    self.resourceType = ResourceTypeCash;
  }
  return self;
}
static UpgradeNormStructureRequestProto* defaultUpgradeNormStructureRequestProtoInstance = nil;
+ (void) initialize {
  if (self == [UpgradeNormStructureRequestProto class]) {
    defaultUpgradeNormStructureRequestProtoInstance = [[UpgradeNormStructureRequestProto alloc] init];
  }
}
+ (UpgradeNormStructureRequestProto*) defaultInstance {
  return defaultUpgradeNormStructureRequestProtoInstance;
}
- (UpgradeNormStructureRequestProto*) defaultInstance {
  return defaultUpgradeNormStructureRequestProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasUserStructId) {
    [output writeInt32:2 value:self.userStructId];
  }
  if (self.hasTimeOfUpgrade) {
    [output writeInt64:3 value:self.timeOfUpgrade];
  }
  if (self.hasGemsSpent) {
    [output writeInt32:4 value:self.gemsSpent];
  }
  if (self.hasResourceChange) {
    [output writeSInt32:5 value:self.resourceChange];
  }
  if (self.hasResourceType) {
    [output writeEnum:6 value:self.resourceType];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSender) {
    size += computeMessageSize(1, self.sender);
  }
  if (self.hasUserStructId) {
    size += computeInt32Size(2, self.userStructId);
  }
  if (self.hasTimeOfUpgrade) {
    size += computeInt64Size(3, self.timeOfUpgrade);
  }
  if (self.hasGemsSpent) {
    size += computeInt32Size(4, self.gemsSpent);
  }
  if (self.hasResourceChange) {
    size += computeSInt32Size(5, self.resourceChange);
  }
  if (self.hasResourceType) {
    size += computeEnumSize(6, self.resourceType);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (UpgradeNormStructureRequestProto*) parseFromData:(NSData*) data {
  return (UpgradeNormStructureRequestProto*)[[[UpgradeNormStructureRequestProto builder] mergeFromData:data] build];
}
+ (UpgradeNormStructureRequestProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UpgradeNormStructureRequestProto*)[[[UpgradeNormStructureRequestProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (UpgradeNormStructureRequestProto*) parseFromInputStream:(NSInputStream*) input {
  return (UpgradeNormStructureRequestProto*)[[[UpgradeNormStructureRequestProto builder] mergeFromInputStream:input] build];
}
+ (UpgradeNormStructureRequestProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UpgradeNormStructureRequestProto*)[[[UpgradeNormStructureRequestProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (UpgradeNormStructureRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (UpgradeNormStructureRequestProto*)[[[UpgradeNormStructureRequestProto builder] mergeFromCodedInputStream:input] build];
}
+ (UpgradeNormStructureRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UpgradeNormStructureRequestProto*)[[[UpgradeNormStructureRequestProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (UpgradeNormStructureRequestProto_Builder*) builder {
  return [[[UpgradeNormStructureRequestProto_Builder alloc] init] autorelease];
}
+ (UpgradeNormStructureRequestProto_Builder*) builderWithPrototype:(UpgradeNormStructureRequestProto*) prototype {
  return [[UpgradeNormStructureRequestProto builder] mergeFrom:prototype];
}
- (UpgradeNormStructureRequestProto_Builder*) builder {
  return [UpgradeNormStructureRequestProto builder];
}
@end

@interface UpgradeNormStructureRequestProto_Builder()
@property (retain) UpgradeNormStructureRequestProto* result;
@end

@implementation UpgradeNormStructureRequestProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[UpgradeNormStructureRequestProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (UpgradeNormStructureRequestProto_Builder*) clear {
  self.result = [[[UpgradeNormStructureRequestProto alloc] init] autorelease];
  return self;
}
- (UpgradeNormStructureRequestProto_Builder*) clone {
  return [UpgradeNormStructureRequestProto builderWithPrototype:result];
}
- (UpgradeNormStructureRequestProto*) defaultInstance {
  return [UpgradeNormStructureRequestProto defaultInstance];
}
- (UpgradeNormStructureRequestProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (UpgradeNormStructureRequestProto*) buildPartial {
  UpgradeNormStructureRequestProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (UpgradeNormStructureRequestProto_Builder*) mergeFrom:(UpgradeNormStructureRequestProto*) other {
  if (other == [UpgradeNormStructureRequestProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasUserStructId) {
    [self setUserStructId:other.userStructId];
  }
  if (other.hasTimeOfUpgrade) {
    [self setTimeOfUpgrade:other.timeOfUpgrade];
  }
  if (other.hasGemsSpent) {
    [self setGemsSpent:other.gemsSpent];
  }
  if (other.hasResourceChange) {
    [self setResourceChange:other.resourceChange];
  }
  if (other.hasResourceType) {
    [self setResourceType:other.resourceType];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (UpgradeNormStructureRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (UpgradeNormStructureRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setUserStructId:[input readInt32]];
        break;
      }
      case 24: {
        [self setTimeOfUpgrade:[input readInt64]];
        break;
      }
      case 32: {
        [self setGemsSpent:[input readInt32]];
        break;
      }
      case 40: {
        [self setResourceChange:[input readSInt32]];
        break;
      }
      case 48: {
        int32_t value = [input readEnum];
        if (ResourceTypeIsValidValue(value)) {
          [self setResourceType:value];
        } else {
          [unknownFields mergeVarintField:6 value:value];
        }
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (UpgradeNormStructureRequestProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (UpgradeNormStructureRequestProto_Builder*) setSenderBuilder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (UpgradeNormStructureRequestProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (UpgradeNormStructureRequestProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasUserStructId {
  return result.hasUserStructId;
}
- (int32_t) userStructId {
  return result.userStructId;
}
- (UpgradeNormStructureRequestProto_Builder*) setUserStructId:(int32_t) value {
  result.hasUserStructId = YES;
  result.userStructId = value;
  return self;
}
- (UpgradeNormStructureRequestProto_Builder*) clearUserStructId {
  result.hasUserStructId = NO;
  result.userStructId = 0;
  return self;
}
- (BOOL) hasTimeOfUpgrade {
  return result.hasTimeOfUpgrade;
}
- (int64_t) timeOfUpgrade {
  return result.timeOfUpgrade;
}
- (UpgradeNormStructureRequestProto_Builder*) setTimeOfUpgrade:(int64_t) value {
  result.hasTimeOfUpgrade = YES;
  result.timeOfUpgrade = value;
  return self;
}
- (UpgradeNormStructureRequestProto_Builder*) clearTimeOfUpgrade {
  result.hasTimeOfUpgrade = NO;
  result.timeOfUpgrade = 0L;
  return self;
}
- (BOOL) hasGemsSpent {
  return result.hasGemsSpent;
}
- (int32_t) gemsSpent {
  return result.gemsSpent;
}
- (UpgradeNormStructureRequestProto_Builder*) setGemsSpent:(int32_t) value {
  result.hasGemsSpent = YES;
  result.gemsSpent = value;
  return self;
}
- (UpgradeNormStructureRequestProto_Builder*) clearGemsSpent {
  result.hasGemsSpent = NO;
  result.gemsSpent = 0;
  return self;
}
- (BOOL) hasResourceChange {
  return result.hasResourceChange;
}
- (int32_t) resourceChange {
  return result.resourceChange;
}
- (UpgradeNormStructureRequestProto_Builder*) setResourceChange:(int32_t) value {
  result.hasResourceChange = YES;
  result.resourceChange = value;
  return self;
}
- (UpgradeNormStructureRequestProto_Builder*) clearResourceChange {
  result.hasResourceChange = NO;
  result.resourceChange = 0;
  return self;
}
- (BOOL) hasResourceType {
  return result.hasResourceType;
}
- (ResourceType) resourceType {
  return result.resourceType;
}
- (UpgradeNormStructureRequestProto_Builder*) setResourceType:(ResourceType) value {
  result.hasResourceType = YES;
  result.resourceType = value;
  return self;
}
- (UpgradeNormStructureRequestProto_Builder*) clearResourceType {
  result.hasResourceType = NO;
  result.resourceType = ResourceTypeCash;
  return self;
}
@end

@interface UpgradeNormStructureResponseProto ()
@property (retain) MinimumUserProto* sender;
@property UpgradeNormStructureResponseProto_UpgradeNormStructureStatus status;
@end

@implementation UpgradeNormStructureResponseProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value {
  hasSender_ = !!value;
}
@synthesize sender;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value {
  hasStatus_ = !!value;
}
@synthesize status;
- (void) dealloc {
  self.sender = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.status = UpgradeNormStructureResponseProto_UpgradeNormStructureStatusSuccess;
  }
  return self;
}
static UpgradeNormStructureResponseProto* defaultUpgradeNormStructureResponseProtoInstance = nil;
+ (void) initialize {
  if (self == [UpgradeNormStructureResponseProto class]) {
    defaultUpgradeNormStructureResponseProtoInstance = [[UpgradeNormStructureResponseProto alloc] init];
  }
}
+ (UpgradeNormStructureResponseProto*) defaultInstance {
  return defaultUpgradeNormStructureResponseProtoInstance;
}
- (UpgradeNormStructureResponseProto*) defaultInstance {
  return defaultUpgradeNormStructureResponseProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasStatus) {
    [output writeEnum:2 value:self.status];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSender) {
    size += computeMessageSize(1, self.sender);
  }
  if (self.hasStatus) {
    size += computeEnumSize(2, self.status);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (UpgradeNormStructureResponseProto*) parseFromData:(NSData*) data {
  return (UpgradeNormStructureResponseProto*)[[[UpgradeNormStructureResponseProto builder] mergeFromData:data] build];
}
+ (UpgradeNormStructureResponseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UpgradeNormStructureResponseProto*)[[[UpgradeNormStructureResponseProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (UpgradeNormStructureResponseProto*) parseFromInputStream:(NSInputStream*) input {
  return (UpgradeNormStructureResponseProto*)[[[UpgradeNormStructureResponseProto builder] mergeFromInputStream:input] build];
}
+ (UpgradeNormStructureResponseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UpgradeNormStructureResponseProto*)[[[UpgradeNormStructureResponseProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (UpgradeNormStructureResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (UpgradeNormStructureResponseProto*)[[[UpgradeNormStructureResponseProto builder] mergeFromCodedInputStream:input] build];
}
+ (UpgradeNormStructureResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UpgradeNormStructureResponseProto*)[[[UpgradeNormStructureResponseProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (UpgradeNormStructureResponseProto_Builder*) builder {
  return [[[UpgradeNormStructureResponseProto_Builder alloc] init] autorelease];
}
+ (UpgradeNormStructureResponseProto_Builder*) builderWithPrototype:(UpgradeNormStructureResponseProto*) prototype {
  return [[UpgradeNormStructureResponseProto builder] mergeFrom:prototype];
}
- (UpgradeNormStructureResponseProto_Builder*) builder {
  return [UpgradeNormStructureResponseProto builder];
}
@end

BOOL UpgradeNormStructureResponseProto_UpgradeNormStructureStatusIsValidValue(UpgradeNormStructureResponseProto_UpgradeNormStructureStatus value) {
  switch (value) {
    case UpgradeNormStructureResponseProto_UpgradeNormStructureStatusSuccess:
    case UpgradeNormStructureResponseProto_UpgradeNormStructureStatusFailNotEnoughCash:
    case UpgradeNormStructureResponseProto_UpgradeNormStructureStatusFailNotEnoughGems:
    case UpgradeNormStructureResponseProto_UpgradeNormStructureStatusFailNotEnoughOil:
    case UpgradeNormStructureResponseProto_UpgradeNormStructureStatusFailNotBuiltYet:
    case UpgradeNormStructureResponseProto_UpgradeNormStructureStatusFailNotUsersStruct:
    case UpgradeNormStructureResponseProto_UpgradeNormStructureStatusFailAtMaxLevelAlready:
    case UpgradeNormStructureResponseProto_UpgradeNormStructureStatusFailOther:
      return YES;
    default:
      return NO;
  }
}
@interface UpgradeNormStructureResponseProto_Builder()
@property (retain) UpgradeNormStructureResponseProto* result;
@end

@implementation UpgradeNormStructureResponseProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[UpgradeNormStructureResponseProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (UpgradeNormStructureResponseProto_Builder*) clear {
  self.result = [[[UpgradeNormStructureResponseProto alloc] init] autorelease];
  return self;
}
- (UpgradeNormStructureResponseProto_Builder*) clone {
  return [UpgradeNormStructureResponseProto builderWithPrototype:result];
}
- (UpgradeNormStructureResponseProto*) defaultInstance {
  return [UpgradeNormStructureResponseProto defaultInstance];
}
- (UpgradeNormStructureResponseProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (UpgradeNormStructureResponseProto*) buildPartial {
  UpgradeNormStructureResponseProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (UpgradeNormStructureResponseProto_Builder*) mergeFrom:(UpgradeNormStructureResponseProto*) other {
  if (other == [UpgradeNormStructureResponseProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (UpgradeNormStructureResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (UpgradeNormStructureResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        int32_t value = [input readEnum];
        if (UpgradeNormStructureResponseProto_UpgradeNormStructureStatusIsValidValue(value)) {
          [self setStatus:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (UpgradeNormStructureResponseProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (UpgradeNormStructureResponseProto_Builder*) setSenderBuilder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (UpgradeNormStructureResponseProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (UpgradeNormStructureResponseProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (UpgradeNormStructureResponseProto_UpgradeNormStructureStatus) status {
  return result.status;
}
- (UpgradeNormStructureResponseProto_Builder*) setStatus:(UpgradeNormStructureResponseProto_UpgradeNormStructureStatus) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (UpgradeNormStructureResponseProto_Builder*) clearStatus {
  result.hasStatus = NO;
  result.status = UpgradeNormStructureResponseProto_UpgradeNormStructureStatusSuccess;
  return self;
}
@end

@interface FinishNormStructWaittimeWithDiamondsRequestProto ()
@property (retain) MinimumUserProto* sender;
@property int32_t userStructId;
@property int64_t timeOfSpeedup;
@property int32_t gemCostToSpeedup;
@end

@implementation FinishNormStructWaittimeWithDiamondsRequestProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value {
  hasSender_ = !!value;
}
@synthesize sender;
- (BOOL) hasUserStructId {
  return !!hasUserStructId_;
}
- (void) setHasUserStructId:(BOOL) value {
  hasUserStructId_ = !!value;
}
@synthesize userStructId;
- (BOOL) hasTimeOfSpeedup {
  return !!hasTimeOfSpeedup_;
}
- (void) setHasTimeOfSpeedup:(BOOL) value {
  hasTimeOfSpeedup_ = !!value;
}
@synthesize timeOfSpeedup;
- (BOOL) hasGemCostToSpeedup {
  return !!hasGemCostToSpeedup_;
}
- (void) setHasGemCostToSpeedup:(BOOL) value {
  hasGemCostToSpeedup_ = !!value;
}
@synthesize gemCostToSpeedup;
- (void) dealloc {
  self.sender = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.userStructId = 0;
    self.timeOfSpeedup = 0L;
    self.gemCostToSpeedup = 0;
  }
  return self;
}
static FinishNormStructWaittimeWithDiamondsRequestProto* defaultFinishNormStructWaittimeWithDiamondsRequestProtoInstance = nil;
+ (void) initialize {
  if (self == [FinishNormStructWaittimeWithDiamondsRequestProto class]) {
    defaultFinishNormStructWaittimeWithDiamondsRequestProtoInstance = [[FinishNormStructWaittimeWithDiamondsRequestProto alloc] init];
  }
}
+ (FinishNormStructWaittimeWithDiamondsRequestProto*) defaultInstance {
  return defaultFinishNormStructWaittimeWithDiamondsRequestProtoInstance;
}
- (FinishNormStructWaittimeWithDiamondsRequestProto*) defaultInstance {
  return defaultFinishNormStructWaittimeWithDiamondsRequestProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasUserStructId) {
    [output writeInt32:2 value:self.userStructId];
  }
  if (self.hasTimeOfSpeedup) {
    [output writeInt64:3 value:self.timeOfSpeedup];
  }
  if (self.hasGemCostToSpeedup) {
    [output writeInt32:4 value:self.gemCostToSpeedup];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSender) {
    size += computeMessageSize(1, self.sender);
  }
  if (self.hasUserStructId) {
    size += computeInt32Size(2, self.userStructId);
  }
  if (self.hasTimeOfSpeedup) {
    size += computeInt64Size(3, self.timeOfSpeedup);
  }
  if (self.hasGemCostToSpeedup) {
    size += computeInt32Size(4, self.gemCostToSpeedup);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (FinishNormStructWaittimeWithDiamondsRequestProto*) parseFromData:(NSData*) data {
  return (FinishNormStructWaittimeWithDiamondsRequestProto*)[[[FinishNormStructWaittimeWithDiamondsRequestProto builder] mergeFromData:data] build];
}
+ (FinishNormStructWaittimeWithDiamondsRequestProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FinishNormStructWaittimeWithDiamondsRequestProto*)[[[FinishNormStructWaittimeWithDiamondsRequestProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (FinishNormStructWaittimeWithDiamondsRequestProto*) parseFromInputStream:(NSInputStream*) input {
  return (FinishNormStructWaittimeWithDiamondsRequestProto*)[[[FinishNormStructWaittimeWithDiamondsRequestProto builder] mergeFromInputStream:input] build];
}
+ (FinishNormStructWaittimeWithDiamondsRequestProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FinishNormStructWaittimeWithDiamondsRequestProto*)[[[FinishNormStructWaittimeWithDiamondsRequestProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FinishNormStructWaittimeWithDiamondsRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (FinishNormStructWaittimeWithDiamondsRequestProto*)[[[FinishNormStructWaittimeWithDiamondsRequestProto builder] mergeFromCodedInputStream:input] build];
}
+ (FinishNormStructWaittimeWithDiamondsRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FinishNormStructWaittimeWithDiamondsRequestProto*)[[[FinishNormStructWaittimeWithDiamondsRequestProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FinishNormStructWaittimeWithDiamondsRequestProto_Builder*) builder {
  return [[[FinishNormStructWaittimeWithDiamondsRequestProto_Builder alloc] init] autorelease];
}
+ (FinishNormStructWaittimeWithDiamondsRequestProto_Builder*) builderWithPrototype:(FinishNormStructWaittimeWithDiamondsRequestProto*) prototype {
  return [[FinishNormStructWaittimeWithDiamondsRequestProto builder] mergeFrom:prototype];
}
- (FinishNormStructWaittimeWithDiamondsRequestProto_Builder*) builder {
  return [FinishNormStructWaittimeWithDiamondsRequestProto builder];
}
@end

@interface FinishNormStructWaittimeWithDiamondsRequestProto_Builder()
@property (retain) FinishNormStructWaittimeWithDiamondsRequestProto* result;
@end

@implementation FinishNormStructWaittimeWithDiamondsRequestProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[FinishNormStructWaittimeWithDiamondsRequestProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (FinishNormStructWaittimeWithDiamondsRequestProto_Builder*) clear {
  self.result = [[[FinishNormStructWaittimeWithDiamondsRequestProto alloc] init] autorelease];
  return self;
}
- (FinishNormStructWaittimeWithDiamondsRequestProto_Builder*) clone {
  return [FinishNormStructWaittimeWithDiamondsRequestProto builderWithPrototype:result];
}
- (FinishNormStructWaittimeWithDiamondsRequestProto*) defaultInstance {
  return [FinishNormStructWaittimeWithDiamondsRequestProto defaultInstance];
}
- (FinishNormStructWaittimeWithDiamondsRequestProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (FinishNormStructWaittimeWithDiamondsRequestProto*) buildPartial {
  FinishNormStructWaittimeWithDiamondsRequestProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (FinishNormStructWaittimeWithDiamondsRequestProto_Builder*) mergeFrom:(FinishNormStructWaittimeWithDiamondsRequestProto*) other {
  if (other == [FinishNormStructWaittimeWithDiamondsRequestProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasUserStructId) {
    [self setUserStructId:other.userStructId];
  }
  if (other.hasTimeOfSpeedup) {
    [self setTimeOfSpeedup:other.timeOfSpeedup];
  }
  if (other.hasGemCostToSpeedup) {
    [self setGemCostToSpeedup:other.gemCostToSpeedup];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (FinishNormStructWaittimeWithDiamondsRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (FinishNormStructWaittimeWithDiamondsRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setUserStructId:[input readInt32]];
        break;
      }
      case 24: {
        [self setTimeOfSpeedup:[input readInt64]];
        break;
      }
      case 32: {
        [self setGemCostToSpeedup:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (FinishNormStructWaittimeWithDiamondsRequestProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (FinishNormStructWaittimeWithDiamondsRequestProto_Builder*) setSenderBuilder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (FinishNormStructWaittimeWithDiamondsRequestProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (FinishNormStructWaittimeWithDiamondsRequestProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasUserStructId {
  return result.hasUserStructId;
}
- (int32_t) userStructId {
  return result.userStructId;
}
- (FinishNormStructWaittimeWithDiamondsRequestProto_Builder*) setUserStructId:(int32_t) value {
  result.hasUserStructId = YES;
  result.userStructId = value;
  return self;
}
- (FinishNormStructWaittimeWithDiamondsRequestProto_Builder*) clearUserStructId {
  result.hasUserStructId = NO;
  result.userStructId = 0;
  return self;
}
- (BOOL) hasTimeOfSpeedup {
  return result.hasTimeOfSpeedup;
}
- (int64_t) timeOfSpeedup {
  return result.timeOfSpeedup;
}
- (FinishNormStructWaittimeWithDiamondsRequestProto_Builder*) setTimeOfSpeedup:(int64_t) value {
  result.hasTimeOfSpeedup = YES;
  result.timeOfSpeedup = value;
  return self;
}
- (FinishNormStructWaittimeWithDiamondsRequestProto_Builder*) clearTimeOfSpeedup {
  result.hasTimeOfSpeedup = NO;
  result.timeOfSpeedup = 0L;
  return self;
}
- (BOOL) hasGemCostToSpeedup {
  return result.hasGemCostToSpeedup;
}
- (int32_t) gemCostToSpeedup {
  return result.gemCostToSpeedup;
}
- (FinishNormStructWaittimeWithDiamondsRequestProto_Builder*) setGemCostToSpeedup:(int32_t) value {
  result.hasGemCostToSpeedup = YES;
  result.gemCostToSpeedup = value;
  return self;
}
- (FinishNormStructWaittimeWithDiamondsRequestProto_Builder*) clearGemCostToSpeedup {
  result.hasGemCostToSpeedup = NO;
  result.gemCostToSpeedup = 0;
  return self;
}
@end

@interface FinishNormStructWaittimeWithDiamondsResponseProto ()
@property (retain) MinimumUserProto* sender;
@property FinishNormStructWaittimeWithDiamondsResponseProto_FinishNormStructWaittimeStatus status;
@end

@implementation FinishNormStructWaittimeWithDiamondsResponseProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value {
  hasSender_ = !!value;
}
@synthesize sender;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value {
  hasStatus_ = !!value;
}
@synthesize status;
- (void) dealloc {
  self.sender = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.status = FinishNormStructWaittimeWithDiamondsResponseProto_FinishNormStructWaittimeStatusSuccess;
  }
  return self;
}
static FinishNormStructWaittimeWithDiamondsResponseProto* defaultFinishNormStructWaittimeWithDiamondsResponseProtoInstance = nil;
+ (void) initialize {
  if (self == [FinishNormStructWaittimeWithDiamondsResponseProto class]) {
    defaultFinishNormStructWaittimeWithDiamondsResponseProtoInstance = [[FinishNormStructWaittimeWithDiamondsResponseProto alloc] init];
  }
}
+ (FinishNormStructWaittimeWithDiamondsResponseProto*) defaultInstance {
  return defaultFinishNormStructWaittimeWithDiamondsResponseProtoInstance;
}
- (FinishNormStructWaittimeWithDiamondsResponseProto*) defaultInstance {
  return defaultFinishNormStructWaittimeWithDiamondsResponseProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasStatus) {
    [output writeEnum:2 value:self.status];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSender) {
    size += computeMessageSize(1, self.sender);
  }
  if (self.hasStatus) {
    size += computeEnumSize(2, self.status);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (FinishNormStructWaittimeWithDiamondsResponseProto*) parseFromData:(NSData*) data {
  return (FinishNormStructWaittimeWithDiamondsResponseProto*)[[[FinishNormStructWaittimeWithDiamondsResponseProto builder] mergeFromData:data] build];
}
+ (FinishNormStructWaittimeWithDiamondsResponseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FinishNormStructWaittimeWithDiamondsResponseProto*)[[[FinishNormStructWaittimeWithDiamondsResponseProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (FinishNormStructWaittimeWithDiamondsResponseProto*) parseFromInputStream:(NSInputStream*) input {
  return (FinishNormStructWaittimeWithDiamondsResponseProto*)[[[FinishNormStructWaittimeWithDiamondsResponseProto builder] mergeFromInputStream:input] build];
}
+ (FinishNormStructWaittimeWithDiamondsResponseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FinishNormStructWaittimeWithDiamondsResponseProto*)[[[FinishNormStructWaittimeWithDiamondsResponseProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FinishNormStructWaittimeWithDiamondsResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (FinishNormStructWaittimeWithDiamondsResponseProto*)[[[FinishNormStructWaittimeWithDiamondsResponseProto builder] mergeFromCodedInputStream:input] build];
}
+ (FinishNormStructWaittimeWithDiamondsResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FinishNormStructWaittimeWithDiamondsResponseProto*)[[[FinishNormStructWaittimeWithDiamondsResponseProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FinishNormStructWaittimeWithDiamondsResponseProto_Builder*) builder {
  return [[[FinishNormStructWaittimeWithDiamondsResponseProto_Builder alloc] init] autorelease];
}
+ (FinishNormStructWaittimeWithDiamondsResponseProto_Builder*) builderWithPrototype:(FinishNormStructWaittimeWithDiamondsResponseProto*) prototype {
  return [[FinishNormStructWaittimeWithDiamondsResponseProto builder] mergeFrom:prototype];
}
- (FinishNormStructWaittimeWithDiamondsResponseProto_Builder*) builder {
  return [FinishNormStructWaittimeWithDiamondsResponseProto builder];
}
@end

BOOL FinishNormStructWaittimeWithDiamondsResponseProto_FinishNormStructWaittimeStatusIsValidValue(FinishNormStructWaittimeWithDiamondsResponseProto_FinishNormStructWaittimeStatus value) {
  switch (value) {
    case FinishNormStructWaittimeWithDiamondsResponseProto_FinishNormStructWaittimeStatusSuccess:
    case FinishNormStructWaittimeWithDiamondsResponseProto_FinishNormStructWaittimeStatusFailNotEnoughGems:
    case FinishNormStructWaittimeWithDiamondsResponseProto_FinishNormStructWaittimeStatusFailOther:
      return YES;
    default:
      return NO;
  }
}
@interface FinishNormStructWaittimeWithDiamondsResponseProto_Builder()
@property (retain) FinishNormStructWaittimeWithDiamondsResponseProto* result;
@end

@implementation FinishNormStructWaittimeWithDiamondsResponseProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[FinishNormStructWaittimeWithDiamondsResponseProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (FinishNormStructWaittimeWithDiamondsResponseProto_Builder*) clear {
  self.result = [[[FinishNormStructWaittimeWithDiamondsResponseProto alloc] init] autorelease];
  return self;
}
- (FinishNormStructWaittimeWithDiamondsResponseProto_Builder*) clone {
  return [FinishNormStructWaittimeWithDiamondsResponseProto builderWithPrototype:result];
}
- (FinishNormStructWaittimeWithDiamondsResponseProto*) defaultInstance {
  return [FinishNormStructWaittimeWithDiamondsResponseProto defaultInstance];
}
- (FinishNormStructWaittimeWithDiamondsResponseProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (FinishNormStructWaittimeWithDiamondsResponseProto*) buildPartial {
  FinishNormStructWaittimeWithDiamondsResponseProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (FinishNormStructWaittimeWithDiamondsResponseProto_Builder*) mergeFrom:(FinishNormStructWaittimeWithDiamondsResponseProto*) other {
  if (other == [FinishNormStructWaittimeWithDiamondsResponseProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (FinishNormStructWaittimeWithDiamondsResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (FinishNormStructWaittimeWithDiamondsResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        int32_t value = [input readEnum];
        if (FinishNormStructWaittimeWithDiamondsResponseProto_FinishNormStructWaittimeStatusIsValidValue(value)) {
          [self setStatus:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (FinishNormStructWaittimeWithDiamondsResponseProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (FinishNormStructWaittimeWithDiamondsResponseProto_Builder*) setSenderBuilder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (FinishNormStructWaittimeWithDiamondsResponseProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (FinishNormStructWaittimeWithDiamondsResponseProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (FinishNormStructWaittimeWithDiamondsResponseProto_FinishNormStructWaittimeStatus) status {
  return result.status;
}
- (FinishNormStructWaittimeWithDiamondsResponseProto_Builder*) setStatus:(FinishNormStructWaittimeWithDiamondsResponseProto_FinishNormStructWaittimeStatus) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (FinishNormStructWaittimeWithDiamondsResponseProto_Builder*) clearStatus {
  result.hasStatus = NO;
  result.status = FinishNormStructWaittimeWithDiamondsResponseProto_FinishNormStructWaittimeStatusSuccess;
  return self;
}
@end

@interface NormStructWaitCompleteRequestProto ()
@property (retain) MinimumUserProto* sender;
@property (retain) NSMutableArray* mutableUserStructIdList;
@property int64_t curTime;
@end

@implementation NormStructWaitCompleteRequestProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value {
  hasSender_ = !!value;
}
@synthesize sender;
@synthesize mutableUserStructIdList;
- (BOOL) hasCurTime {
  return !!hasCurTime_;
}
- (void) setHasCurTime:(BOOL) value {
  hasCurTime_ = !!value;
}
@synthesize curTime;
- (void) dealloc {
  self.sender = nil;
  self.mutableUserStructIdList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.curTime = 0L;
  }
  return self;
}
static NormStructWaitCompleteRequestProto* defaultNormStructWaitCompleteRequestProtoInstance = nil;
+ (void) initialize {
  if (self == [NormStructWaitCompleteRequestProto class]) {
    defaultNormStructWaitCompleteRequestProtoInstance = [[NormStructWaitCompleteRequestProto alloc] init];
  }
}
+ (NormStructWaitCompleteRequestProto*) defaultInstance {
  return defaultNormStructWaitCompleteRequestProtoInstance;
}
- (NormStructWaitCompleteRequestProto*) defaultInstance {
  return defaultNormStructWaitCompleteRequestProtoInstance;
}
- (NSArray*) userStructIdList {
  return mutableUserStructIdList;
}
- (int32_t) userStructIdAtIndex:(int32_t) index {
  id value = [mutableUserStructIdList objectAtIndex:index];
  return [value intValue];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  for (NSNumber* value in self.mutableUserStructIdList) {
    [output writeInt32:2 value:[value intValue]];
  }
  if (self.hasCurTime) {
    [output writeInt64:3 value:self.curTime];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSender) {
    size += computeMessageSize(1, self.sender);
  }
  {
    int32_t dataSize = 0;
    for (NSNumber* value in self.mutableUserStructIdList) {
      dataSize += computeInt32SizeNoTag([value intValue]);
    }
    size += dataSize;
    size += 1 * self.mutableUserStructIdList.count;
  }
  if (self.hasCurTime) {
    size += computeInt64Size(3, self.curTime);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (NormStructWaitCompleteRequestProto*) parseFromData:(NSData*) data {
  return (NormStructWaitCompleteRequestProto*)[[[NormStructWaitCompleteRequestProto builder] mergeFromData:data] build];
}
+ (NormStructWaitCompleteRequestProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (NormStructWaitCompleteRequestProto*)[[[NormStructWaitCompleteRequestProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (NormStructWaitCompleteRequestProto*) parseFromInputStream:(NSInputStream*) input {
  return (NormStructWaitCompleteRequestProto*)[[[NormStructWaitCompleteRequestProto builder] mergeFromInputStream:input] build];
}
+ (NormStructWaitCompleteRequestProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (NormStructWaitCompleteRequestProto*)[[[NormStructWaitCompleteRequestProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (NormStructWaitCompleteRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (NormStructWaitCompleteRequestProto*)[[[NormStructWaitCompleteRequestProto builder] mergeFromCodedInputStream:input] build];
}
+ (NormStructWaitCompleteRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (NormStructWaitCompleteRequestProto*)[[[NormStructWaitCompleteRequestProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (NormStructWaitCompleteRequestProto_Builder*) builder {
  return [[[NormStructWaitCompleteRequestProto_Builder alloc] init] autorelease];
}
+ (NormStructWaitCompleteRequestProto_Builder*) builderWithPrototype:(NormStructWaitCompleteRequestProto*) prototype {
  return [[NormStructWaitCompleteRequestProto builder] mergeFrom:prototype];
}
- (NormStructWaitCompleteRequestProto_Builder*) builder {
  return [NormStructWaitCompleteRequestProto builder];
}
@end

@interface NormStructWaitCompleteRequestProto_Builder()
@property (retain) NormStructWaitCompleteRequestProto* result;
@end

@implementation NormStructWaitCompleteRequestProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[NormStructWaitCompleteRequestProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (NormStructWaitCompleteRequestProto_Builder*) clear {
  self.result = [[[NormStructWaitCompleteRequestProto alloc] init] autorelease];
  return self;
}
- (NormStructWaitCompleteRequestProto_Builder*) clone {
  return [NormStructWaitCompleteRequestProto builderWithPrototype:result];
}
- (NormStructWaitCompleteRequestProto*) defaultInstance {
  return [NormStructWaitCompleteRequestProto defaultInstance];
}
- (NormStructWaitCompleteRequestProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (NormStructWaitCompleteRequestProto*) buildPartial {
  NormStructWaitCompleteRequestProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (NormStructWaitCompleteRequestProto_Builder*) mergeFrom:(NormStructWaitCompleteRequestProto*) other {
  if (other == [NormStructWaitCompleteRequestProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.mutableUserStructIdList.count > 0) {
    if (result.mutableUserStructIdList == nil) {
      result.mutableUserStructIdList = [NSMutableArray array];
    }
    [result.mutableUserStructIdList addObjectsFromArray:other.mutableUserStructIdList];
  }
  if (other.hasCurTime) {
    [self setCurTime:other.curTime];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (NormStructWaitCompleteRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (NormStructWaitCompleteRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self addUserStructId:[input readInt32]];
        break;
      }
      case 24: {
        [self setCurTime:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (NormStructWaitCompleteRequestProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (NormStructWaitCompleteRequestProto_Builder*) setSenderBuilder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (NormStructWaitCompleteRequestProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (NormStructWaitCompleteRequestProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (NSArray*) userStructIdList {
  if (result.mutableUserStructIdList == nil) {
    return [NSArray array];
  }
  return result.mutableUserStructIdList;
}
- (int32_t) userStructIdAtIndex:(int32_t) index {
  return [result userStructIdAtIndex:index];
}
- (NormStructWaitCompleteRequestProto_Builder*) replaceUserStructIdAtIndex:(int32_t) index with:(int32_t) value {
  [result.mutableUserStructIdList replaceObjectAtIndex:index withObject:[NSNumber numberWithInt:value]];
  return self;
}
- (NormStructWaitCompleteRequestProto_Builder*) addUserStructId:(int32_t) value {
  if (result.mutableUserStructIdList == nil) {
    result.mutableUserStructIdList = [NSMutableArray array];
  }
  [result.mutableUserStructIdList addObject:[NSNumber numberWithInt:value]];
  return self;
}
- (NormStructWaitCompleteRequestProto_Builder*) addAllUserStructId:(NSArray*) values {
  if (result.mutableUserStructIdList == nil) {
    result.mutableUserStructIdList = [NSMutableArray array];
  }
  [result.mutableUserStructIdList addObjectsFromArray:values];
  return self;
}
- (NormStructWaitCompleteRequestProto_Builder*) clearUserStructIdList {
  result.mutableUserStructIdList = nil;
  return self;
}
- (BOOL) hasCurTime {
  return result.hasCurTime;
}
- (int64_t) curTime {
  return result.curTime;
}
- (NormStructWaitCompleteRequestProto_Builder*) setCurTime:(int64_t) value {
  result.hasCurTime = YES;
  result.curTime = value;
  return self;
}
- (NormStructWaitCompleteRequestProto_Builder*) clearCurTime {
  result.hasCurTime = NO;
  result.curTime = 0L;
  return self;
}
@end

@interface NormStructWaitCompleteResponseProto ()
@property (retain) MinimumUserProto* sender;
@property NormStructWaitCompleteResponseProto_NormStructWaitCompleteStatus status;
@property (retain) NSMutableArray* mutableUserStructList;
@end

@implementation NormStructWaitCompleteResponseProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value {
  hasSender_ = !!value;
}
@synthesize sender;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value {
  hasStatus_ = !!value;
}
@synthesize status;
@synthesize mutableUserStructList;
- (void) dealloc {
  self.sender = nil;
  self.mutableUserStructList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.status = NormStructWaitCompleteResponseProto_NormStructWaitCompleteStatusSuccess;
  }
  return self;
}
static NormStructWaitCompleteResponseProto* defaultNormStructWaitCompleteResponseProtoInstance = nil;
+ (void) initialize {
  if (self == [NormStructWaitCompleteResponseProto class]) {
    defaultNormStructWaitCompleteResponseProtoInstance = [[NormStructWaitCompleteResponseProto alloc] init];
  }
}
+ (NormStructWaitCompleteResponseProto*) defaultInstance {
  return defaultNormStructWaitCompleteResponseProtoInstance;
}
- (NormStructWaitCompleteResponseProto*) defaultInstance {
  return defaultNormStructWaitCompleteResponseProtoInstance;
}
- (NSArray*) userStructList {
  return mutableUserStructList;
}
- (FullUserStructureProto*) userStructAtIndex:(int32_t) index {
  id value = [mutableUserStructList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasStatus) {
    [output writeEnum:2 value:self.status];
  }
  for (FullUserStructureProto* element in self.userStructList) {
    [output writeMessage:3 value:element];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSender) {
    size += computeMessageSize(1, self.sender);
  }
  if (self.hasStatus) {
    size += computeEnumSize(2, self.status);
  }
  for (FullUserStructureProto* element in self.userStructList) {
    size += computeMessageSize(3, element);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (NormStructWaitCompleteResponseProto*) parseFromData:(NSData*) data {
  return (NormStructWaitCompleteResponseProto*)[[[NormStructWaitCompleteResponseProto builder] mergeFromData:data] build];
}
+ (NormStructWaitCompleteResponseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (NormStructWaitCompleteResponseProto*)[[[NormStructWaitCompleteResponseProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (NormStructWaitCompleteResponseProto*) parseFromInputStream:(NSInputStream*) input {
  return (NormStructWaitCompleteResponseProto*)[[[NormStructWaitCompleteResponseProto builder] mergeFromInputStream:input] build];
}
+ (NormStructWaitCompleteResponseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (NormStructWaitCompleteResponseProto*)[[[NormStructWaitCompleteResponseProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (NormStructWaitCompleteResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (NormStructWaitCompleteResponseProto*)[[[NormStructWaitCompleteResponseProto builder] mergeFromCodedInputStream:input] build];
}
+ (NormStructWaitCompleteResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (NormStructWaitCompleteResponseProto*)[[[NormStructWaitCompleteResponseProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (NormStructWaitCompleteResponseProto_Builder*) builder {
  return [[[NormStructWaitCompleteResponseProto_Builder alloc] init] autorelease];
}
+ (NormStructWaitCompleteResponseProto_Builder*) builderWithPrototype:(NormStructWaitCompleteResponseProto*) prototype {
  return [[NormStructWaitCompleteResponseProto builder] mergeFrom:prototype];
}
- (NormStructWaitCompleteResponseProto_Builder*) builder {
  return [NormStructWaitCompleteResponseProto builder];
}
@end

BOOL NormStructWaitCompleteResponseProto_NormStructWaitCompleteStatusIsValidValue(NormStructWaitCompleteResponseProto_NormStructWaitCompleteStatus value) {
  switch (value) {
    case NormStructWaitCompleteResponseProto_NormStructWaitCompleteStatusSuccess:
    case NormStructWaitCompleteResponseProto_NormStructWaitCompleteStatusFailNotDoneYet:
    case NormStructWaitCompleteResponseProto_NormStructWaitCompleteStatusFailOther:
      return YES;
    default:
      return NO;
  }
}
@interface NormStructWaitCompleteResponseProto_Builder()
@property (retain) NormStructWaitCompleteResponseProto* result;
@end

@implementation NormStructWaitCompleteResponseProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[NormStructWaitCompleteResponseProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (NormStructWaitCompleteResponseProto_Builder*) clear {
  self.result = [[[NormStructWaitCompleteResponseProto alloc] init] autorelease];
  return self;
}
- (NormStructWaitCompleteResponseProto_Builder*) clone {
  return [NormStructWaitCompleteResponseProto builderWithPrototype:result];
}
- (NormStructWaitCompleteResponseProto*) defaultInstance {
  return [NormStructWaitCompleteResponseProto defaultInstance];
}
- (NormStructWaitCompleteResponseProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (NormStructWaitCompleteResponseProto*) buildPartial {
  NormStructWaitCompleteResponseProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (NormStructWaitCompleteResponseProto_Builder*) mergeFrom:(NormStructWaitCompleteResponseProto*) other {
  if (other == [NormStructWaitCompleteResponseProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  if (other.mutableUserStructList.count > 0) {
    if (result.mutableUserStructList == nil) {
      result.mutableUserStructList = [NSMutableArray array];
    }
    [result.mutableUserStructList addObjectsFromArray:other.mutableUserStructList];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (NormStructWaitCompleteResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (NormStructWaitCompleteResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        int32_t value = [input readEnum];
        if (NormStructWaitCompleteResponseProto_NormStructWaitCompleteStatusIsValidValue(value)) {
          [self setStatus:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
      case 26: {
        FullUserStructureProto_Builder* subBuilder = [FullUserStructureProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addUserStruct:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (NormStructWaitCompleteResponseProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (NormStructWaitCompleteResponseProto_Builder*) setSenderBuilder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (NormStructWaitCompleteResponseProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (NormStructWaitCompleteResponseProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (NormStructWaitCompleteResponseProto_NormStructWaitCompleteStatus) status {
  return result.status;
}
- (NormStructWaitCompleteResponseProto_Builder*) setStatus:(NormStructWaitCompleteResponseProto_NormStructWaitCompleteStatus) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (NormStructWaitCompleteResponseProto_Builder*) clearStatus {
  result.hasStatus = NO;
  result.status = NormStructWaitCompleteResponseProto_NormStructWaitCompleteStatusSuccess;
  return self;
}
- (NSArray*) userStructList {
  if (result.mutableUserStructList == nil) { return [NSArray array]; }
  return result.mutableUserStructList;
}
- (FullUserStructureProto*) userStructAtIndex:(int32_t) index {
  return [result userStructAtIndex:index];
}
- (NormStructWaitCompleteResponseProto_Builder*) replaceUserStructAtIndex:(int32_t) index with:(FullUserStructureProto*) value {
  [result.mutableUserStructList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (NormStructWaitCompleteResponseProto_Builder*) addAllUserStruct:(NSArray*) values {
  if (result.mutableUserStructList == nil) {
    result.mutableUserStructList = [NSMutableArray array];
  }
  [result.mutableUserStructList addObjectsFromArray:values];
  return self;
}
- (NormStructWaitCompleteResponseProto_Builder*) clearUserStructList {
  result.mutableUserStructList = nil;
  return self;
}
- (NormStructWaitCompleteResponseProto_Builder*) addUserStruct:(FullUserStructureProto*) value {
  if (result.mutableUserStructList == nil) {
    result.mutableUserStructList = [NSMutableArray array];
  }
  [result.mutableUserStructList addObject:value];
  return self;
}
@end

@interface RetrieveCurrencyFromNormStructureRequestProto ()
@property (retain) MinimumUserProtoWithMaxResources* sender;
@property (retain) NSMutableArray* mutableStructRetrievalsList;
@end

@implementation RetrieveCurrencyFromNormStructureRequestProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value {
  hasSender_ = !!value;
}
@synthesize sender;
@synthesize mutableStructRetrievalsList;
- (void) dealloc {
  self.sender = nil;
  self.mutableStructRetrievalsList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProtoWithMaxResources defaultInstance];
  }
  return self;
}
static RetrieveCurrencyFromNormStructureRequestProto* defaultRetrieveCurrencyFromNormStructureRequestProtoInstance = nil;
+ (void) initialize {
  if (self == [RetrieveCurrencyFromNormStructureRequestProto class]) {
    defaultRetrieveCurrencyFromNormStructureRequestProtoInstance = [[RetrieveCurrencyFromNormStructureRequestProto alloc] init];
  }
}
+ (RetrieveCurrencyFromNormStructureRequestProto*) defaultInstance {
  return defaultRetrieveCurrencyFromNormStructureRequestProtoInstance;
}
- (RetrieveCurrencyFromNormStructureRequestProto*) defaultInstance {
  return defaultRetrieveCurrencyFromNormStructureRequestProtoInstance;
}
- (NSArray*) structRetrievalsList {
  return mutableStructRetrievalsList;
}
- (RetrieveCurrencyFromNormStructureRequestProto_StructRetrieval*) structRetrievalsAtIndex:(int32_t) index {
  id value = [mutableStructRetrievalsList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  for (RetrieveCurrencyFromNormStructureRequestProto_StructRetrieval* element in self.structRetrievalsList) {
    [output writeMessage:2 value:element];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSender) {
    size += computeMessageSize(1, self.sender);
  }
  for (RetrieveCurrencyFromNormStructureRequestProto_StructRetrieval* element in self.structRetrievalsList) {
    size += computeMessageSize(2, element);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (RetrieveCurrencyFromNormStructureRequestProto*) parseFromData:(NSData*) data {
  return (RetrieveCurrencyFromNormStructureRequestProto*)[[[RetrieveCurrencyFromNormStructureRequestProto builder] mergeFromData:data] build];
}
+ (RetrieveCurrencyFromNormStructureRequestProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RetrieveCurrencyFromNormStructureRequestProto*)[[[RetrieveCurrencyFromNormStructureRequestProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (RetrieveCurrencyFromNormStructureRequestProto*) parseFromInputStream:(NSInputStream*) input {
  return (RetrieveCurrencyFromNormStructureRequestProto*)[[[RetrieveCurrencyFromNormStructureRequestProto builder] mergeFromInputStream:input] build];
}
+ (RetrieveCurrencyFromNormStructureRequestProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RetrieveCurrencyFromNormStructureRequestProto*)[[[RetrieveCurrencyFromNormStructureRequestProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RetrieveCurrencyFromNormStructureRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (RetrieveCurrencyFromNormStructureRequestProto*)[[[RetrieveCurrencyFromNormStructureRequestProto builder] mergeFromCodedInputStream:input] build];
}
+ (RetrieveCurrencyFromNormStructureRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RetrieveCurrencyFromNormStructureRequestProto*)[[[RetrieveCurrencyFromNormStructureRequestProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RetrieveCurrencyFromNormStructureRequestProto_Builder*) builder {
  return [[[RetrieveCurrencyFromNormStructureRequestProto_Builder alloc] init] autorelease];
}
+ (RetrieveCurrencyFromNormStructureRequestProto_Builder*) builderWithPrototype:(RetrieveCurrencyFromNormStructureRequestProto*) prototype {
  return [[RetrieveCurrencyFromNormStructureRequestProto builder] mergeFrom:prototype];
}
- (RetrieveCurrencyFromNormStructureRequestProto_Builder*) builder {
  return [RetrieveCurrencyFromNormStructureRequestProto builder];
}
@end

@interface RetrieveCurrencyFromNormStructureRequestProto_StructRetrieval ()
@property int32_t userStructId;
@property int64_t timeOfRetrieval;
@property int32_t amountCollected;
@end

@implementation RetrieveCurrencyFromNormStructureRequestProto_StructRetrieval

- (BOOL) hasUserStructId {
  return !!hasUserStructId_;
}
- (void) setHasUserStructId:(BOOL) value {
  hasUserStructId_ = !!value;
}
@synthesize userStructId;
- (BOOL) hasTimeOfRetrieval {
  return !!hasTimeOfRetrieval_;
}
- (void) setHasTimeOfRetrieval:(BOOL) value {
  hasTimeOfRetrieval_ = !!value;
}
@synthesize timeOfRetrieval;
- (BOOL) hasAmountCollected {
  return !!hasAmountCollected_;
}
- (void) setHasAmountCollected:(BOOL) value {
  hasAmountCollected_ = !!value;
}
@synthesize amountCollected;
- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.userStructId = 0;
    self.timeOfRetrieval = 0L;
    self.amountCollected = 0;
  }
  return self;
}
static RetrieveCurrencyFromNormStructureRequestProto_StructRetrieval* defaultRetrieveCurrencyFromNormStructureRequestProto_StructRetrievalInstance = nil;
+ (void) initialize {
  if (self == [RetrieveCurrencyFromNormStructureRequestProto_StructRetrieval class]) {
    defaultRetrieveCurrencyFromNormStructureRequestProto_StructRetrievalInstance = [[RetrieveCurrencyFromNormStructureRequestProto_StructRetrieval alloc] init];
  }
}
+ (RetrieveCurrencyFromNormStructureRequestProto_StructRetrieval*) defaultInstance {
  return defaultRetrieveCurrencyFromNormStructureRequestProto_StructRetrievalInstance;
}
- (RetrieveCurrencyFromNormStructureRequestProto_StructRetrieval*) defaultInstance {
  return defaultRetrieveCurrencyFromNormStructureRequestProto_StructRetrievalInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUserStructId) {
    [output writeInt32:1 value:self.userStructId];
  }
  if (self.hasTimeOfRetrieval) {
    [output writeInt64:2 value:self.timeOfRetrieval];
  }
  if (self.hasAmountCollected) {
    [output writeInt32:3 value:self.amountCollected];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasUserStructId) {
    size += computeInt32Size(1, self.userStructId);
  }
  if (self.hasTimeOfRetrieval) {
    size += computeInt64Size(2, self.timeOfRetrieval);
  }
  if (self.hasAmountCollected) {
    size += computeInt32Size(3, self.amountCollected);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (RetrieveCurrencyFromNormStructureRequestProto_StructRetrieval*) parseFromData:(NSData*) data {
  return (RetrieveCurrencyFromNormStructureRequestProto_StructRetrieval*)[[[RetrieveCurrencyFromNormStructureRequestProto_StructRetrieval builder] mergeFromData:data] build];
}
+ (RetrieveCurrencyFromNormStructureRequestProto_StructRetrieval*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RetrieveCurrencyFromNormStructureRequestProto_StructRetrieval*)[[[RetrieveCurrencyFromNormStructureRequestProto_StructRetrieval builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (RetrieveCurrencyFromNormStructureRequestProto_StructRetrieval*) parseFromInputStream:(NSInputStream*) input {
  return (RetrieveCurrencyFromNormStructureRequestProto_StructRetrieval*)[[[RetrieveCurrencyFromNormStructureRequestProto_StructRetrieval builder] mergeFromInputStream:input] build];
}
+ (RetrieveCurrencyFromNormStructureRequestProto_StructRetrieval*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RetrieveCurrencyFromNormStructureRequestProto_StructRetrieval*)[[[RetrieveCurrencyFromNormStructureRequestProto_StructRetrieval builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RetrieveCurrencyFromNormStructureRequestProto_StructRetrieval*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (RetrieveCurrencyFromNormStructureRequestProto_StructRetrieval*)[[[RetrieveCurrencyFromNormStructureRequestProto_StructRetrieval builder] mergeFromCodedInputStream:input] build];
}
+ (RetrieveCurrencyFromNormStructureRequestProto_StructRetrieval*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RetrieveCurrencyFromNormStructureRequestProto_StructRetrieval*)[[[RetrieveCurrencyFromNormStructureRequestProto_StructRetrieval builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RetrieveCurrencyFromNormStructureRequestProto_StructRetrieval_Builder*) builder {
  return [[[RetrieveCurrencyFromNormStructureRequestProto_StructRetrieval_Builder alloc] init] autorelease];
}
+ (RetrieveCurrencyFromNormStructureRequestProto_StructRetrieval_Builder*) builderWithPrototype:(RetrieveCurrencyFromNormStructureRequestProto_StructRetrieval*) prototype {
  return [[RetrieveCurrencyFromNormStructureRequestProto_StructRetrieval builder] mergeFrom:prototype];
}
- (RetrieveCurrencyFromNormStructureRequestProto_StructRetrieval_Builder*) builder {
  return [RetrieveCurrencyFromNormStructureRequestProto_StructRetrieval builder];
}
@end

@interface RetrieveCurrencyFromNormStructureRequestProto_StructRetrieval_Builder()
@property (retain) RetrieveCurrencyFromNormStructureRequestProto_StructRetrieval* result;
@end

@implementation RetrieveCurrencyFromNormStructureRequestProto_StructRetrieval_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[RetrieveCurrencyFromNormStructureRequestProto_StructRetrieval alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (RetrieveCurrencyFromNormStructureRequestProto_StructRetrieval_Builder*) clear {
  self.result = [[[RetrieveCurrencyFromNormStructureRequestProto_StructRetrieval alloc] init] autorelease];
  return self;
}
- (RetrieveCurrencyFromNormStructureRequestProto_StructRetrieval_Builder*) clone {
  return [RetrieveCurrencyFromNormStructureRequestProto_StructRetrieval builderWithPrototype:result];
}
- (RetrieveCurrencyFromNormStructureRequestProto_StructRetrieval*) defaultInstance {
  return [RetrieveCurrencyFromNormStructureRequestProto_StructRetrieval defaultInstance];
}
- (RetrieveCurrencyFromNormStructureRequestProto_StructRetrieval*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (RetrieveCurrencyFromNormStructureRequestProto_StructRetrieval*) buildPartial {
  RetrieveCurrencyFromNormStructureRequestProto_StructRetrieval* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (RetrieveCurrencyFromNormStructureRequestProto_StructRetrieval_Builder*) mergeFrom:(RetrieveCurrencyFromNormStructureRequestProto_StructRetrieval*) other {
  if (other == [RetrieveCurrencyFromNormStructureRequestProto_StructRetrieval defaultInstance]) {
    return self;
  }
  if (other.hasUserStructId) {
    [self setUserStructId:other.userStructId];
  }
  if (other.hasTimeOfRetrieval) {
    [self setTimeOfRetrieval:other.timeOfRetrieval];
  }
  if (other.hasAmountCollected) {
    [self setAmountCollected:other.amountCollected];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (RetrieveCurrencyFromNormStructureRequestProto_StructRetrieval_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (RetrieveCurrencyFromNormStructureRequestProto_StructRetrieval_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setUserStructId:[input readInt32]];
        break;
      }
      case 16: {
        [self setTimeOfRetrieval:[input readInt64]];
        break;
      }
      case 24: {
        [self setAmountCollected:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasUserStructId {
  return result.hasUserStructId;
}
- (int32_t) userStructId {
  return result.userStructId;
}
- (RetrieveCurrencyFromNormStructureRequestProto_StructRetrieval_Builder*) setUserStructId:(int32_t) value {
  result.hasUserStructId = YES;
  result.userStructId = value;
  return self;
}
- (RetrieveCurrencyFromNormStructureRequestProto_StructRetrieval_Builder*) clearUserStructId {
  result.hasUserStructId = NO;
  result.userStructId = 0;
  return self;
}
- (BOOL) hasTimeOfRetrieval {
  return result.hasTimeOfRetrieval;
}
- (int64_t) timeOfRetrieval {
  return result.timeOfRetrieval;
}
- (RetrieveCurrencyFromNormStructureRequestProto_StructRetrieval_Builder*) setTimeOfRetrieval:(int64_t) value {
  result.hasTimeOfRetrieval = YES;
  result.timeOfRetrieval = value;
  return self;
}
- (RetrieveCurrencyFromNormStructureRequestProto_StructRetrieval_Builder*) clearTimeOfRetrieval {
  result.hasTimeOfRetrieval = NO;
  result.timeOfRetrieval = 0L;
  return self;
}
- (BOOL) hasAmountCollected {
  return result.hasAmountCollected;
}
- (int32_t) amountCollected {
  return result.amountCollected;
}
- (RetrieveCurrencyFromNormStructureRequestProto_StructRetrieval_Builder*) setAmountCollected:(int32_t) value {
  result.hasAmountCollected = YES;
  result.amountCollected = value;
  return self;
}
- (RetrieveCurrencyFromNormStructureRequestProto_StructRetrieval_Builder*) clearAmountCollected {
  result.hasAmountCollected = NO;
  result.amountCollected = 0;
  return self;
}
@end

@interface RetrieveCurrencyFromNormStructureRequestProto_Builder()
@property (retain) RetrieveCurrencyFromNormStructureRequestProto* result;
@end

@implementation RetrieveCurrencyFromNormStructureRequestProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[RetrieveCurrencyFromNormStructureRequestProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (RetrieveCurrencyFromNormStructureRequestProto_Builder*) clear {
  self.result = [[[RetrieveCurrencyFromNormStructureRequestProto alloc] init] autorelease];
  return self;
}
- (RetrieveCurrencyFromNormStructureRequestProto_Builder*) clone {
  return [RetrieveCurrencyFromNormStructureRequestProto builderWithPrototype:result];
}
- (RetrieveCurrencyFromNormStructureRequestProto*) defaultInstance {
  return [RetrieveCurrencyFromNormStructureRequestProto defaultInstance];
}
- (RetrieveCurrencyFromNormStructureRequestProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (RetrieveCurrencyFromNormStructureRequestProto*) buildPartial {
  RetrieveCurrencyFromNormStructureRequestProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (RetrieveCurrencyFromNormStructureRequestProto_Builder*) mergeFrom:(RetrieveCurrencyFromNormStructureRequestProto*) other {
  if (other == [RetrieveCurrencyFromNormStructureRequestProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.mutableStructRetrievalsList.count > 0) {
    if (result.mutableStructRetrievalsList == nil) {
      result.mutableStructRetrievalsList = [NSMutableArray array];
    }
    [result.mutableStructRetrievalsList addObjectsFromArray:other.mutableStructRetrievalsList];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (RetrieveCurrencyFromNormStructureRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (RetrieveCurrencyFromNormStructureRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProtoWithMaxResources_Builder* subBuilder = [MinimumUserProtoWithMaxResources builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        RetrieveCurrencyFromNormStructureRequestProto_StructRetrieval_Builder* subBuilder = [RetrieveCurrencyFromNormStructureRequestProto_StructRetrieval builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addStructRetrievals:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProtoWithMaxResources*) sender {
  return result.sender;
}
- (RetrieveCurrencyFromNormStructureRequestProto_Builder*) setSender:(MinimumUserProtoWithMaxResources*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (RetrieveCurrencyFromNormStructureRequestProto_Builder*) setSenderBuilder:(MinimumUserProtoWithMaxResources_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (RetrieveCurrencyFromNormStructureRequestProto_Builder*) mergeSender:(MinimumUserProtoWithMaxResources*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProtoWithMaxResources defaultInstance]) {
    result.sender =
      [[[MinimumUserProtoWithMaxResources builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (RetrieveCurrencyFromNormStructureRequestProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProtoWithMaxResources defaultInstance];
  return self;
}
- (NSArray*) structRetrievalsList {
  if (result.mutableStructRetrievalsList == nil) { return [NSArray array]; }
  return result.mutableStructRetrievalsList;
}
- (RetrieveCurrencyFromNormStructureRequestProto_StructRetrieval*) structRetrievalsAtIndex:(int32_t) index {
  return [result structRetrievalsAtIndex:index];
}
- (RetrieveCurrencyFromNormStructureRequestProto_Builder*) replaceStructRetrievalsAtIndex:(int32_t) index with:(RetrieveCurrencyFromNormStructureRequestProto_StructRetrieval*) value {
  [result.mutableStructRetrievalsList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (RetrieveCurrencyFromNormStructureRequestProto_Builder*) addAllStructRetrievals:(NSArray*) values {
  if (result.mutableStructRetrievalsList == nil) {
    result.mutableStructRetrievalsList = [NSMutableArray array];
  }
  [result.mutableStructRetrievalsList addObjectsFromArray:values];
  return self;
}
- (RetrieveCurrencyFromNormStructureRequestProto_Builder*) clearStructRetrievalsList {
  result.mutableStructRetrievalsList = nil;
  return self;
}
- (RetrieveCurrencyFromNormStructureRequestProto_Builder*) addStructRetrievals:(RetrieveCurrencyFromNormStructureRequestProto_StructRetrieval*) value {
  if (result.mutableStructRetrievalsList == nil) {
    result.mutableStructRetrievalsList = [NSMutableArray array];
  }
  [result.mutableStructRetrievalsList addObject:value];
  return self;
}
@end

@interface RetrieveCurrencyFromNormStructureResponseProto ()
@property (retain) MinimumUserProtoWithMaxResources* sender;
@property RetrieveCurrencyFromNormStructureResponseProto_RetrieveCurrencyFromNormStructureStatus status;
@end

@implementation RetrieveCurrencyFromNormStructureResponseProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value {
  hasSender_ = !!value;
}
@synthesize sender;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value {
  hasStatus_ = !!value;
}
@synthesize status;
- (void) dealloc {
  self.sender = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProtoWithMaxResources defaultInstance];
    self.status = RetrieveCurrencyFromNormStructureResponseProto_RetrieveCurrencyFromNormStructureStatusSuccess;
  }
  return self;
}
static RetrieveCurrencyFromNormStructureResponseProto* defaultRetrieveCurrencyFromNormStructureResponseProtoInstance = nil;
+ (void) initialize {
  if (self == [RetrieveCurrencyFromNormStructureResponseProto class]) {
    defaultRetrieveCurrencyFromNormStructureResponseProtoInstance = [[RetrieveCurrencyFromNormStructureResponseProto alloc] init];
  }
}
+ (RetrieveCurrencyFromNormStructureResponseProto*) defaultInstance {
  return defaultRetrieveCurrencyFromNormStructureResponseProtoInstance;
}
- (RetrieveCurrencyFromNormStructureResponseProto*) defaultInstance {
  return defaultRetrieveCurrencyFromNormStructureResponseProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasStatus) {
    [output writeEnum:2 value:self.status];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSender) {
    size += computeMessageSize(1, self.sender);
  }
  if (self.hasStatus) {
    size += computeEnumSize(2, self.status);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (RetrieveCurrencyFromNormStructureResponseProto*) parseFromData:(NSData*) data {
  return (RetrieveCurrencyFromNormStructureResponseProto*)[[[RetrieveCurrencyFromNormStructureResponseProto builder] mergeFromData:data] build];
}
+ (RetrieveCurrencyFromNormStructureResponseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RetrieveCurrencyFromNormStructureResponseProto*)[[[RetrieveCurrencyFromNormStructureResponseProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (RetrieveCurrencyFromNormStructureResponseProto*) parseFromInputStream:(NSInputStream*) input {
  return (RetrieveCurrencyFromNormStructureResponseProto*)[[[RetrieveCurrencyFromNormStructureResponseProto builder] mergeFromInputStream:input] build];
}
+ (RetrieveCurrencyFromNormStructureResponseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RetrieveCurrencyFromNormStructureResponseProto*)[[[RetrieveCurrencyFromNormStructureResponseProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RetrieveCurrencyFromNormStructureResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (RetrieveCurrencyFromNormStructureResponseProto*)[[[RetrieveCurrencyFromNormStructureResponseProto builder] mergeFromCodedInputStream:input] build];
}
+ (RetrieveCurrencyFromNormStructureResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RetrieveCurrencyFromNormStructureResponseProto*)[[[RetrieveCurrencyFromNormStructureResponseProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RetrieveCurrencyFromNormStructureResponseProto_Builder*) builder {
  return [[[RetrieveCurrencyFromNormStructureResponseProto_Builder alloc] init] autorelease];
}
+ (RetrieveCurrencyFromNormStructureResponseProto_Builder*) builderWithPrototype:(RetrieveCurrencyFromNormStructureResponseProto*) prototype {
  return [[RetrieveCurrencyFromNormStructureResponseProto builder] mergeFrom:prototype];
}
- (RetrieveCurrencyFromNormStructureResponseProto_Builder*) builder {
  return [RetrieveCurrencyFromNormStructureResponseProto builder];
}
@end

BOOL RetrieveCurrencyFromNormStructureResponseProto_RetrieveCurrencyFromNormStructureStatusIsValidValue(RetrieveCurrencyFromNormStructureResponseProto_RetrieveCurrencyFromNormStructureStatus value) {
  switch (value) {
    case RetrieveCurrencyFromNormStructureResponseProto_RetrieveCurrencyFromNormStructureStatusSuccess:
    case RetrieveCurrencyFromNormStructureResponseProto_RetrieveCurrencyFromNormStructureStatusFailOther:
      return YES;
    default:
      return NO;
  }
}
@interface RetrieveCurrencyFromNormStructureResponseProto_Builder()
@property (retain) RetrieveCurrencyFromNormStructureResponseProto* result;
@end

@implementation RetrieveCurrencyFromNormStructureResponseProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[RetrieveCurrencyFromNormStructureResponseProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (RetrieveCurrencyFromNormStructureResponseProto_Builder*) clear {
  self.result = [[[RetrieveCurrencyFromNormStructureResponseProto alloc] init] autorelease];
  return self;
}
- (RetrieveCurrencyFromNormStructureResponseProto_Builder*) clone {
  return [RetrieveCurrencyFromNormStructureResponseProto builderWithPrototype:result];
}
- (RetrieveCurrencyFromNormStructureResponseProto*) defaultInstance {
  return [RetrieveCurrencyFromNormStructureResponseProto defaultInstance];
}
- (RetrieveCurrencyFromNormStructureResponseProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (RetrieveCurrencyFromNormStructureResponseProto*) buildPartial {
  RetrieveCurrencyFromNormStructureResponseProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (RetrieveCurrencyFromNormStructureResponseProto_Builder*) mergeFrom:(RetrieveCurrencyFromNormStructureResponseProto*) other {
  if (other == [RetrieveCurrencyFromNormStructureResponseProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (RetrieveCurrencyFromNormStructureResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (RetrieveCurrencyFromNormStructureResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProtoWithMaxResources_Builder* subBuilder = [MinimumUserProtoWithMaxResources builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        int32_t value = [input readEnum];
        if (RetrieveCurrencyFromNormStructureResponseProto_RetrieveCurrencyFromNormStructureStatusIsValidValue(value)) {
          [self setStatus:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProtoWithMaxResources*) sender {
  return result.sender;
}
- (RetrieveCurrencyFromNormStructureResponseProto_Builder*) setSender:(MinimumUserProtoWithMaxResources*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (RetrieveCurrencyFromNormStructureResponseProto_Builder*) setSenderBuilder:(MinimumUserProtoWithMaxResources_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (RetrieveCurrencyFromNormStructureResponseProto_Builder*) mergeSender:(MinimumUserProtoWithMaxResources*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProtoWithMaxResources defaultInstance]) {
    result.sender =
      [[[MinimumUserProtoWithMaxResources builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (RetrieveCurrencyFromNormStructureResponseProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProtoWithMaxResources defaultInstance];
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (RetrieveCurrencyFromNormStructureResponseProto_RetrieveCurrencyFromNormStructureStatus) status {
  return result.status;
}
- (RetrieveCurrencyFromNormStructureResponseProto_Builder*) setStatus:(RetrieveCurrencyFromNormStructureResponseProto_RetrieveCurrencyFromNormStructureStatus) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (RetrieveCurrencyFromNormStructureResponseProto_Builder*) clearStatus {
  result.hasStatus = NO;
  result.status = RetrieveCurrencyFromNormStructureResponseProto_RetrieveCurrencyFromNormStructureStatusSuccess;
  return self;
}
@end

@interface ExpansionWaitCompleteRequestProto ()
@property (retain) MinimumUserProto* sender;
@property int64_t curTime;
@property int32_t xPosition;
@property int32_t yPosition;
@property BOOL speedUp;
@property int32_t gemCostToSpeedup;
@end

@implementation ExpansionWaitCompleteRequestProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value {
  hasSender_ = !!value;
}
@synthesize sender;
- (BOOL) hasCurTime {
  return !!hasCurTime_;
}
- (void) setHasCurTime:(BOOL) value {
  hasCurTime_ = !!value;
}
@synthesize curTime;
- (BOOL) hasXPosition {
  return !!hasXPosition_;
}
- (void) setHasXPosition:(BOOL) value {
  hasXPosition_ = !!value;
}
@synthesize xPosition;
- (BOOL) hasYPosition {
  return !!hasYPosition_;
}
- (void) setHasYPosition:(BOOL) value {
  hasYPosition_ = !!value;
}
@synthesize yPosition;
- (BOOL) hasSpeedUp {
  return !!hasSpeedUp_;
}
- (void) setHasSpeedUp:(BOOL) value {
  hasSpeedUp_ = !!value;
}
- (BOOL) speedUp {
  return !!speedUp_;
}
- (void) setSpeedUp:(BOOL) value {
  speedUp_ = !!value;
}
- (BOOL) hasGemCostToSpeedup {
  return !!hasGemCostToSpeedup_;
}
- (void) setHasGemCostToSpeedup:(BOOL) value {
  hasGemCostToSpeedup_ = !!value;
}
@synthesize gemCostToSpeedup;
- (void) dealloc {
  self.sender = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.curTime = 0L;
    self.xPosition = 0;
    self.yPosition = 0;
    self.speedUp = NO;
    self.gemCostToSpeedup = 0;
  }
  return self;
}
static ExpansionWaitCompleteRequestProto* defaultExpansionWaitCompleteRequestProtoInstance = nil;
+ (void) initialize {
  if (self == [ExpansionWaitCompleteRequestProto class]) {
    defaultExpansionWaitCompleteRequestProtoInstance = [[ExpansionWaitCompleteRequestProto alloc] init];
  }
}
+ (ExpansionWaitCompleteRequestProto*) defaultInstance {
  return defaultExpansionWaitCompleteRequestProtoInstance;
}
- (ExpansionWaitCompleteRequestProto*) defaultInstance {
  return defaultExpansionWaitCompleteRequestProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasCurTime) {
    [output writeInt64:2 value:self.curTime];
  }
  if (self.hasXPosition) {
    [output writeSInt32:3 value:self.xPosition];
  }
  if (self.hasYPosition) {
    [output writeSInt32:4 value:self.yPosition];
  }
  if (self.hasSpeedUp) {
    [output writeBool:5 value:self.speedUp];
  }
  if (self.hasGemCostToSpeedup) {
    [output writeInt32:6 value:self.gemCostToSpeedup];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSender) {
    size += computeMessageSize(1, self.sender);
  }
  if (self.hasCurTime) {
    size += computeInt64Size(2, self.curTime);
  }
  if (self.hasXPosition) {
    size += computeSInt32Size(3, self.xPosition);
  }
  if (self.hasYPosition) {
    size += computeSInt32Size(4, self.yPosition);
  }
  if (self.hasSpeedUp) {
    size += computeBoolSize(5, self.speedUp);
  }
  if (self.hasGemCostToSpeedup) {
    size += computeInt32Size(6, self.gemCostToSpeedup);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (ExpansionWaitCompleteRequestProto*) parseFromData:(NSData*) data {
  return (ExpansionWaitCompleteRequestProto*)[[[ExpansionWaitCompleteRequestProto builder] mergeFromData:data] build];
}
+ (ExpansionWaitCompleteRequestProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ExpansionWaitCompleteRequestProto*)[[[ExpansionWaitCompleteRequestProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ExpansionWaitCompleteRequestProto*) parseFromInputStream:(NSInputStream*) input {
  return (ExpansionWaitCompleteRequestProto*)[[[ExpansionWaitCompleteRequestProto builder] mergeFromInputStream:input] build];
}
+ (ExpansionWaitCompleteRequestProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ExpansionWaitCompleteRequestProto*)[[[ExpansionWaitCompleteRequestProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ExpansionWaitCompleteRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ExpansionWaitCompleteRequestProto*)[[[ExpansionWaitCompleteRequestProto builder] mergeFromCodedInputStream:input] build];
}
+ (ExpansionWaitCompleteRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ExpansionWaitCompleteRequestProto*)[[[ExpansionWaitCompleteRequestProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ExpansionWaitCompleteRequestProto_Builder*) builder {
  return [[[ExpansionWaitCompleteRequestProto_Builder alloc] init] autorelease];
}
+ (ExpansionWaitCompleteRequestProto_Builder*) builderWithPrototype:(ExpansionWaitCompleteRequestProto*) prototype {
  return [[ExpansionWaitCompleteRequestProto builder] mergeFrom:prototype];
}
- (ExpansionWaitCompleteRequestProto_Builder*) builder {
  return [ExpansionWaitCompleteRequestProto builder];
}
@end

@interface ExpansionWaitCompleteRequestProto_Builder()
@property (retain) ExpansionWaitCompleteRequestProto* result;
@end

@implementation ExpansionWaitCompleteRequestProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[ExpansionWaitCompleteRequestProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (ExpansionWaitCompleteRequestProto_Builder*) clear {
  self.result = [[[ExpansionWaitCompleteRequestProto alloc] init] autorelease];
  return self;
}
- (ExpansionWaitCompleteRequestProto_Builder*) clone {
  return [ExpansionWaitCompleteRequestProto builderWithPrototype:result];
}
- (ExpansionWaitCompleteRequestProto*) defaultInstance {
  return [ExpansionWaitCompleteRequestProto defaultInstance];
}
- (ExpansionWaitCompleteRequestProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ExpansionWaitCompleteRequestProto*) buildPartial {
  ExpansionWaitCompleteRequestProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (ExpansionWaitCompleteRequestProto_Builder*) mergeFrom:(ExpansionWaitCompleteRequestProto*) other {
  if (other == [ExpansionWaitCompleteRequestProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasCurTime) {
    [self setCurTime:other.curTime];
  }
  if (other.hasXPosition) {
    [self setXPosition:other.xPosition];
  }
  if (other.hasYPosition) {
    [self setYPosition:other.yPosition];
  }
  if (other.hasSpeedUp) {
    [self setSpeedUp:other.speedUp];
  }
  if (other.hasGemCostToSpeedup) {
    [self setGemCostToSpeedup:other.gemCostToSpeedup];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ExpansionWaitCompleteRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ExpansionWaitCompleteRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setCurTime:[input readInt64]];
        break;
      }
      case 24: {
        [self setXPosition:[input readSInt32]];
        break;
      }
      case 32: {
        [self setYPosition:[input readSInt32]];
        break;
      }
      case 40: {
        [self setSpeedUp:[input readBool]];
        break;
      }
      case 48: {
        [self setGemCostToSpeedup:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (ExpansionWaitCompleteRequestProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (ExpansionWaitCompleteRequestProto_Builder*) setSenderBuilder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (ExpansionWaitCompleteRequestProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (ExpansionWaitCompleteRequestProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasCurTime {
  return result.hasCurTime;
}
- (int64_t) curTime {
  return result.curTime;
}
- (ExpansionWaitCompleteRequestProto_Builder*) setCurTime:(int64_t) value {
  result.hasCurTime = YES;
  result.curTime = value;
  return self;
}
- (ExpansionWaitCompleteRequestProto_Builder*) clearCurTime {
  result.hasCurTime = NO;
  result.curTime = 0L;
  return self;
}
- (BOOL) hasXPosition {
  return result.hasXPosition;
}
- (int32_t) xPosition {
  return result.xPosition;
}
- (ExpansionWaitCompleteRequestProto_Builder*) setXPosition:(int32_t) value {
  result.hasXPosition = YES;
  result.xPosition = value;
  return self;
}
- (ExpansionWaitCompleteRequestProto_Builder*) clearXPosition {
  result.hasXPosition = NO;
  result.xPosition = 0;
  return self;
}
- (BOOL) hasYPosition {
  return result.hasYPosition;
}
- (int32_t) yPosition {
  return result.yPosition;
}
- (ExpansionWaitCompleteRequestProto_Builder*) setYPosition:(int32_t) value {
  result.hasYPosition = YES;
  result.yPosition = value;
  return self;
}
- (ExpansionWaitCompleteRequestProto_Builder*) clearYPosition {
  result.hasYPosition = NO;
  result.yPosition = 0;
  return self;
}
- (BOOL) hasSpeedUp {
  return result.hasSpeedUp;
}
- (BOOL) speedUp {
  return result.speedUp;
}
- (ExpansionWaitCompleteRequestProto_Builder*) setSpeedUp:(BOOL) value {
  result.hasSpeedUp = YES;
  result.speedUp = value;
  return self;
}
- (ExpansionWaitCompleteRequestProto_Builder*) clearSpeedUp {
  result.hasSpeedUp = NO;
  result.speedUp = NO;
  return self;
}
- (BOOL) hasGemCostToSpeedup {
  return result.hasGemCostToSpeedup;
}
- (int32_t) gemCostToSpeedup {
  return result.gemCostToSpeedup;
}
- (ExpansionWaitCompleteRequestProto_Builder*) setGemCostToSpeedup:(int32_t) value {
  result.hasGemCostToSpeedup = YES;
  result.gemCostToSpeedup = value;
  return self;
}
- (ExpansionWaitCompleteRequestProto_Builder*) clearGemCostToSpeedup {
  result.hasGemCostToSpeedup = NO;
  result.gemCostToSpeedup = 0;
  return self;
}
@end

@interface ExpansionWaitCompleteResponseProto ()
@property (retain) MinimumUserProto* sender;
@property ExpansionWaitCompleteResponseProto_ExpansionWaitCompleteStatus status;
@property (retain) UserCityExpansionDataProto* ucedp;
@end

@implementation ExpansionWaitCompleteResponseProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value {
  hasSender_ = !!value;
}
@synthesize sender;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value {
  hasStatus_ = !!value;
}
@synthesize status;
- (BOOL) hasUcedp {
  return !!hasUcedp_;
}
- (void) setHasUcedp:(BOOL) value {
  hasUcedp_ = !!value;
}
@synthesize ucedp;
- (void) dealloc {
  self.sender = nil;
  self.ucedp = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.status = ExpansionWaitCompleteResponseProto_ExpansionWaitCompleteStatusSuccess;
    self.ucedp = [UserCityExpansionDataProto defaultInstance];
  }
  return self;
}
static ExpansionWaitCompleteResponseProto* defaultExpansionWaitCompleteResponseProtoInstance = nil;
+ (void) initialize {
  if (self == [ExpansionWaitCompleteResponseProto class]) {
    defaultExpansionWaitCompleteResponseProtoInstance = [[ExpansionWaitCompleteResponseProto alloc] init];
  }
}
+ (ExpansionWaitCompleteResponseProto*) defaultInstance {
  return defaultExpansionWaitCompleteResponseProtoInstance;
}
- (ExpansionWaitCompleteResponseProto*) defaultInstance {
  return defaultExpansionWaitCompleteResponseProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasStatus) {
    [output writeEnum:2 value:self.status];
  }
  if (self.hasUcedp) {
    [output writeMessage:3 value:self.ucedp];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSender) {
    size += computeMessageSize(1, self.sender);
  }
  if (self.hasStatus) {
    size += computeEnumSize(2, self.status);
  }
  if (self.hasUcedp) {
    size += computeMessageSize(3, self.ucedp);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (ExpansionWaitCompleteResponseProto*) parseFromData:(NSData*) data {
  return (ExpansionWaitCompleteResponseProto*)[[[ExpansionWaitCompleteResponseProto builder] mergeFromData:data] build];
}
+ (ExpansionWaitCompleteResponseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ExpansionWaitCompleteResponseProto*)[[[ExpansionWaitCompleteResponseProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ExpansionWaitCompleteResponseProto*) parseFromInputStream:(NSInputStream*) input {
  return (ExpansionWaitCompleteResponseProto*)[[[ExpansionWaitCompleteResponseProto builder] mergeFromInputStream:input] build];
}
+ (ExpansionWaitCompleteResponseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ExpansionWaitCompleteResponseProto*)[[[ExpansionWaitCompleteResponseProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ExpansionWaitCompleteResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ExpansionWaitCompleteResponseProto*)[[[ExpansionWaitCompleteResponseProto builder] mergeFromCodedInputStream:input] build];
}
+ (ExpansionWaitCompleteResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ExpansionWaitCompleteResponseProto*)[[[ExpansionWaitCompleteResponseProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ExpansionWaitCompleteResponseProto_Builder*) builder {
  return [[[ExpansionWaitCompleteResponseProto_Builder alloc] init] autorelease];
}
+ (ExpansionWaitCompleteResponseProto_Builder*) builderWithPrototype:(ExpansionWaitCompleteResponseProto*) prototype {
  return [[ExpansionWaitCompleteResponseProto builder] mergeFrom:prototype];
}
- (ExpansionWaitCompleteResponseProto_Builder*) builder {
  return [ExpansionWaitCompleteResponseProto builder];
}
@end

BOOL ExpansionWaitCompleteResponseProto_ExpansionWaitCompleteStatusIsValidValue(ExpansionWaitCompleteResponseProto_ExpansionWaitCompleteStatus value) {
  switch (value) {
    case ExpansionWaitCompleteResponseProto_ExpansionWaitCompleteStatusSuccess:
    case ExpansionWaitCompleteResponseProto_ExpansionWaitCompleteStatusFailWasNotExpanding:
    case ExpansionWaitCompleteResponseProto_ExpansionWaitCompleteStatusFailNotDoneYet:
    case ExpansionWaitCompleteResponseProto_ExpansionWaitCompleteStatusFailInsufficientGems:
    case ExpansionWaitCompleteResponseProto_ExpansionWaitCompleteStatusFailOther:
      return YES;
    default:
      return NO;
  }
}
@interface ExpansionWaitCompleteResponseProto_Builder()
@property (retain) ExpansionWaitCompleteResponseProto* result;
@end

@implementation ExpansionWaitCompleteResponseProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[ExpansionWaitCompleteResponseProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (ExpansionWaitCompleteResponseProto_Builder*) clear {
  self.result = [[[ExpansionWaitCompleteResponseProto alloc] init] autorelease];
  return self;
}
- (ExpansionWaitCompleteResponseProto_Builder*) clone {
  return [ExpansionWaitCompleteResponseProto builderWithPrototype:result];
}
- (ExpansionWaitCompleteResponseProto*) defaultInstance {
  return [ExpansionWaitCompleteResponseProto defaultInstance];
}
- (ExpansionWaitCompleteResponseProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ExpansionWaitCompleteResponseProto*) buildPartial {
  ExpansionWaitCompleteResponseProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (ExpansionWaitCompleteResponseProto_Builder*) mergeFrom:(ExpansionWaitCompleteResponseProto*) other {
  if (other == [ExpansionWaitCompleteResponseProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  if (other.hasUcedp) {
    [self mergeUcedp:other.ucedp];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ExpansionWaitCompleteResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ExpansionWaitCompleteResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        int32_t value = [input readEnum];
        if (ExpansionWaitCompleteResponseProto_ExpansionWaitCompleteStatusIsValidValue(value)) {
          [self setStatus:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
      case 26: {
        UserCityExpansionDataProto_Builder* subBuilder = [UserCityExpansionDataProto builder];
        if (self.hasUcedp) {
          [subBuilder mergeFrom:self.ucedp];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setUcedp:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (ExpansionWaitCompleteResponseProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (ExpansionWaitCompleteResponseProto_Builder*) setSenderBuilder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (ExpansionWaitCompleteResponseProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (ExpansionWaitCompleteResponseProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (ExpansionWaitCompleteResponseProto_ExpansionWaitCompleteStatus) status {
  return result.status;
}
- (ExpansionWaitCompleteResponseProto_Builder*) setStatus:(ExpansionWaitCompleteResponseProto_ExpansionWaitCompleteStatus) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (ExpansionWaitCompleteResponseProto_Builder*) clearStatus {
  result.hasStatus = NO;
  result.status = ExpansionWaitCompleteResponseProto_ExpansionWaitCompleteStatusSuccess;
  return self;
}
- (BOOL) hasUcedp {
  return result.hasUcedp;
}
- (UserCityExpansionDataProto*) ucedp {
  return result.ucedp;
}
- (ExpansionWaitCompleteResponseProto_Builder*) setUcedp:(UserCityExpansionDataProto*) value {
  result.hasUcedp = YES;
  result.ucedp = value;
  return self;
}
- (ExpansionWaitCompleteResponseProto_Builder*) setUcedpBuilder:(UserCityExpansionDataProto_Builder*) builderForValue {
  return [self setUcedp:[builderForValue build]];
}
- (ExpansionWaitCompleteResponseProto_Builder*) mergeUcedp:(UserCityExpansionDataProto*) value {
  if (result.hasUcedp &&
      result.ucedp != [UserCityExpansionDataProto defaultInstance]) {
    result.ucedp =
      [[[UserCityExpansionDataProto builderWithPrototype:result.ucedp] mergeFrom:value] buildPartial];
  } else {
    result.ucedp = value;
  }
  result.hasUcedp = YES;
  return self;
}
- (ExpansionWaitCompleteResponseProto_Builder*) clearUcedp {
  result.hasUcedp = NO;
  result.ucedp = [UserCityExpansionDataProto defaultInstance];
  return self;
}
@end

@interface SpawnObstacleRequestProto ()
@property (retain) MinimumUserProto* sender;
@property (retain) NSMutableArray* mutableProspectiveObstaclesList;
@property int64_t curTime;
@end

@implementation SpawnObstacleRequestProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value {
  hasSender_ = !!value;
}
@synthesize sender;
@synthesize mutableProspectiveObstaclesList;
- (BOOL) hasCurTime {
  return !!hasCurTime_;
}
- (void) setHasCurTime:(BOOL) value {
  hasCurTime_ = !!value;
}
@synthesize curTime;
- (void) dealloc {
  self.sender = nil;
  self.mutableProspectiveObstaclesList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.curTime = 0L;
  }
  return self;
}
static SpawnObstacleRequestProto* defaultSpawnObstacleRequestProtoInstance = nil;
+ (void) initialize {
  if (self == [SpawnObstacleRequestProto class]) {
    defaultSpawnObstacleRequestProtoInstance = [[SpawnObstacleRequestProto alloc] init];
  }
}
+ (SpawnObstacleRequestProto*) defaultInstance {
  return defaultSpawnObstacleRequestProtoInstance;
}
- (SpawnObstacleRequestProto*) defaultInstance {
  return defaultSpawnObstacleRequestProtoInstance;
}
- (NSArray*) prospectiveObstaclesList {
  return mutableProspectiveObstaclesList;
}
- (MinimumObstacleProto*) prospectiveObstaclesAtIndex:(int32_t) index {
  id value = [mutableProspectiveObstaclesList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  for (MinimumObstacleProto* element in self.prospectiveObstaclesList) {
    [output writeMessage:2 value:element];
  }
  if (self.hasCurTime) {
    [output writeInt64:3 value:self.curTime];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSender) {
    size += computeMessageSize(1, self.sender);
  }
  for (MinimumObstacleProto* element in self.prospectiveObstaclesList) {
    size += computeMessageSize(2, element);
  }
  if (self.hasCurTime) {
    size += computeInt64Size(3, self.curTime);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (SpawnObstacleRequestProto*) parseFromData:(NSData*) data {
  return (SpawnObstacleRequestProto*)[[[SpawnObstacleRequestProto builder] mergeFromData:data] build];
}
+ (SpawnObstacleRequestProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SpawnObstacleRequestProto*)[[[SpawnObstacleRequestProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (SpawnObstacleRequestProto*) parseFromInputStream:(NSInputStream*) input {
  return (SpawnObstacleRequestProto*)[[[SpawnObstacleRequestProto builder] mergeFromInputStream:input] build];
}
+ (SpawnObstacleRequestProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SpawnObstacleRequestProto*)[[[SpawnObstacleRequestProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SpawnObstacleRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (SpawnObstacleRequestProto*)[[[SpawnObstacleRequestProto builder] mergeFromCodedInputStream:input] build];
}
+ (SpawnObstacleRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SpawnObstacleRequestProto*)[[[SpawnObstacleRequestProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SpawnObstacleRequestProto_Builder*) builder {
  return [[[SpawnObstacleRequestProto_Builder alloc] init] autorelease];
}
+ (SpawnObstacleRequestProto_Builder*) builderWithPrototype:(SpawnObstacleRequestProto*) prototype {
  return [[SpawnObstacleRequestProto builder] mergeFrom:prototype];
}
- (SpawnObstacleRequestProto_Builder*) builder {
  return [SpawnObstacleRequestProto builder];
}
@end

@interface SpawnObstacleRequestProto_Builder()
@property (retain) SpawnObstacleRequestProto* result;
@end

@implementation SpawnObstacleRequestProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[SpawnObstacleRequestProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (SpawnObstacleRequestProto_Builder*) clear {
  self.result = [[[SpawnObstacleRequestProto alloc] init] autorelease];
  return self;
}
- (SpawnObstacleRequestProto_Builder*) clone {
  return [SpawnObstacleRequestProto builderWithPrototype:result];
}
- (SpawnObstacleRequestProto*) defaultInstance {
  return [SpawnObstacleRequestProto defaultInstance];
}
- (SpawnObstacleRequestProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (SpawnObstacleRequestProto*) buildPartial {
  SpawnObstacleRequestProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (SpawnObstacleRequestProto_Builder*) mergeFrom:(SpawnObstacleRequestProto*) other {
  if (other == [SpawnObstacleRequestProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.mutableProspectiveObstaclesList.count > 0) {
    if (result.mutableProspectiveObstaclesList == nil) {
      result.mutableProspectiveObstaclesList = [NSMutableArray array];
    }
    [result.mutableProspectiveObstaclesList addObjectsFromArray:other.mutableProspectiveObstaclesList];
  }
  if (other.hasCurTime) {
    [self setCurTime:other.curTime];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (SpawnObstacleRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (SpawnObstacleRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        MinimumObstacleProto_Builder* subBuilder = [MinimumObstacleProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addProspectiveObstacles:[subBuilder buildPartial]];
        break;
      }
      case 24: {
        [self setCurTime:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (SpawnObstacleRequestProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (SpawnObstacleRequestProto_Builder*) setSenderBuilder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (SpawnObstacleRequestProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (SpawnObstacleRequestProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (NSArray*) prospectiveObstaclesList {
  if (result.mutableProspectiveObstaclesList == nil) { return [NSArray array]; }
  return result.mutableProspectiveObstaclesList;
}
- (MinimumObstacleProto*) prospectiveObstaclesAtIndex:(int32_t) index {
  return [result prospectiveObstaclesAtIndex:index];
}
- (SpawnObstacleRequestProto_Builder*) replaceProspectiveObstaclesAtIndex:(int32_t) index with:(MinimumObstacleProto*) value {
  [result.mutableProspectiveObstaclesList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (SpawnObstacleRequestProto_Builder*) addAllProspectiveObstacles:(NSArray*) values {
  if (result.mutableProspectiveObstaclesList == nil) {
    result.mutableProspectiveObstaclesList = [NSMutableArray array];
  }
  [result.mutableProspectiveObstaclesList addObjectsFromArray:values];
  return self;
}
- (SpawnObstacleRequestProto_Builder*) clearProspectiveObstaclesList {
  result.mutableProspectiveObstaclesList = nil;
  return self;
}
- (SpawnObstacleRequestProto_Builder*) addProspectiveObstacles:(MinimumObstacleProto*) value {
  if (result.mutableProspectiveObstaclesList == nil) {
    result.mutableProspectiveObstaclesList = [NSMutableArray array];
  }
  [result.mutableProspectiveObstaclesList addObject:value];
  return self;
}
- (BOOL) hasCurTime {
  return result.hasCurTime;
}
- (int64_t) curTime {
  return result.curTime;
}
- (SpawnObstacleRequestProto_Builder*) setCurTime:(int64_t) value {
  result.hasCurTime = YES;
  result.curTime = value;
  return self;
}
- (SpawnObstacleRequestProto_Builder*) clearCurTime {
  result.hasCurTime = NO;
  result.curTime = 0L;
  return self;
}
@end

@interface SpawnObstacleResponseProto ()
@property (retain) MinimumUserProto* sender;
@property (retain) NSMutableArray* mutableSpawnedObstaclesList;
@property SpawnObstacleResponseProto_SpawnObstacleStatus status;
@end

@implementation SpawnObstacleResponseProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value {
  hasSender_ = !!value;
}
@synthesize sender;
@synthesize mutableSpawnedObstaclesList;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value {
  hasStatus_ = !!value;
}
@synthesize status;
- (void) dealloc {
  self.sender = nil;
  self.mutableSpawnedObstaclesList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.status = SpawnObstacleResponseProto_SpawnObstacleStatusSuccess;
  }
  return self;
}
static SpawnObstacleResponseProto* defaultSpawnObstacleResponseProtoInstance = nil;
+ (void) initialize {
  if (self == [SpawnObstacleResponseProto class]) {
    defaultSpawnObstacleResponseProtoInstance = [[SpawnObstacleResponseProto alloc] init];
  }
}
+ (SpawnObstacleResponseProto*) defaultInstance {
  return defaultSpawnObstacleResponseProtoInstance;
}
- (SpawnObstacleResponseProto*) defaultInstance {
  return defaultSpawnObstacleResponseProtoInstance;
}
- (NSArray*) spawnedObstaclesList {
  return mutableSpawnedObstaclesList;
}
- (UserObstacleProto*) spawnedObstaclesAtIndex:(int32_t) index {
  id value = [mutableSpawnedObstaclesList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  for (UserObstacleProto* element in self.spawnedObstaclesList) {
    [output writeMessage:2 value:element];
  }
  if (self.hasStatus) {
    [output writeEnum:3 value:self.status];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSender) {
    size += computeMessageSize(1, self.sender);
  }
  for (UserObstacleProto* element in self.spawnedObstaclesList) {
    size += computeMessageSize(2, element);
  }
  if (self.hasStatus) {
    size += computeEnumSize(3, self.status);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (SpawnObstacleResponseProto*) parseFromData:(NSData*) data {
  return (SpawnObstacleResponseProto*)[[[SpawnObstacleResponseProto builder] mergeFromData:data] build];
}
+ (SpawnObstacleResponseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SpawnObstacleResponseProto*)[[[SpawnObstacleResponseProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (SpawnObstacleResponseProto*) parseFromInputStream:(NSInputStream*) input {
  return (SpawnObstacleResponseProto*)[[[SpawnObstacleResponseProto builder] mergeFromInputStream:input] build];
}
+ (SpawnObstacleResponseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SpawnObstacleResponseProto*)[[[SpawnObstacleResponseProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SpawnObstacleResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (SpawnObstacleResponseProto*)[[[SpawnObstacleResponseProto builder] mergeFromCodedInputStream:input] build];
}
+ (SpawnObstacleResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SpawnObstacleResponseProto*)[[[SpawnObstacleResponseProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SpawnObstacleResponseProto_Builder*) builder {
  return [[[SpawnObstacleResponseProto_Builder alloc] init] autorelease];
}
+ (SpawnObstacleResponseProto_Builder*) builderWithPrototype:(SpawnObstacleResponseProto*) prototype {
  return [[SpawnObstacleResponseProto builder] mergeFrom:prototype];
}
- (SpawnObstacleResponseProto_Builder*) builder {
  return [SpawnObstacleResponseProto builder];
}
@end

BOOL SpawnObstacleResponseProto_SpawnObstacleStatusIsValidValue(SpawnObstacleResponseProto_SpawnObstacleStatus value) {
  switch (value) {
    case SpawnObstacleResponseProto_SpawnObstacleStatusSuccess:
    case SpawnObstacleResponseProto_SpawnObstacleStatusFailOther:
      return YES;
    default:
      return NO;
  }
}
@interface SpawnObstacleResponseProto_Builder()
@property (retain) SpawnObstacleResponseProto* result;
@end

@implementation SpawnObstacleResponseProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[SpawnObstacleResponseProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (SpawnObstacleResponseProto_Builder*) clear {
  self.result = [[[SpawnObstacleResponseProto alloc] init] autorelease];
  return self;
}
- (SpawnObstacleResponseProto_Builder*) clone {
  return [SpawnObstacleResponseProto builderWithPrototype:result];
}
- (SpawnObstacleResponseProto*) defaultInstance {
  return [SpawnObstacleResponseProto defaultInstance];
}
- (SpawnObstacleResponseProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (SpawnObstacleResponseProto*) buildPartial {
  SpawnObstacleResponseProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (SpawnObstacleResponseProto_Builder*) mergeFrom:(SpawnObstacleResponseProto*) other {
  if (other == [SpawnObstacleResponseProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.mutableSpawnedObstaclesList.count > 0) {
    if (result.mutableSpawnedObstaclesList == nil) {
      result.mutableSpawnedObstaclesList = [NSMutableArray array];
    }
    [result.mutableSpawnedObstaclesList addObjectsFromArray:other.mutableSpawnedObstaclesList];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (SpawnObstacleResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (SpawnObstacleResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        UserObstacleProto_Builder* subBuilder = [UserObstacleProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addSpawnedObstacles:[subBuilder buildPartial]];
        break;
      }
      case 24: {
        int32_t value = [input readEnum];
        if (SpawnObstacleResponseProto_SpawnObstacleStatusIsValidValue(value)) {
          [self setStatus:value];
        } else {
          [unknownFields mergeVarintField:3 value:value];
        }
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (SpawnObstacleResponseProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (SpawnObstacleResponseProto_Builder*) setSenderBuilder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (SpawnObstacleResponseProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (SpawnObstacleResponseProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (NSArray*) spawnedObstaclesList {
  if (result.mutableSpawnedObstaclesList == nil) { return [NSArray array]; }
  return result.mutableSpawnedObstaclesList;
}
- (UserObstacleProto*) spawnedObstaclesAtIndex:(int32_t) index {
  return [result spawnedObstaclesAtIndex:index];
}
- (SpawnObstacleResponseProto_Builder*) replaceSpawnedObstaclesAtIndex:(int32_t) index with:(UserObstacleProto*) value {
  [result.mutableSpawnedObstaclesList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (SpawnObstacleResponseProto_Builder*) addAllSpawnedObstacles:(NSArray*) values {
  if (result.mutableSpawnedObstaclesList == nil) {
    result.mutableSpawnedObstaclesList = [NSMutableArray array];
  }
  [result.mutableSpawnedObstaclesList addObjectsFromArray:values];
  return self;
}
- (SpawnObstacleResponseProto_Builder*) clearSpawnedObstaclesList {
  result.mutableSpawnedObstaclesList = nil;
  return self;
}
- (SpawnObstacleResponseProto_Builder*) addSpawnedObstacles:(UserObstacleProto*) value {
  if (result.mutableSpawnedObstaclesList == nil) {
    result.mutableSpawnedObstaclesList = [NSMutableArray array];
  }
  [result.mutableSpawnedObstaclesList addObject:value];
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (SpawnObstacleResponseProto_SpawnObstacleStatus) status {
  return result.status;
}
- (SpawnObstacleResponseProto_Builder*) setStatus:(SpawnObstacleResponseProto_SpawnObstacleStatus) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (SpawnObstacleResponseProto_Builder*) clearStatus {
  result.hasStatus = NO;
  result.status = SpawnObstacleResponseProto_SpawnObstacleStatusSuccess;
  return self;
}
@end

@interface BeginObstacleRemovalRequestProto ()
@property (retain) MinimumUserProto* sender;
@property int64_t curTime;
@property int32_t gemsSpent;
@property int32_t resourceChange;
@property ResourceType resourceType;
@property int32_t userObstacleId;
@end

@implementation BeginObstacleRemovalRequestProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value {
  hasSender_ = !!value;
}
@synthesize sender;
- (BOOL) hasCurTime {
  return !!hasCurTime_;
}
- (void) setHasCurTime:(BOOL) value {
  hasCurTime_ = !!value;
}
@synthesize curTime;
- (BOOL) hasGemsSpent {
  return !!hasGemsSpent_;
}
- (void) setHasGemsSpent:(BOOL) value {
  hasGemsSpent_ = !!value;
}
@synthesize gemsSpent;
- (BOOL) hasResourceChange {
  return !!hasResourceChange_;
}
- (void) setHasResourceChange:(BOOL) value {
  hasResourceChange_ = !!value;
}
@synthesize resourceChange;
- (BOOL) hasResourceType {
  return !!hasResourceType_;
}
- (void) setHasResourceType:(BOOL) value {
  hasResourceType_ = !!value;
}
@synthesize resourceType;
- (BOOL) hasUserObstacleId {
  return !!hasUserObstacleId_;
}
- (void) setHasUserObstacleId:(BOOL) value {
  hasUserObstacleId_ = !!value;
}
@synthesize userObstacleId;
- (void) dealloc {
  self.sender = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.curTime = 0L;
    self.gemsSpent = 0;
    self.resourceChange = 0;
    self.resourceType = ResourceTypeCash;
    self.userObstacleId = 0;
  }
  return self;
}
static BeginObstacleRemovalRequestProto* defaultBeginObstacleRemovalRequestProtoInstance = nil;
+ (void) initialize {
  if (self == [BeginObstacleRemovalRequestProto class]) {
    defaultBeginObstacleRemovalRequestProtoInstance = [[BeginObstacleRemovalRequestProto alloc] init];
  }
}
+ (BeginObstacleRemovalRequestProto*) defaultInstance {
  return defaultBeginObstacleRemovalRequestProtoInstance;
}
- (BeginObstacleRemovalRequestProto*) defaultInstance {
  return defaultBeginObstacleRemovalRequestProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasCurTime) {
    [output writeInt64:2 value:self.curTime];
  }
  if (self.hasGemsSpent) {
    [output writeInt32:3 value:self.gemsSpent];
  }
  if (self.hasResourceChange) {
    [output writeSInt32:4 value:self.resourceChange];
  }
  if (self.hasResourceType) {
    [output writeEnum:5 value:self.resourceType];
  }
  if (self.hasUserObstacleId) {
    [output writeInt32:6 value:self.userObstacleId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSender) {
    size += computeMessageSize(1, self.sender);
  }
  if (self.hasCurTime) {
    size += computeInt64Size(2, self.curTime);
  }
  if (self.hasGemsSpent) {
    size += computeInt32Size(3, self.gemsSpent);
  }
  if (self.hasResourceChange) {
    size += computeSInt32Size(4, self.resourceChange);
  }
  if (self.hasResourceType) {
    size += computeEnumSize(5, self.resourceType);
  }
  if (self.hasUserObstacleId) {
    size += computeInt32Size(6, self.userObstacleId);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (BeginObstacleRemovalRequestProto*) parseFromData:(NSData*) data {
  return (BeginObstacleRemovalRequestProto*)[[[BeginObstacleRemovalRequestProto builder] mergeFromData:data] build];
}
+ (BeginObstacleRemovalRequestProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BeginObstacleRemovalRequestProto*)[[[BeginObstacleRemovalRequestProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (BeginObstacleRemovalRequestProto*) parseFromInputStream:(NSInputStream*) input {
  return (BeginObstacleRemovalRequestProto*)[[[BeginObstacleRemovalRequestProto builder] mergeFromInputStream:input] build];
}
+ (BeginObstacleRemovalRequestProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BeginObstacleRemovalRequestProto*)[[[BeginObstacleRemovalRequestProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BeginObstacleRemovalRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (BeginObstacleRemovalRequestProto*)[[[BeginObstacleRemovalRequestProto builder] mergeFromCodedInputStream:input] build];
}
+ (BeginObstacleRemovalRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BeginObstacleRemovalRequestProto*)[[[BeginObstacleRemovalRequestProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BeginObstacleRemovalRequestProto_Builder*) builder {
  return [[[BeginObstacleRemovalRequestProto_Builder alloc] init] autorelease];
}
+ (BeginObstacleRemovalRequestProto_Builder*) builderWithPrototype:(BeginObstacleRemovalRequestProto*) prototype {
  return [[BeginObstacleRemovalRequestProto builder] mergeFrom:prototype];
}
- (BeginObstacleRemovalRequestProto_Builder*) builder {
  return [BeginObstacleRemovalRequestProto builder];
}
@end

@interface BeginObstacleRemovalRequestProto_Builder()
@property (retain) BeginObstacleRemovalRequestProto* result;
@end

@implementation BeginObstacleRemovalRequestProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[BeginObstacleRemovalRequestProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (BeginObstacleRemovalRequestProto_Builder*) clear {
  self.result = [[[BeginObstacleRemovalRequestProto alloc] init] autorelease];
  return self;
}
- (BeginObstacleRemovalRequestProto_Builder*) clone {
  return [BeginObstacleRemovalRequestProto builderWithPrototype:result];
}
- (BeginObstacleRemovalRequestProto*) defaultInstance {
  return [BeginObstacleRemovalRequestProto defaultInstance];
}
- (BeginObstacleRemovalRequestProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (BeginObstacleRemovalRequestProto*) buildPartial {
  BeginObstacleRemovalRequestProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (BeginObstacleRemovalRequestProto_Builder*) mergeFrom:(BeginObstacleRemovalRequestProto*) other {
  if (other == [BeginObstacleRemovalRequestProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasCurTime) {
    [self setCurTime:other.curTime];
  }
  if (other.hasGemsSpent) {
    [self setGemsSpent:other.gemsSpent];
  }
  if (other.hasResourceChange) {
    [self setResourceChange:other.resourceChange];
  }
  if (other.hasResourceType) {
    [self setResourceType:other.resourceType];
  }
  if (other.hasUserObstacleId) {
    [self setUserObstacleId:other.userObstacleId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (BeginObstacleRemovalRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (BeginObstacleRemovalRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setCurTime:[input readInt64]];
        break;
      }
      case 24: {
        [self setGemsSpent:[input readInt32]];
        break;
      }
      case 32: {
        [self setResourceChange:[input readSInt32]];
        break;
      }
      case 40: {
        int32_t value = [input readEnum];
        if (ResourceTypeIsValidValue(value)) {
          [self setResourceType:value];
        } else {
          [unknownFields mergeVarintField:5 value:value];
        }
        break;
      }
      case 48: {
        [self setUserObstacleId:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (BeginObstacleRemovalRequestProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (BeginObstacleRemovalRequestProto_Builder*) setSenderBuilder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (BeginObstacleRemovalRequestProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (BeginObstacleRemovalRequestProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasCurTime {
  return result.hasCurTime;
}
- (int64_t) curTime {
  return result.curTime;
}
- (BeginObstacleRemovalRequestProto_Builder*) setCurTime:(int64_t) value {
  result.hasCurTime = YES;
  result.curTime = value;
  return self;
}
- (BeginObstacleRemovalRequestProto_Builder*) clearCurTime {
  result.hasCurTime = NO;
  result.curTime = 0L;
  return self;
}
- (BOOL) hasGemsSpent {
  return result.hasGemsSpent;
}
- (int32_t) gemsSpent {
  return result.gemsSpent;
}
- (BeginObstacleRemovalRequestProto_Builder*) setGemsSpent:(int32_t) value {
  result.hasGemsSpent = YES;
  result.gemsSpent = value;
  return self;
}
- (BeginObstacleRemovalRequestProto_Builder*) clearGemsSpent {
  result.hasGemsSpent = NO;
  result.gemsSpent = 0;
  return self;
}
- (BOOL) hasResourceChange {
  return result.hasResourceChange;
}
- (int32_t) resourceChange {
  return result.resourceChange;
}
- (BeginObstacleRemovalRequestProto_Builder*) setResourceChange:(int32_t) value {
  result.hasResourceChange = YES;
  result.resourceChange = value;
  return self;
}
- (BeginObstacleRemovalRequestProto_Builder*) clearResourceChange {
  result.hasResourceChange = NO;
  result.resourceChange = 0;
  return self;
}
- (BOOL) hasResourceType {
  return result.hasResourceType;
}
- (ResourceType) resourceType {
  return result.resourceType;
}
- (BeginObstacleRemovalRequestProto_Builder*) setResourceType:(ResourceType) value {
  result.hasResourceType = YES;
  result.resourceType = value;
  return self;
}
- (BeginObstacleRemovalRequestProto_Builder*) clearResourceType {
  result.hasResourceType = NO;
  result.resourceType = ResourceTypeCash;
  return self;
}
- (BOOL) hasUserObstacleId {
  return result.hasUserObstacleId;
}
- (int32_t) userObstacleId {
  return result.userObstacleId;
}
- (BeginObstacleRemovalRequestProto_Builder*) setUserObstacleId:(int32_t) value {
  result.hasUserObstacleId = YES;
  result.userObstacleId = value;
  return self;
}
- (BeginObstacleRemovalRequestProto_Builder*) clearUserObstacleId {
  result.hasUserObstacleId = NO;
  result.userObstacleId = 0;
  return self;
}
@end

@interface BeginObstacleRemovalResponseProto ()
@property (retain) MinimumUserProto* sender;
@property BeginObstacleRemovalResponseProto_BeginObstacleRemovalStatus status;
@end

@implementation BeginObstacleRemovalResponseProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value {
  hasSender_ = !!value;
}
@synthesize sender;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value {
  hasStatus_ = !!value;
}
@synthesize status;
- (void) dealloc {
  self.sender = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.status = BeginObstacleRemovalResponseProto_BeginObstacleRemovalStatusSuccess;
  }
  return self;
}
static BeginObstacleRemovalResponseProto* defaultBeginObstacleRemovalResponseProtoInstance = nil;
+ (void) initialize {
  if (self == [BeginObstacleRemovalResponseProto class]) {
    defaultBeginObstacleRemovalResponseProtoInstance = [[BeginObstacleRemovalResponseProto alloc] init];
  }
}
+ (BeginObstacleRemovalResponseProto*) defaultInstance {
  return defaultBeginObstacleRemovalResponseProtoInstance;
}
- (BeginObstacleRemovalResponseProto*) defaultInstance {
  return defaultBeginObstacleRemovalResponseProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasStatus) {
    [output writeEnum:2 value:self.status];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSender) {
    size += computeMessageSize(1, self.sender);
  }
  if (self.hasStatus) {
    size += computeEnumSize(2, self.status);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (BeginObstacleRemovalResponseProto*) parseFromData:(NSData*) data {
  return (BeginObstacleRemovalResponseProto*)[[[BeginObstacleRemovalResponseProto builder] mergeFromData:data] build];
}
+ (BeginObstacleRemovalResponseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BeginObstacleRemovalResponseProto*)[[[BeginObstacleRemovalResponseProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (BeginObstacleRemovalResponseProto*) parseFromInputStream:(NSInputStream*) input {
  return (BeginObstacleRemovalResponseProto*)[[[BeginObstacleRemovalResponseProto builder] mergeFromInputStream:input] build];
}
+ (BeginObstacleRemovalResponseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BeginObstacleRemovalResponseProto*)[[[BeginObstacleRemovalResponseProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BeginObstacleRemovalResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (BeginObstacleRemovalResponseProto*)[[[BeginObstacleRemovalResponseProto builder] mergeFromCodedInputStream:input] build];
}
+ (BeginObstacleRemovalResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BeginObstacleRemovalResponseProto*)[[[BeginObstacleRemovalResponseProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BeginObstacleRemovalResponseProto_Builder*) builder {
  return [[[BeginObstacleRemovalResponseProto_Builder alloc] init] autorelease];
}
+ (BeginObstacleRemovalResponseProto_Builder*) builderWithPrototype:(BeginObstacleRemovalResponseProto*) prototype {
  return [[BeginObstacleRemovalResponseProto builder] mergeFrom:prototype];
}
- (BeginObstacleRemovalResponseProto_Builder*) builder {
  return [BeginObstacleRemovalResponseProto builder];
}
@end

BOOL BeginObstacleRemovalResponseProto_BeginObstacleRemovalStatusIsValidValue(BeginObstacleRemovalResponseProto_BeginObstacleRemovalStatus value) {
  switch (value) {
    case BeginObstacleRemovalResponseProto_BeginObstacleRemovalStatusSuccess:
    case BeginObstacleRemovalResponseProto_BeginObstacleRemovalStatusFailInsufficientGems:
    case BeginObstacleRemovalResponseProto_BeginObstacleRemovalStatusFailInsufficientResource:
    case BeginObstacleRemovalResponseProto_BeginObstacleRemovalStatusFailOther:
      return YES;
    default:
      return NO;
  }
}
@interface BeginObstacleRemovalResponseProto_Builder()
@property (retain) BeginObstacleRemovalResponseProto* result;
@end

@implementation BeginObstacleRemovalResponseProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[BeginObstacleRemovalResponseProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (BeginObstacleRemovalResponseProto_Builder*) clear {
  self.result = [[[BeginObstacleRemovalResponseProto alloc] init] autorelease];
  return self;
}
- (BeginObstacleRemovalResponseProto_Builder*) clone {
  return [BeginObstacleRemovalResponseProto builderWithPrototype:result];
}
- (BeginObstacleRemovalResponseProto*) defaultInstance {
  return [BeginObstacleRemovalResponseProto defaultInstance];
}
- (BeginObstacleRemovalResponseProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (BeginObstacleRemovalResponseProto*) buildPartial {
  BeginObstacleRemovalResponseProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (BeginObstacleRemovalResponseProto_Builder*) mergeFrom:(BeginObstacleRemovalResponseProto*) other {
  if (other == [BeginObstacleRemovalResponseProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (BeginObstacleRemovalResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (BeginObstacleRemovalResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        int32_t value = [input readEnum];
        if (BeginObstacleRemovalResponseProto_BeginObstacleRemovalStatusIsValidValue(value)) {
          [self setStatus:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (BeginObstacleRemovalResponseProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (BeginObstacleRemovalResponseProto_Builder*) setSenderBuilder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (BeginObstacleRemovalResponseProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (BeginObstacleRemovalResponseProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (BeginObstacleRemovalResponseProto_BeginObstacleRemovalStatus) status {
  return result.status;
}
- (BeginObstacleRemovalResponseProto_Builder*) setStatus:(BeginObstacleRemovalResponseProto_BeginObstacleRemovalStatus) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (BeginObstacleRemovalResponseProto_Builder*) clearStatus {
  result.hasStatus = NO;
  result.status = BeginObstacleRemovalResponseProto_BeginObstacleRemovalStatusSuccess;
  return self;
}
@end

@interface ObstacleRemovalCompleteRequestProto ()
@property (retain) MinimumUserProto* sender;
@property int64_t curTime;
@property BOOL speedUp;
@property int32_t gemsSpent;
@property int32_t userObstacleId;
@property BOOL atMaxObstacles;
@end

@implementation ObstacleRemovalCompleteRequestProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value {
  hasSender_ = !!value;
}
@synthesize sender;
- (BOOL) hasCurTime {
  return !!hasCurTime_;
}
- (void) setHasCurTime:(BOOL) value {
  hasCurTime_ = !!value;
}
@synthesize curTime;
- (BOOL) hasSpeedUp {
  return !!hasSpeedUp_;
}
- (void) setHasSpeedUp:(BOOL) value {
  hasSpeedUp_ = !!value;
}
- (BOOL) speedUp {
  return !!speedUp_;
}
- (void) setSpeedUp:(BOOL) value {
  speedUp_ = !!value;
}
- (BOOL) hasGemsSpent {
  return !!hasGemsSpent_;
}
- (void) setHasGemsSpent:(BOOL) value {
  hasGemsSpent_ = !!value;
}
@synthesize gemsSpent;
- (BOOL) hasUserObstacleId {
  return !!hasUserObstacleId_;
}
- (void) setHasUserObstacleId:(BOOL) value {
  hasUserObstacleId_ = !!value;
}
@synthesize userObstacleId;
- (BOOL) hasAtMaxObstacles {
  return !!hasAtMaxObstacles_;
}
- (void) setHasAtMaxObstacles:(BOOL) value {
  hasAtMaxObstacles_ = !!value;
}
- (BOOL) atMaxObstacles {
  return !!atMaxObstacles_;
}
- (void) setAtMaxObstacles:(BOOL) value {
  atMaxObstacles_ = !!value;
}
- (void) dealloc {
  self.sender = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.curTime = 0L;
    self.speedUp = NO;
    self.gemsSpent = 0;
    self.userObstacleId = 0;
    self.atMaxObstacles = NO;
  }
  return self;
}
static ObstacleRemovalCompleteRequestProto* defaultObstacleRemovalCompleteRequestProtoInstance = nil;
+ (void) initialize {
  if (self == [ObstacleRemovalCompleteRequestProto class]) {
    defaultObstacleRemovalCompleteRequestProtoInstance = [[ObstacleRemovalCompleteRequestProto alloc] init];
  }
}
+ (ObstacleRemovalCompleteRequestProto*) defaultInstance {
  return defaultObstacleRemovalCompleteRequestProtoInstance;
}
- (ObstacleRemovalCompleteRequestProto*) defaultInstance {
  return defaultObstacleRemovalCompleteRequestProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasCurTime) {
    [output writeInt64:2 value:self.curTime];
  }
  if (self.hasSpeedUp) {
    [output writeBool:3 value:self.speedUp];
  }
  if (self.hasGemsSpent) {
    [output writeInt32:4 value:self.gemsSpent];
  }
  if (self.hasUserObstacleId) {
    [output writeInt32:5 value:self.userObstacleId];
  }
  if (self.hasAtMaxObstacles) {
    [output writeBool:6 value:self.atMaxObstacles];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSender) {
    size += computeMessageSize(1, self.sender);
  }
  if (self.hasCurTime) {
    size += computeInt64Size(2, self.curTime);
  }
  if (self.hasSpeedUp) {
    size += computeBoolSize(3, self.speedUp);
  }
  if (self.hasGemsSpent) {
    size += computeInt32Size(4, self.gemsSpent);
  }
  if (self.hasUserObstacleId) {
    size += computeInt32Size(5, self.userObstacleId);
  }
  if (self.hasAtMaxObstacles) {
    size += computeBoolSize(6, self.atMaxObstacles);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (ObstacleRemovalCompleteRequestProto*) parseFromData:(NSData*) data {
  return (ObstacleRemovalCompleteRequestProto*)[[[ObstacleRemovalCompleteRequestProto builder] mergeFromData:data] build];
}
+ (ObstacleRemovalCompleteRequestProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ObstacleRemovalCompleteRequestProto*)[[[ObstacleRemovalCompleteRequestProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ObstacleRemovalCompleteRequestProto*) parseFromInputStream:(NSInputStream*) input {
  return (ObstacleRemovalCompleteRequestProto*)[[[ObstacleRemovalCompleteRequestProto builder] mergeFromInputStream:input] build];
}
+ (ObstacleRemovalCompleteRequestProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ObstacleRemovalCompleteRequestProto*)[[[ObstacleRemovalCompleteRequestProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ObstacleRemovalCompleteRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ObstacleRemovalCompleteRequestProto*)[[[ObstacleRemovalCompleteRequestProto builder] mergeFromCodedInputStream:input] build];
}
+ (ObstacleRemovalCompleteRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ObstacleRemovalCompleteRequestProto*)[[[ObstacleRemovalCompleteRequestProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ObstacleRemovalCompleteRequestProto_Builder*) builder {
  return [[[ObstacleRemovalCompleteRequestProto_Builder alloc] init] autorelease];
}
+ (ObstacleRemovalCompleteRequestProto_Builder*) builderWithPrototype:(ObstacleRemovalCompleteRequestProto*) prototype {
  return [[ObstacleRemovalCompleteRequestProto builder] mergeFrom:prototype];
}
- (ObstacleRemovalCompleteRequestProto_Builder*) builder {
  return [ObstacleRemovalCompleteRequestProto builder];
}
@end

@interface ObstacleRemovalCompleteRequestProto_Builder()
@property (retain) ObstacleRemovalCompleteRequestProto* result;
@end

@implementation ObstacleRemovalCompleteRequestProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[ObstacleRemovalCompleteRequestProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (ObstacleRemovalCompleteRequestProto_Builder*) clear {
  self.result = [[[ObstacleRemovalCompleteRequestProto alloc] init] autorelease];
  return self;
}
- (ObstacleRemovalCompleteRequestProto_Builder*) clone {
  return [ObstacleRemovalCompleteRequestProto builderWithPrototype:result];
}
- (ObstacleRemovalCompleteRequestProto*) defaultInstance {
  return [ObstacleRemovalCompleteRequestProto defaultInstance];
}
- (ObstacleRemovalCompleteRequestProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ObstacleRemovalCompleteRequestProto*) buildPartial {
  ObstacleRemovalCompleteRequestProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (ObstacleRemovalCompleteRequestProto_Builder*) mergeFrom:(ObstacleRemovalCompleteRequestProto*) other {
  if (other == [ObstacleRemovalCompleteRequestProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasCurTime) {
    [self setCurTime:other.curTime];
  }
  if (other.hasSpeedUp) {
    [self setSpeedUp:other.speedUp];
  }
  if (other.hasGemsSpent) {
    [self setGemsSpent:other.gemsSpent];
  }
  if (other.hasUserObstacleId) {
    [self setUserObstacleId:other.userObstacleId];
  }
  if (other.hasAtMaxObstacles) {
    [self setAtMaxObstacles:other.atMaxObstacles];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ObstacleRemovalCompleteRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ObstacleRemovalCompleteRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setCurTime:[input readInt64]];
        break;
      }
      case 24: {
        [self setSpeedUp:[input readBool]];
        break;
      }
      case 32: {
        [self setGemsSpent:[input readInt32]];
        break;
      }
      case 40: {
        [self setUserObstacleId:[input readInt32]];
        break;
      }
      case 48: {
        [self setAtMaxObstacles:[input readBool]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (ObstacleRemovalCompleteRequestProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (ObstacleRemovalCompleteRequestProto_Builder*) setSenderBuilder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (ObstacleRemovalCompleteRequestProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (ObstacleRemovalCompleteRequestProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasCurTime {
  return result.hasCurTime;
}
- (int64_t) curTime {
  return result.curTime;
}
- (ObstacleRemovalCompleteRequestProto_Builder*) setCurTime:(int64_t) value {
  result.hasCurTime = YES;
  result.curTime = value;
  return self;
}
- (ObstacleRemovalCompleteRequestProto_Builder*) clearCurTime {
  result.hasCurTime = NO;
  result.curTime = 0L;
  return self;
}
- (BOOL) hasSpeedUp {
  return result.hasSpeedUp;
}
- (BOOL) speedUp {
  return result.speedUp;
}
- (ObstacleRemovalCompleteRequestProto_Builder*) setSpeedUp:(BOOL) value {
  result.hasSpeedUp = YES;
  result.speedUp = value;
  return self;
}
- (ObstacleRemovalCompleteRequestProto_Builder*) clearSpeedUp {
  result.hasSpeedUp = NO;
  result.speedUp = NO;
  return self;
}
- (BOOL) hasGemsSpent {
  return result.hasGemsSpent;
}
- (int32_t) gemsSpent {
  return result.gemsSpent;
}
- (ObstacleRemovalCompleteRequestProto_Builder*) setGemsSpent:(int32_t) value {
  result.hasGemsSpent = YES;
  result.gemsSpent = value;
  return self;
}
- (ObstacleRemovalCompleteRequestProto_Builder*) clearGemsSpent {
  result.hasGemsSpent = NO;
  result.gemsSpent = 0;
  return self;
}
- (BOOL) hasUserObstacleId {
  return result.hasUserObstacleId;
}
- (int32_t) userObstacleId {
  return result.userObstacleId;
}
- (ObstacleRemovalCompleteRequestProto_Builder*) setUserObstacleId:(int32_t) value {
  result.hasUserObstacleId = YES;
  result.userObstacleId = value;
  return self;
}
- (ObstacleRemovalCompleteRequestProto_Builder*) clearUserObstacleId {
  result.hasUserObstacleId = NO;
  result.userObstacleId = 0;
  return self;
}
- (BOOL) hasAtMaxObstacles {
  return result.hasAtMaxObstacles;
}
- (BOOL) atMaxObstacles {
  return result.atMaxObstacles;
}
- (ObstacleRemovalCompleteRequestProto_Builder*) setAtMaxObstacles:(BOOL) value {
  result.hasAtMaxObstacles = YES;
  result.atMaxObstacles = value;
  return self;
}
- (ObstacleRemovalCompleteRequestProto_Builder*) clearAtMaxObstacles {
  result.hasAtMaxObstacles = NO;
  result.atMaxObstacles = NO;
  return self;
}
@end

@interface ObstacleRemovalCompleteResponseProto ()
@property (retain) MinimumUserProto* sender;
@property ObstacleRemovalCompleteResponseProto_ObstacleRemovalCompleteStatus status;
@end

@implementation ObstacleRemovalCompleteResponseProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value {
  hasSender_ = !!value;
}
@synthesize sender;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value {
  hasStatus_ = !!value;
}
@synthesize status;
- (void) dealloc {
  self.sender = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.status = ObstacleRemovalCompleteResponseProto_ObstacleRemovalCompleteStatusSuccess;
  }
  return self;
}
static ObstacleRemovalCompleteResponseProto* defaultObstacleRemovalCompleteResponseProtoInstance = nil;
+ (void) initialize {
  if (self == [ObstacleRemovalCompleteResponseProto class]) {
    defaultObstacleRemovalCompleteResponseProtoInstance = [[ObstacleRemovalCompleteResponseProto alloc] init];
  }
}
+ (ObstacleRemovalCompleteResponseProto*) defaultInstance {
  return defaultObstacleRemovalCompleteResponseProtoInstance;
}
- (ObstacleRemovalCompleteResponseProto*) defaultInstance {
  return defaultObstacleRemovalCompleteResponseProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasStatus) {
    [output writeEnum:2 value:self.status];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSender) {
    size += computeMessageSize(1, self.sender);
  }
  if (self.hasStatus) {
    size += computeEnumSize(2, self.status);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (ObstacleRemovalCompleteResponseProto*) parseFromData:(NSData*) data {
  return (ObstacleRemovalCompleteResponseProto*)[[[ObstacleRemovalCompleteResponseProto builder] mergeFromData:data] build];
}
+ (ObstacleRemovalCompleteResponseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ObstacleRemovalCompleteResponseProto*)[[[ObstacleRemovalCompleteResponseProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ObstacleRemovalCompleteResponseProto*) parseFromInputStream:(NSInputStream*) input {
  return (ObstacleRemovalCompleteResponseProto*)[[[ObstacleRemovalCompleteResponseProto builder] mergeFromInputStream:input] build];
}
+ (ObstacleRemovalCompleteResponseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ObstacleRemovalCompleteResponseProto*)[[[ObstacleRemovalCompleteResponseProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ObstacleRemovalCompleteResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ObstacleRemovalCompleteResponseProto*)[[[ObstacleRemovalCompleteResponseProto builder] mergeFromCodedInputStream:input] build];
}
+ (ObstacleRemovalCompleteResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ObstacleRemovalCompleteResponseProto*)[[[ObstacleRemovalCompleteResponseProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ObstacleRemovalCompleteResponseProto_Builder*) builder {
  return [[[ObstacleRemovalCompleteResponseProto_Builder alloc] init] autorelease];
}
+ (ObstacleRemovalCompleteResponseProto_Builder*) builderWithPrototype:(ObstacleRemovalCompleteResponseProto*) prototype {
  return [[ObstacleRemovalCompleteResponseProto builder] mergeFrom:prototype];
}
- (ObstacleRemovalCompleteResponseProto_Builder*) builder {
  return [ObstacleRemovalCompleteResponseProto builder];
}
@end

BOOL ObstacleRemovalCompleteResponseProto_ObstacleRemovalCompleteStatusIsValidValue(ObstacleRemovalCompleteResponseProto_ObstacleRemovalCompleteStatus value) {
  switch (value) {
    case ObstacleRemovalCompleteResponseProto_ObstacleRemovalCompleteStatusSuccess:
    case ObstacleRemovalCompleteResponseProto_ObstacleRemovalCompleteStatusFailInsufficientGems:
    case ObstacleRemovalCompleteResponseProto_ObstacleRemovalCompleteStatusFailOther:
      return YES;
    default:
      return NO;
  }
}
@interface ObstacleRemovalCompleteResponseProto_Builder()
@property (retain) ObstacleRemovalCompleteResponseProto* result;
@end

@implementation ObstacleRemovalCompleteResponseProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[ObstacleRemovalCompleteResponseProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (ObstacleRemovalCompleteResponseProto_Builder*) clear {
  self.result = [[[ObstacleRemovalCompleteResponseProto alloc] init] autorelease];
  return self;
}
- (ObstacleRemovalCompleteResponseProto_Builder*) clone {
  return [ObstacleRemovalCompleteResponseProto builderWithPrototype:result];
}
- (ObstacleRemovalCompleteResponseProto*) defaultInstance {
  return [ObstacleRemovalCompleteResponseProto defaultInstance];
}
- (ObstacleRemovalCompleteResponseProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ObstacleRemovalCompleteResponseProto*) buildPartial {
  ObstacleRemovalCompleteResponseProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (ObstacleRemovalCompleteResponseProto_Builder*) mergeFrom:(ObstacleRemovalCompleteResponseProto*) other {
  if (other == [ObstacleRemovalCompleteResponseProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ObstacleRemovalCompleteResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ObstacleRemovalCompleteResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        int32_t value = [input readEnum];
        if (ObstacleRemovalCompleteResponseProto_ObstacleRemovalCompleteStatusIsValidValue(value)) {
          [self setStatus:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (ObstacleRemovalCompleteResponseProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (ObstacleRemovalCompleteResponseProto_Builder*) setSenderBuilder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (ObstacleRemovalCompleteResponseProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (ObstacleRemovalCompleteResponseProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (ObstacleRemovalCompleteResponseProto_ObstacleRemovalCompleteStatus) status {
  return result.status;
}
- (ObstacleRemovalCompleteResponseProto_Builder*) setStatus:(ObstacleRemovalCompleteResponseProto_ObstacleRemovalCompleteStatus) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (ObstacleRemovalCompleteResponseProto_Builder*) clearStatus {
  result.hasStatus = NO;
  result.status = ObstacleRemovalCompleteResponseProto_ObstacleRemovalCompleteStatusSuccess;
  return self;
}
@end


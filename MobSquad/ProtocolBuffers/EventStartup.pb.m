// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "EventStartup.pb.h"

@implementation EventStartupRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [EventStartupRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    [AchievementStuffRoot registerAllExtensions:registry];
    [BattleRoot registerAllExtensions:registry];
    [BoosterPackStuffRoot registerAllExtensions:registry];
    [ChatRoot registerAllExtensions:registry];
    [CityRoot registerAllExtensions:registry];
    [ClanRoot registerAllExtensions:registry];
    [InAppPurchaseRoot registerAllExtensions:registry];
    [MiniJobConfigRoot registerAllExtensions:registry];
    [MonsterStuffRoot registerAllExtensions:registry];
    [QuestRoot registerAllExtensions:registry];
    [StaticDataRoot registerAllExtensions:registry];
    [StructureRoot registerAllExtensions:registry];
    [TaskRoot registerAllExtensions:registry];
    [UserRoot registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface StartupRequestProto ()
@property (retain) NSString* udid;
@property Float32 versionNum;
@property (retain) NSString* apsalarId;
@property (retain) NSString* macAddress;
@property (retain) NSString* advertiserId;
@property BOOL isForceTutorial;
@property (retain) NSString* fbId;
@property BOOL isFreshRestart;
@end

@implementation StartupRequestProto

- (BOOL) hasUdid {
  return !!hasUdid_;
}
- (void) setHasUdid:(BOOL) value {
  hasUdid_ = !!value;
}
@synthesize udid;
- (BOOL) hasVersionNum {
  return !!hasVersionNum_;
}
- (void) setHasVersionNum:(BOOL) value {
  hasVersionNum_ = !!value;
}
@synthesize versionNum;
- (BOOL) hasApsalarId {
  return !!hasApsalarId_;
}
- (void) setHasApsalarId:(BOOL) value {
  hasApsalarId_ = !!value;
}
@synthesize apsalarId;
- (BOOL) hasMacAddress {
  return !!hasMacAddress_;
}
- (void) setHasMacAddress:(BOOL) value {
  hasMacAddress_ = !!value;
}
@synthesize macAddress;
- (BOOL) hasAdvertiserId {
  return !!hasAdvertiserId_;
}
- (void) setHasAdvertiserId:(BOOL) value {
  hasAdvertiserId_ = !!value;
}
@synthesize advertiserId;
- (BOOL) hasIsForceTutorial {
  return !!hasIsForceTutorial_;
}
- (void) setHasIsForceTutorial:(BOOL) value {
  hasIsForceTutorial_ = !!value;
}
- (BOOL) isForceTutorial {
  return !!isForceTutorial_;
}
- (void) setIsForceTutorial:(BOOL) value {
  isForceTutorial_ = !!value;
}
- (BOOL) hasFbId {
  return !!hasFbId_;
}
- (void) setHasFbId:(BOOL) value {
  hasFbId_ = !!value;
}
@synthesize fbId;
- (BOOL) hasIsFreshRestart {
  return !!hasIsFreshRestart_;
}
- (void) setHasIsFreshRestart:(BOOL) value {
  hasIsFreshRestart_ = !!value;
}
- (BOOL) isFreshRestart {
  return !!isFreshRestart_;
}
- (void) setIsFreshRestart:(BOOL) value {
  isFreshRestart_ = !!value;
}
- (void) dealloc {
  self.udid = nil;
  self.apsalarId = nil;
  self.macAddress = nil;
  self.advertiserId = nil;
  self.fbId = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.udid = @"";
    self.versionNum = 0;
    self.apsalarId = @"";
    self.macAddress = @"";
    self.advertiserId = @"";
    self.isForceTutorial = NO;
    self.fbId = @"";
    self.isFreshRestart = NO;
  }
  return self;
}
static StartupRequestProto* defaultStartupRequestProtoInstance = nil;
+ (void) initialize {
  if (self == [StartupRequestProto class]) {
    defaultStartupRequestProtoInstance = [[StartupRequestProto alloc] init];
  }
}
+ (StartupRequestProto*) defaultInstance {
  return defaultStartupRequestProtoInstance;
}
- (StartupRequestProto*) defaultInstance {
  return defaultStartupRequestProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUdid) {
    [output writeString:1 value:self.udid];
  }
  if (self.hasVersionNum) {
    [output writeFloat:2 value:self.versionNum];
  }
  if (self.hasApsalarId) {
    [output writeString:3 value:self.apsalarId];
  }
  if (self.hasMacAddress) {
    [output writeString:4 value:self.macAddress];
  }
  if (self.hasAdvertiserId) {
    [output writeString:5 value:self.advertiserId];
  }
  if (self.hasIsForceTutorial) {
    [output writeBool:6 value:self.isForceTutorial];
  }
  if (self.hasFbId) {
    [output writeString:7 value:self.fbId];
  }
  if (self.hasIsFreshRestart) {
    [output writeBool:8 value:self.isFreshRestart];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasUdid) {
    size += computeStringSize(1, self.udid);
  }
  if (self.hasVersionNum) {
    size += computeFloatSize(2, self.versionNum);
  }
  if (self.hasApsalarId) {
    size += computeStringSize(3, self.apsalarId);
  }
  if (self.hasMacAddress) {
    size += computeStringSize(4, self.macAddress);
  }
  if (self.hasAdvertiserId) {
    size += computeStringSize(5, self.advertiserId);
  }
  if (self.hasIsForceTutorial) {
    size += computeBoolSize(6, self.isForceTutorial);
  }
  if (self.hasFbId) {
    size += computeStringSize(7, self.fbId);
  }
  if (self.hasIsFreshRestart) {
    size += computeBoolSize(8, self.isFreshRestart);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (StartupRequestProto*) parseFromData:(NSData*) data {
  return (StartupRequestProto*)[[[StartupRequestProto builder] mergeFromData:data] build];
}
+ (StartupRequestProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (StartupRequestProto*)[[[StartupRequestProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (StartupRequestProto*) parseFromInputStream:(NSInputStream*) input {
  return (StartupRequestProto*)[[[StartupRequestProto builder] mergeFromInputStream:input] build];
}
+ (StartupRequestProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (StartupRequestProto*)[[[StartupRequestProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (StartupRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (StartupRequestProto*)[[[StartupRequestProto builder] mergeFromCodedInputStream:input] build];
}
+ (StartupRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (StartupRequestProto*)[[[StartupRequestProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (StartupRequestProto_Builder*) builder {
  return [[[StartupRequestProto_Builder alloc] init] autorelease];
}
+ (StartupRequestProto_Builder*) builderWithPrototype:(StartupRequestProto*) prototype {
  return [[StartupRequestProto builder] mergeFrom:prototype];
}
- (StartupRequestProto_Builder*) builder {
  return [StartupRequestProto builder];
}
@end

@interface StartupRequestProto_Builder()
@property (retain) StartupRequestProto* result;
@end

@implementation StartupRequestProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[StartupRequestProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (StartupRequestProto_Builder*) clear {
  self.result = [[[StartupRequestProto alloc] init] autorelease];
  return self;
}
- (StartupRequestProto_Builder*) clone {
  return [StartupRequestProto builderWithPrototype:result];
}
- (StartupRequestProto*) defaultInstance {
  return [StartupRequestProto defaultInstance];
}
- (StartupRequestProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (StartupRequestProto*) buildPartial {
  StartupRequestProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (StartupRequestProto_Builder*) mergeFrom:(StartupRequestProto*) other {
  if (other == [StartupRequestProto defaultInstance]) {
    return self;
  }
  if (other.hasUdid) {
    [self setUdid:other.udid];
  }
  if (other.hasVersionNum) {
    [self setVersionNum:other.versionNum];
  }
  if (other.hasApsalarId) {
    [self setApsalarId:other.apsalarId];
  }
  if (other.hasMacAddress) {
    [self setMacAddress:other.macAddress];
  }
  if (other.hasAdvertiserId) {
    [self setAdvertiserId:other.advertiserId];
  }
  if (other.hasIsForceTutorial) {
    [self setIsForceTutorial:other.isForceTutorial];
  }
  if (other.hasFbId) {
    [self setFbId:other.fbId];
  }
  if (other.hasIsFreshRestart) {
    [self setIsFreshRestart:other.isFreshRestart];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (StartupRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (StartupRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setUdid:[input readString]];
        break;
      }
      case 21: {
        [self setVersionNum:[input readFloat]];
        break;
      }
      case 26: {
        [self setApsalarId:[input readString]];
        break;
      }
      case 34: {
        [self setMacAddress:[input readString]];
        break;
      }
      case 42: {
        [self setAdvertiserId:[input readString]];
        break;
      }
      case 48: {
        [self setIsForceTutorial:[input readBool]];
        break;
      }
      case 58: {
        [self setFbId:[input readString]];
        break;
      }
      case 64: {
        [self setIsFreshRestart:[input readBool]];
        break;
      }
    }
  }
}
- (BOOL) hasUdid {
  return result.hasUdid;
}
- (NSString*) udid {
  return result.udid;
}
- (StartupRequestProto_Builder*) setUdid:(NSString*) value {
  result.hasUdid = YES;
  result.udid = value;
  return self;
}
- (StartupRequestProto_Builder*) clearUdid {
  result.hasUdid = NO;
  result.udid = @"";
  return self;
}
- (BOOL) hasVersionNum {
  return result.hasVersionNum;
}
- (Float32) versionNum {
  return result.versionNum;
}
- (StartupRequestProto_Builder*) setVersionNum:(Float32) value {
  result.hasVersionNum = YES;
  result.versionNum = value;
  return self;
}
- (StartupRequestProto_Builder*) clearVersionNum {
  result.hasVersionNum = NO;
  result.versionNum = 0;
  return self;
}
- (BOOL) hasApsalarId {
  return result.hasApsalarId;
}
- (NSString*) apsalarId {
  return result.apsalarId;
}
- (StartupRequestProto_Builder*) setApsalarId:(NSString*) value {
  result.hasApsalarId = YES;
  result.apsalarId = value;
  return self;
}
- (StartupRequestProto_Builder*) clearApsalarId {
  result.hasApsalarId = NO;
  result.apsalarId = @"";
  return self;
}
- (BOOL) hasMacAddress {
  return result.hasMacAddress;
}
- (NSString*) macAddress {
  return result.macAddress;
}
- (StartupRequestProto_Builder*) setMacAddress:(NSString*) value {
  result.hasMacAddress = YES;
  result.macAddress = value;
  return self;
}
- (StartupRequestProto_Builder*) clearMacAddress {
  result.hasMacAddress = NO;
  result.macAddress = @"";
  return self;
}
- (BOOL) hasAdvertiserId {
  return result.hasAdvertiserId;
}
- (NSString*) advertiserId {
  return result.advertiserId;
}
- (StartupRequestProto_Builder*) setAdvertiserId:(NSString*) value {
  result.hasAdvertiserId = YES;
  result.advertiserId = value;
  return self;
}
- (StartupRequestProto_Builder*) clearAdvertiserId {
  result.hasAdvertiserId = NO;
  result.advertiserId = @"";
  return self;
}
- (BOOL) hasIsForceTutorial {
  return result.hasIsForceTutorial;
}
- (BOOL) isForceTutorial {
  return result.isForceTutorial;
}
- (StartupRequestProto_Builder*) setIsForceTutorial:(BOOL) value {
  result.hasIsForceTutorial = YES;
  result.isForceTutorial = value;
  return self;
}
- (StartupRequestProto_Builder*) clearIsForceTutorial {
  result.hasIsForceTutorial = NO;
  result.isForceTutorial = NO;
  return self;
}
- (BOOL) hasFbId {
  return result.hasFbId;
}
- (NSString*) fbId {
  return result.fbId;
}
- (StartupRequestProto_Builder*) setFbId:(NSString*) value {
  result.hasFbId = YES;
  result.fbId = value;
  return self;
}
- (StartupRequestProto_Builder*) clearFbId {
  result.hasFbId = NO;
  result.fbId = @"";
  return self;
}
- (BOOL) hasIsFreshRestart {
  return result.hasIsFreshRestart;
}
- (BOOL) isFreshRestart {
  return result.isFreshRestart;
}
- (StartupRequestProto_Builder*) setIsFreshRestart:(BOOL) value {
  result.hasIsFreshRestart = YES;
  result.isFreshRestart = value;
  return self;
}
- (StartupRequestProto_Builder*) clearIsFreshRestart {
  result.hasIsFreshRestart = NO;
  result.isFreshRestart = NO;
  return self;
}
@end

@interface StartupResponseProto ()
@property int64_t serverTimeMillis;
@property (retain) FullUserProto* sender;
@property StartupResponseProto_StartupStatus startupStatus;
@property StartupResponseProto_UpdateStatus updateStatus;
@property (retain) StartupResponseProto_StartupConstants* startupConstants;
@property (retain) StartupResponseProto_TutorialConstants* tutorialConstants;
@property (retain) NSMutableArray* mutableUserQuestsList;
@property (retain) NSMutableArray* mutableRedeemedQuestIdsList;
@property (retain) NSMutableArray* mutableUserClanInfoList;
@property (retain) NSMutableArray* mutableCompletedTaskIdsList;
@property (retain) NSString* appStoreUrl;
@property (retain) NSString* reviewPageUrl;
@property (retain) NSString* reviewPageConfirmationMessage;
@property BOOL playerHasBoughtInAppPurchase;
@property (retain) NSMutableArray* mutableAttackNotificationsList;
@property (retain) NSMutableArray* mutableReferralNotificationsList;
@property (retain) NSMutableArray* mutableNoticesToPlayersList;
@property (retain) NSMutableArray* mutableGlobalChatsList;
@property (retain) NSMutableArray* mutableClanChatsList;
@property (retain) NSMutableArray* mutablePcppList;
@property (retain) NSMutableArray* mutableUsersMonstersList;
@property (retain) NSMutableArray* mutableMonstersHealingList;
@property (retain) UserEnhancementProto* enhancements;
@property (retain) UserMonsterEvolutionProto* evolution;
@property (retain) NSMutableArray* mutableRareBoosterPurchasesList;
@property (retain) NSString* kabamNaid;
@property (retain) NSMutableArray* mutableInvitesToMeForSlotsList;
@property (retain) NSMutableArray* mutableInvitesFromMeForSlotsList;
@property (retain) StaticDataProto* staticDataStuffProto;
@property (retain) NSMutableArray* mutableTaskIdForCurrentCityBossList;
@property (retain) NSMutableArray* mutableUserEventsList;
@property (retain) PersistentClanEventClanInfoProto* curRaidClanInfo;
@property (retain) NSMutableArray* mutableCurRaidClanUserInfoList;
@property (retain) NSMutableArray* mutableRaidStageHistoryList;
@property (retain) NSMutableArray* mutableRecentNbattlesList;
@property (retain) MinimumUserTaskProto* curTask;
@property (retain) NSMutableArray* mutableCurTaskStagesList;
@property (retain) NSMutableArray* mutableUserAchievementsList;
@property (retain) NSMutableArray* mutableUserMiniJobProtosList;
@end

@implementation StartupResponseProto

- (BOOL) hasServerTimeMillis {
  return !!hasServerTimeMillis_;
}
- (void) setHasServerTimeMillis:(BOOL) value {
  hasServerTimeMillis_ = !!value;
}
@synthesize serverTimeMillis;
- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value {
  hasSender_ = !!value;
}
@synthesize sender;
- (BOOL) hasStartupStatus {
  return !!hasStartupStatus_;
}
- (void) setHasStartupStatus:(BOOL) value {
  hasStartupStatus_ = !!value;
}
@synthesize startupStatus;
- (BOOL) hasUpdateStatus {
  return !!hasUpdateStatus_;
}
- (void) setHasUpdateStatus:(BOOL) value {
  hasUpdateStatus_ = !!value;
}
@synthesize updateStatus;
- (BOOL) hasStartupConstants {
  return !!hasStartupConstants_;
}
- (void) setHasStartupConstants:(BOOL) value {
  hasStartupConstants_ = !!value;
}
@synthesize startupConstants;
- (BOOL) hasTutorialConstants {
  return !!hasTutorialConstants_;
}
- (void) setHasTutorialConstants:(BOOL) value {
  hasTutorialConstants_ = !!value;
}
@synthesize tutorialConstants;
@synthesize mutableUserQuestsList;
@synthesize mutableRedeemedQuestIdsList;
@synthesize mutableUserClanInfoList;
@synthesize mutableCompletedTaskIdsList;
- (BOOL) hasAppStoreUrl {
  return !!hasAppStoreUrl_;
}
- (void) setHasAppStoreUrl:(BOOL) value {
  hasAppStoreUrl_ = !!value;
}
@synthesize appStoreUrl;
- (BOOL) hasReviewPageUrl {
  return !!hasReviewPageUrl_;
}
- (void) setHasReviewPageUrl:(BOOL) value {
  hasReviewPageUrl_ = !!value;
}
@synthesize reviewPageUrl;
- (BOOL) hasReviewPageConfirmationMessage {
  return !!hasReviewPageConfirmationMessage_;
}
- (void) setHasReviewPageConfirmationMessage:(BOOL) value {
  hasReviewPageConfirmationMessage_ = !!value;
}
@synthesize reviewPageConfirmationMessage;
- (BOOL) hasPlayerHasBoughtInAppPurchase {
  return !!hasPlayerHasBoughtInAppPurchase_;
}
- (void) setHasPlayerHasBoughtInAppPurchase:(BOOL) value {
  hasPlayerHasBoughtInAppPurchase_ = !!value;
}
- (BOOL) playerHasBoughtInAppPurchase {
  return !!playerHasBoughtInAppPurchase_;
}
- (void) setPlayerHasBoughtInAppPurchase:(BOOL) value {
  playerHasBoughtInAppPurchase_ = !!value;
}
@synthesize mutableAttackNotificationsList;
@synthesize mutableReferralNotificationsList;
@synthesize mutableNoticesToPlayersList;
@synthesize mutableGlobalChatsList;
@synthesize mutableClanChatsList;
@synthesize mutablePcppList;
@synthesize mutableUsersMonstersList;
@synthesize mutableMonstersHealingList;
- (BOOL) hasEnhancements {
  return !!hasEnhancements_;
}
- (void) setHasEnhancements:(BOOL) value {
  hasEnhancements_ = !!value;
}
@synthesize enhancements;
- (BOOL) hasEvolution {
  return !!hasEvolution_;
}
- (void) setHasEvolution:(BOOL) value {
  hasEvolution_ = !!value;
}
@synthesize evolution;
@synthesize mutableRareBoosterPurchasesList;
- (BOOL) hasKabamNaid {
  return !!hasKabamNaid_;
}
- (void) setHasKabamNaid:(BOOL) value {
  hasKabamNaid_ = !!value;
}
@synthesize kabamNaid;
@synthesize mutableInvitesToMeForSlotsList;
@synthesize mutableInvitesFromMeForSlotsList;
- (BOOL) hasStaticDataStuffProto {
  return !!hasStaticDataStuffProto_;
}
- (void) setHasStaticDataStuffProto:(BOOL) value {
  hasStaticDataStuffProto_ = !!value;
}
@synthesize staticDataStuffProto;
@synthesize mutableTaskIdForCurrentCityBossList;
@synthesize mutableUserEventsList;
- (BOOL) hasCurRaidClanInfo {
  return !!hasCurRaidClanInfo_;
}
- (void) setHasCurRaidClanInfo:(BOOL) value {
  hasCurRaidClanInfo_ = !!value;
}
@synthesize curRaidClanInfo;
@synthesize mutableCurRaidClanUserInfoList;
@synthesize mutableRaidStageHistoryList;
@synthesize mutableRecentNbattlesList;
- (BOOL) hasCurTask {
  return !!hasCurTask_;
}
- (void) setHasCurTask:(BOOL) value {
  hasCurTask_ = !!value;
}
@synthesize curTask;
@synthesize mutableCurTaskStagesList;
@synthesize mutableUserAchievementsList;
@synthesize mutableUserMiniJobProtosList;
- (void) dealloc {
  self.sender = nil;
  self.startupConstants = nil;
  self.tutorialConstants = nil;
  self.mutableUserQuestsList = nil;
  self.mutableRedeemedQuestIdsList = nil;
  self.mutableUserClanInfoList = nil;
  self.mutableCompletedTaskIdsList = nil;
  self.appStoreUrl = nil;
  self.reviewPageUrl = nil;
  self.reviewPageConfirmationMessage = nil;
  self.mutableAttackNotificationsList = nil;
  self.mutableReferralNotificationsList = nil;
  self.mutableNoticesToPlayersList = nil;
  self.mutableGlobalChatsList = nil;
  self.mutableClanChatsList = nil;
  self.mutablePcppList = nil;
  self.mutableUsersMonstersList = nil;
  self.mutableMonstersHealingList = nil;
  self.enhancements = nil;
  self.evolution = nil;
  self.mutableRareBoosterPurchasesList = nil;
  self.kabamNaid = nil;
  self.mutableInvitesToMeForSlotsList = nil;
  self.mutableInvitesFromMeForSlotsList = nil;
  self.staticDataStuffProto = nil;
  self.mutableTaskIdForCurrentCityBossList = nil;
  self.mutableUserEventsList = nil;
  self.curRaidClanInfo = nil;
  self.mutableCurRaidClanUserInfoList = nil;
  self.mutableRaidStageHistoryList = nil;
  self.mutableRecentNbattlesList = nil;
  self.curTask = nil;
  self.mutableCurTaskStagesList = nil;
  self.mutableUserAchievementsList = nil;
  self.mutableUserMiniJobProtosList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.serverTimeMillis = 0L;
    self.sender = [FullUserProto defaultInstance];
    self.startupStatus = StartupResponseProto_StartupStatusUserInDb;
    self.updateStatus = StartupResponseProto_UpdateStatusNoUpdate;
    self.startupConstants = [StartupResponseProto_StartupConstants defaultInstance];
    self.tutorialConstants = [StartupResponseProto_TutorialConstants defaultInstance];
    self.appStoreUrl = @"";
    self.reviewPageUrl = @"";
    self.reviewPageConfirmationMessage = @"";
    self.playerHasBoughtInAppPurchase = NO;
    self.enhancements = [UserEnhancementProto defaultInstance];
    self.evolution = [UserMonsterEvolutionProto defaultInstance];
    self.kabamNaid = @"";
    self.staticDataStuffProto = [StaticDataProto defaultInstance];
    self.curRaidClanInfo = [PersistentClanEventClanInfoProto defaultInstance];
    self.curTask = [MinimumUserTaskProto defaultInstance];
  }
  return self;
}
static StartupResponseProto* defaultStartupResponseProtoInstance = nil;
+ (void) initialize {
  if (self == [StartupResponseProto class]) {
    defaultStartupResponseProtoInstance = [[StartupResponseProto alloc] init];
  }
}
+ (StartupResponseProto*) defaultInstance {
  return defaultStartupResponseProtoInstance;
}
- (StartupResponseProto*) defaultInstance {
  return defaultStartupResponseProtoInstance;
}
- (NSArray*) userQuestsList {
  return mutableUserQuestsList;
}
- (FullUserQuestProto*) userQuestsAtIndex:(int32_t) index {
  id value = [mutableUserQuestsList objectAtIndex:index];
  return value;
}
- (NSArray*) redeemedQuestIdsList {
  return mutableRedeemedQuestIdsList;
}
- (int32_t) redeemedQuestIdsAtIndex:(int32_t) index {
  id value = [mutableRedeemedQuestIdsList objectAtIndex:index];
  return [value intValue];
}
- (NSArray*) userClanInfoList {
  return mutableUserClanInfoList;
}
- (FullUserClanProto*) userClanInfoAtIndex:(int32_t) index {
  id value = [mutableUserClanInfoList objectAtIndex:index];
  return value;
}
- (NSArray*) completedTaskIdsList {
  return mutableCompletedTaskIdsList;
}
- (int32_t) completedTaskIdsAtIndex:(int32_t) index {
  id value = [mutableCompletedTaskIdsList objectAtIndex:index];
  return [value intValue];
}
- (NSArray*) attackNotificationsList {
  return mutableAttackNotificationsList;
}
- (StartupResponseProto_AttackedNotificationProto*) attackNotificationsAtIndex:(int32_t) index {
  id value = [mutableAttackNotificationsList objectAtIndex:index];
  return value;
}
- (NSArray*) referralNotificationsList {
  return mutableReferralNotificationsList;
}
- (StartupResponseProto_ReferralNotificationProto*) referralNotificationsAtIndex:(int32_t) index {
  id value = [mutableReferralNotificationsList objectAtIndex:index];
  return value;
}
- (NSArray*) noticesToPlayersList {
  return mutableNoticesToPlayersList;
}
- (NSString*) noticesToPlayersAtIndex:(int32_t) index {
  id value = [mutableNoticesToPlayersList objectAtIndex:index];
  return value;
}
- (NSArray*) globalChatsList {
  return mutableGlobalChatsList;
}
- (GroupChatMessageProto*) globalChatsAtIndex:(int32_t) index {
  id value = [mutableGlobalChatsList objectAtIndex:index];
  return value;
}
- (NSArray*) clanChatsList {
  return mutableClanChatsList;
}
- (GroupChatMessageProto*) clanChatsAtIndex:(int32_t) index {
  id value = [mutableClanChatsList objectAtIndex:index];
  return value;
}
- (NSArray*) pcppList {
  return mutablePcppList;
}
- (PrivateChatPostProto*) pcppAtIndex:(int32_t) index {
  id value = [mutablePcppList objectAtIndex:index];
  return value;
}
- (NSArray*) usersMonstersList {
  return mutableUsersMonstersList;
}
- (FullUserMonsterProto*) usersMonstersAtIndex:(int32_t) index {
  id value = [mutableUsersMonstersList objectAtIndex:index];
  return value;
}
- (NSArray*) monstersHealingList {
  return mutableMonstersHealingList;
}
- (UserMonsterHealingProto*) monstersHealingAtIndex:(int32_t) index {
  id value = [mutableMonstersHealingList objectAtIndex:index];
  return value;
}
- (NSArray*) rareBoosterPurchasesList {
  return mutableRareBoosterPurchasesList;
}
- (RareBoosterPurchaseProto*) rareBoosterPurchasesAtIndex:(int32_t) index {
  id value = [mutableRareBoosterPurchasesList objectAtIndex:index];
  return value;
}
- (NSArray*) invitesToMeForSlotsList {
  return mutableInvitesToMeForSlotsList;
}
- (UserFacebookInviteForSlotProto*) invitesToMeForSlotsAtIndex:(int32_t) index {
  id value = [mutableInvitesToMeForSlotsList objectAtIndex:index];
  return value;
}
- (NSArray*) invitesFromMeForSlotsList {
  return mutableInvitesFromMeForSlotsList;
}
- (UserFacebookInviteForSlotProto*) invitesFromMeForSlotsAtIndex:(int32_t) index {
  id value = [mutableInvitesFromMeForSlotsList objectAtIndex:index];
  return value;
}
- (NSArray*) taskIdForCurrentCityBossList {
  return mutableTaskIdForCurrentCityBossList;
}
- (int32_t) taskIdForCurrentCityBossAtIndex:(int32_t) index {
  id value = [mutableTaskIdForCurrentCityBossList objectAtIndex:index];
  return [value intValue];
}
- (NSArray*) userEventsList {
  return mutableUserEventsList;
}
- (UserPersistentEventProto*) userEventsAtIndex:(int32_t) index {
  id value = [mutableUserEventsList objectAtIndex:index];
  return value;
}
- (NSArray*) curRaidClanUserInfoList {
  return mutableCurRaidClanUserInfoList;
}
- (PersistentClanEventUserInfoProto*) curRaidClanUserInfoAtIndex:(int32_t) index {
  id value = [mutableCurRaidClanUserInfoList objectAtIndex:index];
  return value;
}
- (NSArray*) raidStageHistoryList {
  return mutableRaidStageHistoryList;
}
- (PersistentClanEventRaidStageHistoryProto*) raidStageHistoryAtIndex:(int32_t) index {
  id value = [mutableRaidStageHistoryList objectAtIndex:index];
  return value;
}
- (NSArray*) recentNbattlesList {
  return mutableRecentNbattlesList;
}
- (PvpHistoryProto*) recentNbattlesAtIndex:(int32_t) index {
  id value = [mutableRecentNbattlesList objectAtIndex:index];
  return value;
}
- (NSArray*) curTaskStagesList {
  return mutableCurTaskStagesList;
}
- (TaskStageProto*) curTaskStagesAtIndex:(int32_t) index {
  id value = [mutableCurTaskStagesList objectAtIndex:index];
  return value;
}
- (NSArray*) userAchievementsList {
  return mutableUserAchievementsList;
}
- (UserAchievementProto*) userAchievementsAtIndex:(int32_t) index {
  id value = [mutableUserAchievementsList objectAtIndex:index];
  return value;
}
- (NSArray*) userMiniJobProtosList {
  return mutableUserMiniJobProtosList;
}
- (UserMiniJobProto*) userMiniJobProtosAtIndex:(int32_t) index {
  id value = [mutableUserMiniJobProtosList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasServerTimeMillis) {
    [output writeInt64:1 value:self.serverTimeMillis];
  }
  if (self.hasSender) {
    [output writeMessage:2 value:self.sender];
  }
  if (self.hasStartupStatus) {
    [output writeEnum:3 value:self.startupStatus];
  }
  if (self.hasUpdateStatus) {
    [output writeEnum:4 value:self.updateStatus];
  }
  if (self.hasStartupConstants) {
    [output writeMessage:5 value:self.startupConstants];
  }
  for (FullUserQuestProto* element in self.userQuestsList) {
    [output writeMessage:6 value:element];
  }
  for (FullUserClanProto* element in self.userClanInfoList) {
    [output writeMessage:7 value:element];
  }
  for (NSNumber* value in self.mutableCompletedTaskIdsList) {
    [output writeInt32:8 value:[value intValue]];
  }
  if (self.hasAppStoreUrl) {
    [output writeString:9 value:self.appStoreUrl];
  }
  if (self.hasReviewPageUrl) {
    [output writeString:10 value:self.reviewPageUrl];
  }
  if (self.hasReviewPageConfirmationMessage) {
    [output writeString:11 value:self.reviewPageConfirmationMessage];
  }
  if (self.hasPlayerHasBoughtInAppPurchase) {
    [output writeBool:12 value:self.playerHasBoughtInAppPurchase];
  }
  for (StartupResponseProto_AttackedNotificationProto* element in self.attackNotificationsList) {
    [output writeMessage:13 value:element];
  }
  for (StartupResponseProto_ReferralNotificationProto* element in self.referralNotificationsList) {
    [output writeMessage:14 value:element];
  }
  for (NSString* element in self.mutableNoticesToPlayersList) {
    [output writeString:15 value:element];
  }
  for (GroupChatMessageProto* element in self.globalChatsList) {
    [output writeMessage:16 value:element];
  }
  for (GroupChatMessageProto* element in self.clanChatsList) {
    [output writeMessage:17 value:element];
  }
  for (PrivateChatPostProto* element in self.pcppList) {
    [output writeMessage:18 value:element];
  }
  for (FullUserMonsterProto* element in self.usersMonstersList) {
    [output writeMessage:19 value:element];
  }
  for (UserMonsterHealingProto* element in self.monstersHealingList) {
    [output writeMessage:20 value:element];
  }
  if (self.hasEnhancements) {
    [output writeMessage:21 value:self.enhancements];
  }
  for (RareBoosterPurchaseProto* element in self.rareBoosterPurchasesList) {
    [output writeMessage:22 value:element];
  }
  if (self.hasKabamNaid) {
    [output writeString:23 value:self.kabamNaid];
  }
  for (UserFacebookInviteForSlotProto* element in self.invitesToMeForSlotsList) {
    [output writeMessage:24 value:element];
  }
  for (UserFacebookInviteForSlotProto* element in self.invitesFromMeForSlotsList) {
    [output writeMessage:25 value:element];
  }
  if (self.hasStaticDataStuffProto) {
    [output writeMessage:26 value:self.staticDataStuffProto];
  }
  for (NSNumber* value in self.mutableRedeemedQuestIdsList) {
    [output writeInt32:27 value:[value intValue]];
  }
  for (NSNumber* value in self.mutableTaskIdForCurrentCityBossList) {
    [output writeInt32:28 value:[value intValue]];
  }
  if (self.hasEvolution) {
    [output writeMessage:29 value:self.evolution];
  }
  for (UserPersistentEventProto* element in self.userEventsList) {
    [output writeMessage:30 value:element];
  }
  if (self.hasCurRaidClanInfo) {
    [output writeMessage:31 value:self.curRaidClanInfo];
  }
  for (PersistentClanEventUserInfoProto* element in self.curRaidClanUserInfoList) {
    [output writeMessage:32 value:element];
  }
  for (PersistentClanEventRaidStageHistoryProto* element in self.raidStageHistoryList) {
    [output writeMessage:33 value:element];
  }
  if (self.hasTutorialConstants) {
    [output writeMessage:34 value:self.tutorialConstants];
  }
  for (PvpHistoryProto* element in self.recentNbattlesList) {
    [output writeMessage:35 value:element];
  }
  if (self.hasCurTask) {
    [output writeMessage:36 value:self.curTask];
  }
  for (TaskStageProto* element in self.curTaskStagesList) {
    [output writeMessage:37 value:element];
  }
  for (UserAchievementProto* element in self.userAchievementsList) {
    [output writeMessage:38 value:element];
  }
  for (UserMiniJobProto* element in self.userMiniJobProtosList) {
    [output writeMessage:39 value:element];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasServerTimeMillis) {
    size += computeInt64Size(1, self.serverTimeMillis);
  }
  if (self.hasSender) {
    size += computeMessageSize(2, self.sender);
  }
  if (self.hasStartupStatus) {
    size += computeEnumSize(3, self.startupStatus);
  }
  if (self.hasUpdateStatus) {
    size += computeEnumSize(4, self.updateStatus);
  }
  if (self.hasStartupConstants) {
    size += computeMessageSize(5, self.startupConstants);
  }
  for (FullUserQuestProto* element in self.userQuestsList) {
    size += computeMessageSize(6, element);
  }
  for (FullUserClanProto* element in self.userClanInfoList) {
    size += computeMessageSize(7, element);
  }
  {
    int32_t dataSize = 0;
    for (NSNumber* value in self.mutableCompletedTaskIdsList) {
      dataSize += computeInt32SizeNoTag([value intValue]);
    }
    size += dataSize;
    size += 1 * self.mutableCompletedTaskIdsList.count;
  }
  if (self.hasAppStoreUrl) {
    size += computeStringSize(9, self.appStoreUrl);
  }
  if (self.hasReviewPageUrl) {
    size += computeStringSize(10, self.reviewPageUrl);
  }
  if (self.hasReviewPageConfirmationMessage) {
    size += computeStringSize(11, self.reviewPageConfirmationMessage);
  }
  if (self.hasPlayerHasBoughtInAppPurchase) {
    size += computeBoolSize(12, self.playerHasBoughtInAppPurchase);
  }
  for (StartupResponseProto_AttackedNotificationProto* element in self.attackNotificationsList) {
    size += computeMessageSize(13, element);
  }
  for (StartupResponseProto_ReferralNotificationProto* element in self.referralNotificationsList) {
    size += computeMessageSize(14, element);
  }
  {
    int32_t dataSize = 0;
    for (NSString* element in self.mutableNoticesToPlayersList) {
      dataSize += computeStringSizeNoTag(element);
    }
    size += dataSize;
    size += 1 * self.mutableNoticesToPlayersList.count;
  }
  for (GroupChatMessageProto* element in self.globalChatsList) {
    size += computeMessageSize(16, element);
  }
  for (GroupChatMessageProto* element in self.clanChatsList) {
    size += computeMessageSize(17, element);
  }
  for (PrivateChatPostProto* element in self.pcppList) {
    size += computeMessageSize(18, element);
  }
  for (FullUserMonsterProto* element in self.usersMonstersList) {
    size += computeMessageSize(19, element);
  }
  for (UserMonsterHealingProto* element in self.monstersHealingList) {
    size += computeMessageSize(20, element);
  }
  if (self.hasEnhancements) {
    size += computeMessageSize(21, self.enhancements);
  }
  for (RareBoosterPurchaseProto* element in self.rareBoosterPurchasesList) {
    size += computeMessageSize(22, element);
  }
  if (self.hasKabamNaid) {
    size += computeStringSize(23, self.kabamNaid);
  }
  for (UserFacebookInviteForSlotProto* element in self.invitesToMeForSlotsList) {
    size += computeMessageSize(24, element);
  }
  for (UserFacebookInviteForSlotProto* element in self.invitesFromMeForSlotsList) {
    size += computeMessageSize(25, element);
  }
  if (self.hasStaticDataStuffProto) {
    size += computeMessageSize(26, self.staticDataStuffProto);
  }
  {
    int32_t dataSize = 0;
    for (NSNumber* value in self.mutableRedeemedQuestIdsList) {
      dataSize += computeInt32SizeNoTag([value intValue]);
    }
    size += dataSize;
    size += 2 * self.mutableRedeemedQuestIdsList.count;
  }
  {
    int32_t dataSize = 0;
    for (NSNumber* value in self.mutableTaskIdForCurrentCityBossList) {
      dataSize += computeInt32SizeNoTag([value intValue]);
    }
    size += dataSize;
    size += 2 * self.mutableTaskIdForCurrentCityBossList.count;
  }
  if (self.hasEvolution) {
    size += computeMessageSize(29, self.evolution);
  }
  for (UserPersistentEventProto* element in self.userEventsList) {
    size += computeMessageSize(30, element);
  }
  if (self.hasCurRaidClanInfo) {
    size += computeMessageSize(31, self.curRaidClanInfo);
  }
  for (PersistentClanEventUserInfoProto* element in self.curRaidClanUserInfoList) {
    size += computeMessageSize(32, element);
  }
  for (PersistentClanEventRaidStageHistoryProto* element in self.raidStageHistoryList) {
    size += computeMessageSize(33, element);
  }
  if (self.hasTutorialConstants) {
    size += computeMessageSize(34, self.tutorialConstants);
  }
  for (PvpHistoryProto* element in self.recentNbattlesList) {
    size += computeMessageSize(35, element);
  }
  if (self.hasCurTask) {
    size += computeMessageSize(36, self.curTask);
  }
  for (TaskStageProto* element in self.curTaskStagesList) {
    size += computeMessageSize(37, element);
  }
  for (UserAchievementProto* element in self.userAchievementsList) {
    size += computeMessageSize(38, element);
  }
  for (UserMiniJobProto* element in self.userMiniJobProtosList) {
    size += computeMessageSize(39, element);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (StartupResponseProto*) parseFromData:(NSData*) data {
  return (StartupResponseProto*)[[[StartupResponseProto builder] mergeFromData:data] build];
}
+ (StartupResponseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (StartupResponseProto*)[[[StartupResponseProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (StartupResponseProto*) parseFromInputStream:(NSInputStream*) input {
  return (StartupResponseProto*)[[[StartupResponseProto builder] mergeFromInputStream:input] build];
}
+ (StartupResponseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (StartupResponseProto*)[[[StartupResponseProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (StartupResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (StartupResponseProto*)[[[StartupResponseProto builder] mergeFromCodedInputStream:input] build];
}
+ (StartupResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (StartupResponseProto*)[[[StartupResponseProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (StartupResponseProto_Builder*) builder {
  return [[[StartupResponseProto_Builder alloc] init] autorelease];
}
+ (StartupResponseProto_Builder*) builderWithPrototype:(StartupResponseProto*) prototype {
  return [[StartupResponseProto builder] mergeFrom:prototype];
}
- (StartupResponseProto_Builder*) builder {
  return [StartupResponseProto builder];
}
@end

BOOL StartupResponseProto_UpdateStatusIsValidValue(StartupResponseProto_UpdateStatus value) {
  switch (value) {
    case StartupResponseProto_UpdateStatusNoUpdate:
    case StartupResponseProto_UpdateStatusMinorUpdate:
    case StartupResponseProto_UpdateStatusMajorUpdate:
      return YES;
    default:
      return NO;
  }
}
BOOL StartupResponseProto_StartupStatusIsValidValue(StartupResponseProto_StartupStatus value) {
  switch (value) {
    case StartupResponseProto_StartupStatusUserInDb:
    case StartupResponseProto_StartupStatusUserNotInDb:
    case StartupResponseProto_StartupStatusServerInMaintenance:
      return YES;
    default:
      return NO;
  }
}
@interface StartupResponseProto_AttackedNotificationProto ()
@property (retain) MinimumUserProto* attacker;
@property int64_t battleCompleteTime;
@property int32_t coinsStolen;
@end

@implementation StartupResponseProto_AttackedNotificationProto

- (BOOL) hasAttacker {
  return !!hasAttacker_;
}
- (void) setHasAttacker:(BOOL) value {
  hasAttacker_ = !!value;
}
@synthesize attacker;
- (BOOL) hasBattleCompleteTime {
  return !!hasBattleCompleteTime_;
}
- (void) setHasBattleCompleteTime:(BOOL) value {
  hasBattleCompleteTime_ = !!value;
}
@synthesize battleCompleteTime;
- (BOOL) hasCoinsStolen {
  return !!hasCoinsStolen_;
}
- (void) setHasCoinsStolen:(BOOL) value {
  hasCoinsStolen_ = !!value;
}
@synthesize coinsStolen;
- (void) dealloc {
  self.attacker = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.attacker = [MinimumUserProto defaultInstance];
    self.battleCompleteTime = 0L;
    self.coinsStolen = 0;
  }
  return self;
}
static StartupResponseProto_AttackedNotificationProto* defaultStartupResponseProto_AttackedNotificationProtoInstance = nil;
+ (void) initialize {
  if (self == [StartupResponseProto_AttackedNotificationProto class]) {
    defaultStartupResponseProto_AttackedNotificationProtoInstance = [[StartupResponseProto_AttackedNotificationProto alloc] init];
  }
}
+ (StartupResponseProto_AttackedNotificationProto*) defaultInstance {
  return defaultStartupResponseProto_AttackedNotificationProtoInstance;
}
- (StartupResponseProto_AttackedNotificationProto*) defaultInstance {
  return defaultStartupResponseProto_AttackedNotificationProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasAttacker) {
    [output writeMessage:1 value:self.attacker];
  }
  if (self.hasBattleCompleteTime) {
    [output writeInt64:2 value:self.battleCompleteTime];
  }
  if (self.hasCoinsStolen) {
    [output writeInt32:3 value:self.coinsStolen];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasAttacker) {
    size += computeMessageSize(1, self.attacker);
  }
  if (self.hasBattleCompleteTime) {
    size += computeInt64Size(2, self.battleCompleteTime);
  }
  if (self.hasCoinsStolen) {
    size += computeInt32Size(3, self.coinsStolen);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (StartupResponseProto_AttackedNotificationProto*) parseFromData:(NSData*) data {
  return (StartupResponseProto_AttackedNotificationProto*)[[[StartupResponseProto_AttackedNotificationProto builder] mergeFromData:data] build];
}
+ (StartupResponseProto_AttackedNotificationProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (StartupResponseProto_AttackedNotificationProto*)[[[StartupResponseProto_AttackedNotificationProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (StartupResponseProto_AttackedNotificationProto*) parseFromInputStream:(NSInputStream*) input {
  return (StartupResponseProto_AttackedNotificationProto*)[[[StartupResponseProto_AttackedNotificationProto builder] mergeFromInputStream:input] build];
}
+ (StartupResponseProto_AttackedNotificationProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (StartupResponseProto_AttackedNotificationProto*)[[[StartupResponseProto_AttackedNotificationProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (StartupResponseProto_AttackedNotificationProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (StartupResponseProto_AttackedNotificationProto*)[[[StartupResponseProto_AttackedNotificationProto builder] mergeFromCodedInputStream:input] build];
}
+ (StartupResponseProto_AttackedNotificationProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (StartupResponseProto_AttackedNotificationProto*)[[[StartupResponseProto_AttackedNotificationProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (StartupResponseProto_AttackedNotificationProto_Builder*) builder {
  return [[[StartupResponseProto_AttackedNotificationProto_Builder alloc] init] autorelease];
}
+ (StartupResponseProto_AttackedNotificationProto_Builder*) builderWithPrototype:(StartupResponseProto_AttackedNotificationProto*) prototype {
  return [[StartupResponseProto_AttackedNotificationProto builder] mergeFrom:prototype];
}
- (StartupResponseProto_AttackedNotificationProto_Builder*) builder {
  return [StartupResponseProto_AttackedNotificationProto builder];
}
@end

@interface StartupResponseProto_AttackedNotificationProto_Builder()
@property (retain) StartupResponseProto_AttackedNotificationProto* result;
@end

@implementation StartupResponseProto_AttackedNotificationProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[StartupResponseProto_AttackedNotificationProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (StartupResponseProto_AttackedNotificationProto_Builder*) clear {
  self.result = [[[StartupResponseProto_AttackedNotificationProto alloc] init] autorelease];
  return self;
}
- (StartupResponseProto_AttackedNotificationProto_Builder*) clone {
  return [StartupResponseProto_AttackedNotificationProto builderWithPrototype:result];
}
- (StartupResponseProto_AttackedNotificationProto*) defaultInstance {
  return [StartupResponseProto_AttackedNotificationProto defaultInstance];
}
- (StartupResponseProto_AttackedNotificationProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (StartupResponseProto_AttackedNotificationProto*) buildPartial {
  StartupResponseProto_AttackedNotificationProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (StartupResponseProto_AttackedNotificationProto_Builder*) mergeFrom:(StartupResponseProto_AttackedNotificationProto*) other {
  if (other == [StartupResponseProto_AttackedNotificationProto defaultInstance]) {
    return self;
  }
  if (other.hasAttacker) {
    [self mergeAttacker:other.attacker];
  }
  if (other.hasBattleCompleteTime) {
    [self setBattleCompleteTime:other.battleCompleteTime];
  }
  if (other.hasCoinsStolen) {
    [self setCoinsStolen:other.coinsStolen];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (StartupResponseProto_AttackedNotificationProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (StartupResponseProto_AttackedNotificationProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasAttacker) {
          [subBuilder mergeFrom:self.attacker];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setAttacker:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setBattleCompleteTime:[input readInt64]];
        break;
      }
      case 24: {
        [self setCoinsStolen:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasAttacker {
  return result.hasAttacker;
}
- (MinimumUserProto*) attacker {
  return result.attacker;
}
- (StartupResponseProto_AttackedNotificationProto_Builder*) setAttacker:(MinimumUserProto*) value {
  result.hasAttacker = YES;
  result.attacker = value;
  return self;
}
- (StartupResponseProto_AttackedNotificationProto_Builder*) setAttackerBuilder:(MinimumUserProto_Builder*) builderForValue {
  return [self setAttacker:[builderForValue build]];
}
- (StartupResponseProto_AttackedNotificationProto_Builder*) mergeAttacker:(MinimumUserProto*) value {
  if (result.hasAttacker &&
      result.attacker != [MinimumUserProto defaultInstance]) {
    result.attacker =
      [[[MinimumUserProto builderWithPrototype:result.attacker] mergeFrom:value] buildPartial];
  } else {
    result.attacker = value;
  }
  result.hasAttacker = YES;
  return self;
}
- (StartupResponseProto_AttackedNotificationProto_Builder*) clearAttacker {
  result.hasAttacker = NO;
  result.attacker = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasBattleCompleteTime {
  return result.hasBattleCompleteTime;
}
- (int64_t) battleCompleteTime {
  return result.battleCompleteTime;
}
- (StartupResponseProto_AttackedNotificationProto_Builder*) setBattleCompleteTime:(int64_t) value {
  result.hasBattleCompleteTime = YES;
  result.battleCompleteTime = value;
  return self;
}
- (StartupResponseProto_AttackedNotificationProto_Builder*) clearBattleCompleteTime {
  result.hasBattleCompleteTime = NO;
  result.battleCompleteTime = 0L;
  return self;
}
- (BOOL) hasCoinsStolen {
  return result.hasCoinsStolen;
}
- (int32_t) coinsStolen {
  return result.coinsStolen;
}
- (StartupResponseProto_AttackedNotificationProto_Builder*) setCoinsStolen:(int32_t) value {
  result.hasCoinsStolen = YES;
  result.coinsStolen = value;
  return self;
}
- (StartupResponseProto_AttackedNotificationProto_Builder*) clearCoinsStolen {
  result.hasCoinsStolen = NO;
  result.coinsStolen = 0;
  return self;
}
@end

@interface StartupResponseProto_ReferralNotificationProto ()
@property (retain) MinimumUserProto* referred;
@property int64_t recruitTime;
@property int32_t coinsGivenToReferrer;
@end

@implementation StartupResponseProto_ReferralNotificationProto

- (BOOL) hasReferred {
  return !!hasReferred_;
}
- (void) setHasReferred:(BOOL) value {
  hasReferred_ = !!value;
}
@synthesize referred;
- (BOOL) hasRecruitTime {
  return !!hasRecruitTime_;
}
- (void) setHasRecruitTime:(BOOL) value {
  hasRecruitTime_ = !!value;
}
@synthesize recruitTime;
- (BOOL) hasCoinsGivenToReferrer {
  return !!hasCoinsGivenToReferrer_;
}
- (void) setHasCoinsGivenToReferrer:(BOOL) value {
  hasCoinsGivenToReferrer_ = !!value;
}
@synthesize coinsGivenToReferrer;
- (void) dealloc {
  self.referred = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.referred = [MinimumUserProto defaultInstance];
    self.recruitTime = 0L;
    self.coinsGivenToReferrer = 0;
  }
  return self;
}
static StartupResponseProto_ReferralNotificationProto* defaultStartupResponseProto_ReferralNotificationProtoInstance = nil;
+ (void) initialize {
  if (self == [StartupResponseProto_ReferralNotificationProto class]) {
    defaultStartupResponseProto_ReferralNotificationProtoInstance = [[StartupResponseProto_ReferralNotificationProto alloc] init];
  }
}
+ (StartupResponseProto_ReferralNotificationProto*) defaultInstance {
  return defaultStartupResponseProto_ReferralNotificationProtoInstance;
}
- (StartupResponseProto_ReferralNotificationProto*) defaultInstance {
  return defaultStartupResponseProto_ReferralNotificationProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasReferred) {
    [output writeMessage:1 value:self.referred];
  }
  if (self.hasRecruitTime) {
    [output writeInt64:2 value:self.recruitTime];
  }
  if (self.hasCoinsGivenToReferrer) {
    [output writeInt32:3 value:self.coinsGivenToReferrer];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasReferred) {
    size += computeMessageSize(1, self.referred);
  }
  if (self.hasRecruitTime) {
    size += computeInt64Size(2, self.recruitTime);
  }
  if (self.hasCoinsGivenToReferrer) {
    size += computeInt32Size(3, self.coinsGivenToReferrer);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (StartupResponseProto_ReferralNotificationProto*) parseFromData:(NSData*) data {
  return (StartupResponseProto_ReferralNotificationProto*)[[[StartupResponseProto_ReferralNotificationProto builder] mergeFromData:data] build];
}
+ (StartupResponseProto_ReferralNotificationProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (StartupResponseProto_ReferralNotificationProto*)[[[StartupResponseProto_ReferralNotificationProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (StartupResponseProto_ReferralNotificationProto*) parseFromInputStream:(NSInputStream*) input {
  return (StartupResponseProto_ReferralNotificationProto*)[[[StartupResponseProto_ReferralNotificationProto builder] mergeFromInputStream:input] build];
}
+ (StartupResponseProto_ReferralNotificationProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (StartupResponseProto_ReferralNotificationProto*)[[[StartupResponseProto_ReferralNotificationProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (StartupResponseProto_ReferralNotificationProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (StartupResponseProto_ReferralNotificationProto*)[[[StartupResponseProto_ReferralNotificationProto builder] mergeFromCodedInputStream:input] build];
}
+ (StartupResponseProto_ReferralNotificationProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (StartupResponseProto_ReferralNotificationProto*)[[[StartupResponseProto_ReferralNotificationProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (StartupResponseProto_ReferralNotificationProto_Builder*) builder {
  return [[[StartupResponseProto_ReferralNotificationProto_Builder alloc] init] autorelease];
}
+ (StartupResponseProto_ReferralNotificationProto_Builder*) builderWithPrototype:(StartupResponseProto_ReferralNotificationProto*) prototype {
  return [[StartupResponseProto_ReferralNotificationProto builder] mergeFrom:prototype];
}
- (StartupResponseProto_ReferralNotificationProto_Builder*) builder {
  return [StartupResponseProto_ReferralNotificationProto builder];
}
@end

@interface StartupResponseProto_ReferralNotificationProto_Builder()
@property (retain) StartupResponseProto_ReferralNotificationProto* result;
@end

@implementation StartupResponseProto_ReferralNotificationProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[StartupResponseProto_ReferralNotificationProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (StartupResponseProto_ReferralNotificationProto_Builder*) clear {
  self.result = [[[StartupResponseProto_ReferralNotificationProto alloc] init] autorelease];
  return self;
}
- (StartupResponseProto_ReferralNotificationProto_Builder*) clone {
  return [StartupResponseProto_ReferralNotificationProto builderWithPrototype:result];
}
- (StartupResponseProto_ReferralNotificationProto*) defaultInstance {
  return [StartupResponseProto_ReferralNotificationProto defaultInstance];
}
- (StartupResponseProto_ReferralNotificationProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (StartupResponseProto_ReferralNotificationProto*) buildPartial {
  StartupResponseProto_ReferralNotificationProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (StartupResponseProto_ReferralNotificationProto_Builder*) mergeFrom:(StartupResponseProto_ReferralNotificationProto*) other {
  if (other == [StartupResponseProto_ReferralNotificationProto defaultInstance]) {
    return self;
  }
  if (other.hasReferred) {
    [self mergeReferred:other.referred];
  }
  if (other.hasRecruitTime) {
    [self setRecruitTime:other.recruitTime];
  }
  if (other.hasCoinsGivenToReferrer) {
    [self setCoinsGivenToReferrer:other.coinsGivenToReferrer];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (StartupResponseProto_ReferralNotificationProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (StartupResponseProto_ReferralNotificationProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasReferred) {
          [subBuilder mergeFrom:self.referred];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setReferred:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setRecruitTime:[input readInt64]];
        break;
      }
      case 24: {
        [self setCoinsGivenToReferrer:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasReferred {
  return result.hasReferred;
}
- (MinimumUserProto*) referred {
  return result.referred;
}
- (StartupResponseProto_ReferralNotificationProto_Builder*) setReferred:(MinimumUserProto*) value {
  result.hasReferred = YES;
  result.referred = value;
  return self;
}
- (StartupResponseProto_ReferralNotificationProto_Builder*) setReferredBuilder:(MinimumUserProto_Builder*) builderForValue {
  return [self setReferred:[builderForValue build]];
}
- (StartupResponseProto_ReferralNotificationProto_Builder*) mergeReferred:(MinimumUserProto*) value {
  if (result.hasReferred &&
      result.referred != [MinimumUserProto defaultInstance]) {
    result.referred =
      [[[MinimumUserProto builderWithPrototype:result.referred] mergeFrom:value] buildPartial];
  } else {
    result.referred = value;
  }
  result.hasReferred = YES;
  return self;
}
- (StartupResponseProto_ReferralNotificationProto_Builder*) clearReferred {
  result.hasReferred = NO;
  result.referred = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasRecruitTime {
  return result.hasRecruitTime;
}
- (int64_t) recruitTime {
  return result.recruitTime;
}
- (StartupResponseProto_ReferralNotificationProto_Builder*) setRecruitTime:(int64_t) value {
  result.hasRecruitTime = YES;
  result.recruitTime = value;
  return self;
}
- (StartupResponseProto_ReferralNotificationProto_Builder*) clearRecruitTime {
  result.hasRecruitTime = NO;
  result.recruitTime = 0L;
  return self;
}
- (BOOL) hasCoinsGivenToReferrer {
  return result.hasCoinsGivenToReferrer;
}
- (int32_t) coinsGivenToReferrer {
  return result.coinsGivenToReferrer;
}
- (StartupResponseProto_ReferralNotificationProto_Builder*) setCoinsGivenToReferrer:(int32_t) value {
  result.hasCoinsGivenToReferrer = YES;
  result.coinsGivenToReferrer = value;
  return self;
}
- (StartupResponseProto_ReferralNotificationProto_Builder*) clearCoinsGivenToReferrer {
  result.hasCoinsGivenToReferrer = NO;
  result.coinsGivenToReferrer = 0;
  return self;
}
@end

@interface StartupResponseProto_StartupConstants ()
@property (retain) NSMutableArray* mutableInAppPurchasePackagesList;
@property int32_t maxLevelForUser;
@property int32_t maxNumOfSingleStruct;
@property (retain) NSMutableArray* mutableAnimatedSpriteOffsetsList;
@property int32_t minNameLength;
@property int32_t maxNameLength;
@property int32_t maxLengthOfChatString;
@property (retain) StartupResponseProto_StartupConstants_ClanConstants* clanConstants;
@property (retain) StartupResponseProto_StartupConstants_DownloadableNibConstants* downloadableNibConstants;
@property int32_t numHoursBeforeReshowingGoldSale;
@property int32_t levelToShowRateUsPopup;
@property (retain) StartupResponseProto_StartupConstants_TournamentConstants* touramentConstants;
@property int32_t fbConnectRewardDiamonds;
@property (retain) NSString* faqFileName;
@property (retain) MinimumUserProto* adminChatUserProto;
@property int32_t numBeginnerSalesAllowed;
@property (retain) StartupResponseProto_StartupConstants_UserMonsterConstants* userMonsterConstants;
@property (retain) StartupResponseProto_StartupConstants_MonsterConstants* monsterConstants;
@property Float32 minutesPerGem;
@property int32_t pvpRequiredMinLvl;
@property Float32 gemsPerResource;
@property Float32 continueBattleGemCostMultiplier;
@property BOOL addAllFbFriends;
@property (retain) StartupResponseProto_StartupConstants_MiniTutorialConstants* miniTuts;
@property int32_t maxObstacles;
@property int32_t minutesPerObstacle;
@end

@implementation StartupResponseProto_StartupConstants

@synthesize mutableInAppPurchasePackagesList;
- (BOOL) hasMaxLevelForUser {
  return !!hasMaxLevelForUser_;
}
- (void) setHasMaxLevelForUser:(BOOL) value {
  hasMaxLevelForUser_ = !!value;
}
@synthesize maxLevelForUser;
- (BOOL) hasMaxNumOfSingleStruct {
  return !!hasMaxNumOfSingleStruct_;
}
- (void) setHasMaxNumOfSingleStruct:(BOOL) value {
  hasMaxNumOfSingleStruct_ = !!value;
}
@synthesize maxNumOfSingleStruct;
@synthesize mutableAnimatedSpriteOffsetsList;
- (BOOL) hasMinNameLength {
  return !!hasMinNameLength_;
}
- (void) setHasMinNameLength:(BOOL) value {
  hasMinNameLength_ = !!value;
}
@synthesize minNameLength;
- (BOOL) hasMaxNameLength {
  return !!hasMaxNameLength_;
}
- (void) setHasMaxNameLength:(BOOL) value {
  hasMaxNameLength_ = !!value;
}
@synthesize maxNameLength;
- (BOOL) hasMaxLengthOfChatString {
  return !!hasMaxLengthOfChatString_;
}
- (void) setHasMaxLengthOfChatString:(BOOL) value {
  hasMaxLengthOfChatString_ = !!value;
}
@synthesize maxLengthOfChatString;
- (BOOL) hasClanConstants {
  return !!hasClanConstants_;
}
- (void) setHasClanConstants:(BOOL) value {
  hasClanConstants_ = !!value;
}
@synthesize clanConstants;
- (BOOL) hasDownloadableNibConstants {
  return !!hasDownloadableNibConstants_;
}
- (void) setHasDownloadableNibConstants:(BOOL) value {
  hasDownloadableNibConstants_ = !!value;
}
@synthesize downloadableNibConstants;
- (BOOL) hasNumHoursBeforeReshowingGoldSale {
  return !!hasNumHoursBeforeReshowingGoldSale_;
}
- (void) setHasNumHoursBeforeReshowingGoldSale:(BOOL) value {
  hasNumHoursBeforeReshowingGoldSale_ = !!value;
}
@synthesize numHoursBeforeReshowingGoldSale;
- (BOOL) hasLevelToShowRateUsPopup {
  return !!hasLevelToShowRateUsPopup_;
}
- (void) setHasLevelToShowRateUsPopup:(BOOL) value {
  hasLevelToShowRateUsPopup_ = !!value;
}
@synthesize levelToShowRateUsPopup;
- (BOOL) hasTouramentConstants {
  return !!hasTouramentConstants_;
}
- (void) setHasTouramentConstants:(BOOL) value {
  hasTouramentConstants_ = !!value;
}
@synthesize touramentConstants;
- (BOOL) hasFbConnectRewardDiamonds {
  return !!hasFbConnectRewardDiamonds_;
}
- (void) setHasFbConnectRewardDiamonds:(BOOL) value {
  hasFbConnectRewardDiamonds_ = !!value;
}
@synthesize fbConnectRewardDiamonds;
- (BOOL) hasFaqFileName {
  return !!hasFaqFileName_;
}
- (void) setHasFaqFileName:(BOOL) value {
  hasFaqFileName_ = !!value;
}
@synthesize faqFileName;
- (BOOL) hasAdminChatUserProto {
  return !!hasAdminChatUserProto_;
}
- (void) setHasAdminChatUserProto:(BOOL) value {
  hasAdminChatUserProto_ = !!value;
}
@synthesize adminChatUserProto;
- (BOOL) hasNumBeginnerSalesAllowed {
  return !!hasNumBeginnerSalesAllowed_;
}
- (void) setHasNumBeginnerSalesAllowed:(BOOL) value {
  hasNumBeginnerSalesAllowed_ = !!value;
}
@synthesize numBeginnerSalesAllowed;
- (BOOL) hasUserMonsterConstants {
  return !!hasUserMonsterConstants_;
}
- (void) setHasUserMonsterConstants:(BOOL) value {
  hasUserMonsterConstants_ = !!value;
}
@synthesize userMonsterConstants;
- (BOOL) hasMonsterConstants {
  return !!hasMonsterConstants_;
}
- (void) setHasMonsterConstants:(BOOL) value {
  hasMonsterConstants_ = !!value;
}
@synthesize monsterConstants;
- (BOOL) hasMinutesPerGem {
  return !!hasMinutesPerGem_;
}
- (void) setHasMinutesPerGem:(BOOL) value {
  hasMinutesPerGem_ = !!value;
}
@synthesize minutesPerGem;
- (BOOL) hasPvpRequiredMinLvl {
  return !!hasPvpRequiredMinLvl_;
}
- (void) setHasPvpRequiredMinLvl:(BOOL) value {
  hasPvpRequiredMinLvl_ = !!value;
}
@synthesize pvpRequiredMinLvl;
- (BOOL) hasGemsPerResource {
  return !!hasGemsPerResource_;
}
- (void) setHasGemsPerResource:(BOOL) value {
  hasGemsPerResource_ = !!value;
}
@synthesize gemsPerResource;
- (BOOL) hasContinueBattleGemCostMultiplier {
  return !!hasContinueBattleGemCostMultiplier_;
}
- (void) setHasContinueBattleGemCostMultiplier:(BOOL) value {
  hasContinueBattleGemCostMultiplier_ = !!value;
}
@synthesize continueBattleGemCostMultiplier;
- (BOOL) hasAddAllFbFriends {
  return !!hasAddAllFbFriends_;
}
- (void) setHasAddAllFbFriends:(BOOL) value {
  hasAddAllFbFriends_ = !!value;
}
- (BOOL) addAllFbFriends {
  return !!addAllFbFriends_;
}
- (void) setAddAllFbFriends:(BOOL) value {
  addAllFbFriends_ = !!value;
}
- (BOOL) hasMiniTuts {
  return !!hasMiniTuts_;
}
- (void) setHasMiniTuts:(BOOL) value {
  hasMiniTuts_ = !!value;
}
@synthesize miniTuts;
- (BOOL) hasMaxObstacles {
  return !!hasMaxObstacles_;
}
- (void) setHasMaxObstacles:(BOOL) value {
  hasMaxObstacles_ = !!value;
}
@synthesize maxObstacles;
- (BOOL) hasMinutesPerObstacle {
  return !!hasMinutesPerObstacle_;
}
- (void) setHasMinutesPerObstacle:(BOOL) value {
  hasMinutesPerObstacle_ = !!value;
}
@synthesize minutesPerObstacle;
- (void) dealloc {
  self.mutableInAppPurchasePackagesList = nil;
  self.mutableAnimatedSpriteOffsetsList = nil;
  self.clanConstants = nil;
  self.downloadableNibConstants = nil;
  self.touramentConstants = nil;
  self.faqFileName = nil;
  self.adminChatUserProto = nil;
  self.userMonsterConstants = nil;
  self.monsterConstants = nil;
  self.miniTuts = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.maxLevelForUser = 0;
    self.maxNumOfSingleStruct = 0;
    self.minNameLength = 0;
    self.maxNameLength = 0;
    self.maxLengthOfChatString = 0;
    self.clanConstants = [StartupResponseProto_StartupConstants_ClanConstants defaultInstance];
    self.downloadableNibConstants = [StartupResponseProto_StartupConstants_DownloadableNibConstants defaultInstance];
    self.numHoursBeforeReshowingGoldSale = 0;
    self.levelToShowRateUsPopup = 0;
    self.touramentConstants = [StartupResponseProto_StartupConstants_TournamentConstants defaultInstance];
    self.fbConnectRewardDiamonds = 0;
    self.faqFileName = @"";
    self.adminChatUserProto = [MinimumUserProto defaultInstance];
    self.numBeginnerSalesAllowed = 0;
    self.userMonsterConstants = [StartupResponseProto_StartupConstants_UserMonsterConstants defaultInstance];
    self.monsterConstants = [StartupResponseProto_StartupConstants_MonsterConstants defaultInstance];
    self.minutesPerGem = 0;
    self.pvpRequiredMinLvl = 0;
    self.gemsPerResource = 0;
    self.continueBattleGemCostMultiplier = 0;
    self.addAllFbFriends = NO;
    self.miniTuts = [StartupResponseProto_StartupConstants_MiniTutorialConstants defaultInstance];
    self.maxObstacles = 0;
    self.minutesPerObstacle = 0;
  }
  return self;
}
static StartupResponseProto_StartupConstants* defaultStartupResponseProto_StartupConstantsInstance = nil;
+ (void) initialize {
  if (self == [StartupResponseProto_StartupConstants class]) {
    defaultStartupResponseProto_StartupConstantsInstance = [[StartupResponseProto_StartupConstants alloc] init];
  }
}
+ (StartupResponseProto_StartupConstants*) defaultInstance {
  return defaultStartupResponseProto_StartupConstantsInstance;
}
- (StartupResponseProto_StartupConstants*) defaultInstance {
  return defaultStartupResponseProto_StartupConstantsInstance;
}
- (NSArray*) inAppPurchasePackagesList {
  return mutableInAppPurchasePackagesList;
}
- (InAppPurchasePackageProto*) inAppPurchasePackagesAtIndex:(int32_t) index {
  id value = [mutableInAppPurchasePackagesList objectAtIndex:index];
  return value;
}
- (NSArray*) animatedSpriteOffsetsList {
  return mutableAnimatedSpriteOffsetsList;
}
- (StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto*) animatedSpriteOffsetsAtIndex:(int32_t) index {
  id value = [mutableAnimatedSpriteOffsetsList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  for (InAppPurchasePackageProto* element in self.inAppPurchasePackagesList) {
    [output writeMessage:1 value:element];
  }
  if (self.hasMaxLevelForUser) {
    [output writeInt32:2 value:self.maxLevelForUser];
  }
  if (self.hasMaxNumOfSingleStruct) {
    [output writeInt32:3 value:self.maxNumOfSingleStruct];
  }
  for (StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto* element in self.animatedSpriteOffsetsList) {
    [output writeMessage:4 value:element];
  }
  if (self.hasMinNameLength) {
    [output writeInt32:5 value:self.minNameLength];
  }
  if (self.hasMaxNameLength) {
    [output writeInt32:6 value:self.maxNameLength];
  }
  if (self.hasMaxLengthOfChatString) {
    [output writeInt32:7 value:self.maxLengthOfChatString];
  }
  if (self.hasClanConstants) {
    [output writeMessage:8 value:self.clanConstants];
  }
  if (self.hasDownloadableNibConstants) {
    [output writeMessage:9 value:self.downloadableNibConstants];
  }
  if (self.hasNumHoursBeforeReshowingGoldSale) {
    [output writeInt32:10 value:self.numHoursBeforeReshowingGoldSale];
  }
  if (self.hasLevelToShowRateUsPopup) {
    [output writeInt32:11 value:self.levelToShowRateUsPopup];
  }
  if (self.hasTouramentConstants) {
    [output writeMessage:12 value:self.touramentConstants];
  }
  if (self.hasFbConnectRewardDiamonds) {
    [output writeInt32:13 value:self.fbConnectRewardDiamonds];
  }
  if (self.hasFaqFileName) {
    [output writeString:14 value:self.faqFileName];
  }
  if (self.hasAdminChatUserProto) {
    [output writeMessage:15 value:self.adminChatUserProto];
  }
  if (self.hasNumBeginnerSalesAllowed) {
    [output writeInt32:16 value:self.numBeginnerSalesAllowed];
  }
  if (self.hasUserMonsterConstants) {
    [output writeMessage:17 value:self.userMonsterConstants];
  }
  if (self.hasMonsterConstants) {
    [output writeMessage:18 value:self.monsterConstants];
  }
  if (self.hasMinutesPerGem) {
    [output writeFloat:19 value:self.minutesPerGem];
  }
  if (self.hasPvpRequiredMinLvl) {
    [output writeInt32:20 value:self.pvpRequiredMinLvl];
  }
  if (self.hasGemsPerResource) {
    [output writeFloat:21 value:self.gemsPerResource];
  }
  if (self.hasContinueBattleGemCostMultiplier) {
    [output writeFloat:22 value:self.continueBattleGemCostMultiplier];
  }
  if (self.hasAddAllFbFriends) {
    [output writeBool:23 value:self.addAllFbFriends];
  }
  if (self.hasMiniTuts) {
    [output writeMessage:24 value:self.miniTuts];
  }
  if (self.hasMaxObstacles) {
    [output writeInt32:25 value:self.maxObstacles];
  }
  if (self.hasMinutesPerObstacle) {
    [output writeInt32:26 value:self.minutesPerObstacle];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  for (InAppPurchasePackageProto* element in self.inAppPurchasePackagesList) {
    size += computeMessageSize(1, element);
  }
  if (self.hasMaxLevelForUser) {
    size += computeInt32Size(2, self.maxLevelForUser);
  }
  if (self.hasMaxNumOfSingleStruct) {
    size += computeInt32Size(3, self.maxNumOfSingleStruct);
  }
  for (StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto* element in self.animatedSpriteOffsetsList) {
    size += computeMessageSize(4, element);
  }
  if (self.hasMinNameLength) {
    size += computeInt32Size(5, self.minNameLength);
  }
  if (self.hasMaxNameLength) {
    size += computeInt32Size(6, self.maxNameLength);
  }
  if (self.hasMaxLengthOfChatString) {
    size += computeInt32Size(7, self.maxLengthOfChatString);
  }
  if (self.hasClanConstants) {
    size += computeMessageSize(8, self.clanConstants);
  }
  if (self.hasDownloadableNibConstants) {
    size += computeMessageSize(9, self.downloadableNibConstants);
  }
  if (self.hasNumHoursBeforeReshowingGoldSale) {
    size += computeInt32Size(10, self.numHoursBeforeReshowingGoldSale);
  }
  if (self.hasLevelToShowRateUsPopup) {
    size += computeInt32Size(11, self.levelToShowRateUsPopup);
  }
  if (self.hasTouramentConstants) {
    size += computeMessageSize(12, self.touramentConstants);
  }
  if (self.hasFbConnectRewardDiamonds) {
    size += computeInt32Size(13, self.fbConnectRewardDiamonds);
  }
  if (self.hasFaqFileName) {
    size += computeStringSize(14, self.faqFileName);
  }
  if (self.hasAdminChatUserProto) {
    size += computeMessageSize(15, self.adminChatUserProto);
  }
  if (self.hasNumBeginnerSalesAllowed) {
    size += computeInt32Size(16, self.numBeginnerSalesAllowed);
  }
  if (self.hasUserMonsterConstants) {
    size += computeMessageSize(17, self.userMonsterConstants);
  }
  if (self.hasMonsterConstants) {
    size += computeMessageSize(18, self.monsterConstants);
  }
  if (self.hasMinutesPerGem) {
    size += computeFloatSize(19, self.minutesPerGem);
  }
  if (self.hasPvpRequiredMinLvl) {
    size += computeInt32Size(20, self.pvpRequiredMinLvl);
  }
  if (self.hasGemsPerResource) {
    size += computeFloatSize(21, self.gemsPerResource);
  }
  if (self.hasContinueBattleGemCostMultiplier) {
    size += computeFloatSize(22, self.continueBattleGemCostMultiplier);
  }
  if (self.hasAddAllFbFriends) {
    size += computeBoolSize(23, self.addAllFbFriends);
  }
  if (self.hasMiniTuts) {
    size += computeMessageSize(24, self.miniTuts);
  }
  if (self.hasMaxObstacles) {
    size += computeInt32Size(25, self.maxObstacles);
  }
  if (self.hasMinutesPerObstacle) {
    size += computeInt32Size(26, self.minutesPerObstacle);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (StartupResponseProto_StartupConstants*) parseFromData:(NSData*) data {
  return (StartupResponseProto_StartupConstants*)[[[StartupResponseProto_StartupConstants builder] mergeFromData:data] build];
}
+ (StartupResponseProto_StartupConstants*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (StartupResponseProto_StartupConstants*)[[[StartupResponseProto_StartupConstants builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (StartupResponseProto_StartupConstants*) parseFromInputStream:(NSInputStream*) input {
  return (StartupResponseProto_StartupConstants*)[[[StartupResponseProto_StartupConstants builder] mergeFromInputStream:input] build];
}
+ (StartupResponseProto_StartupConstants*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (StartupResponseProto_StartupConstants*)[[[StartupResponseProto_StartupConstants builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (StartupResponseProto_StartupConstants*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (StartupResponseProto_StartupConstants*)[[[StartupResponseProto_StartupConstants builder] mergeFromCodedInputStream:input] build];
}
+ (StartupResponseProto_StartupConstants*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (StartupResponseProto_StartupConstants*)[[[StartupResponseProto_StartupConstants builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (StartupResponseProto_StartupConstants_Builder*) builder {
  return [[[StartupResponseProto_StartupConstants_Builder alloc] init] autorelease];
}
+ (StartupResponseProto_StartupConstants_Builder*) builderWithPrototype:(StartupResponseProto_StartupConstants*) prototype {
  return [[StartupResponseProto_StartupConstants builder] mergeFrom:prototype];
}
- (StartupResponseProto_StartupConstants_Builder*) builder {
  return [StartupResponseProto_StartupConstants builder];
}
@end

@interface StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto ()
@property (retain) NSString* imageName;
@property (retain) CoordinateProto* offSet;
@end

@implementation StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto

- (BOOL) hasImageName {
  return !!hasImageName_;
}
- (void) setHasImageName:(BOOL) value {
  hasImageName_ = !!value;
}
@synthesize imageName;
- (BOOL) hasOffSet {
  return !!hasOffSet_;
}
- (void) setHasOffSet:(BOOL) value {
  hasOffSet_ = !!value;
}
@synthesize offSet;
- (void) dealloc {
  self.imageName = nil;
  self.offSet = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.imageName = @"";
    self.offSet = [CoordinateProto defaultInstance];
  }
  return self;
}
static StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto* defaultStartupResponseProto_StartupConstants_AnimatedSpriteOffsetProtoInstance = nil;
+ (void) initialize {
  if (self == [StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto class]) {
    defaultStartupResponseProto_StartupConstants_AnimatedSpriteOffsetProtoInstance = [[StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto alloc] init];
  }
}
+ (StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto*) defaultInstance {
  return defaultStartupResponseProto_StartupConstants_AnimatedSpriteOffsetProtoInstance;
}
- (StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto*) defaultInstance {
  return defaultStartupResponseProto_StartupConstants_AnimatedSpriteOffsetProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasImageName) {
    [output writeString:1 value:self.imageName];
  }
  if (self.hasOffSet) {
    [output writeMessage:2 value:self.offSet];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasImageName) {
    size += computeStringSize(1, self.imageName);
  }
  if (self.hasOffSet) {
    size += computeMessageSize(2, self.offSet);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto*) parseFromData:(NSData*) data {
  return (StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto*)[[[StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto builder] mergeFromData:data] build];
}
+ (StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto*)[[[StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto*) parseFromInputStream:(NSInputStream*) input {
  return (StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto*)[[[StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto builder] mergeFromInputStream:input] build];
}
+ (StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto*)[[[StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto*)[[[StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto builder] mergeFromCodedInputStream:input] build];
}
+ (StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto*)[[[StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto_Builder*) builder {
  return [[[StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto_Builder alloc] init] autorelease];
}
+ (StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto_Builder*) builderWithPrototype:(StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto*) prototype {
  return [[StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto builder] mergeFrom:prototype];
}
- (StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto_Builder*) builder {
  return [StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto builder];
}
@end

@interface StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto_Builder()
@property (retain) StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto* result;
@end

@implementation StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto_Builder*) clear {
  self.result = [[[StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto alloc] init] autorelease];
  return self;
}
- (StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto_Builder*) clone {
  return [StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto builderWithPrototype:result];
}
- (StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto*) defaultInstance {
  return [StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto defaultInstance];
}
- (StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto*) buildPartial {
  StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto_Builder*) mergeFrom:(StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto*) other {
  if (other == [StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto defaultInstance]) {
    return self;
  }
  if (other.hasImageName) {
    [self setImageName:other.imageName];
  }
  if (other.hasOffSet) {
    [self mergeOffSet:other.offSet];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setImageName:[input readString]];
        break;
      }
      case 18: {
        CoordinateProto_Builder* subBuilder = [CoordinateProto builder];
        if (self.hasOffSet) {
          [subBuilder mergeFrom:self.offSet];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setOffSet:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasImageName {
  return result.hasImageName;
}
- (NSString*) imageName {
  return result.imageName;
}
- (StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto_Builder*) setImageName:(NSString*) value {
  result.hasImageName = YES;
  result.imageName = value;
  return self;
}
- (StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto_Builder*) clearImageName {
  result.hasImageName = NO;
  result.imageName = @"";
  return self;
}
- (BOOL) hasOffSet {
  return result.hasOffSet;
}
- (CoordinateProto*) offSet {
  return result.offSet;
}
- (StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto_Builder*) setOffSet:(CoordinateProto*) value {
  result.hasOffSet = YES;
  result.offSet = value;
  return self;
}
- (StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto_Builder*) setOffSetBuilder:(CoordinateProto_Builder*) builderForValue {
  return [self setOffSet:[builderForValue build]];
}
- (StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto_Builder*) mergeOffSet:(CoordinateProto*) value {
  if (result.hasOffSet &&
      result.offSet != [CoordinateProto defaultInstance]) {
    result.offSet =
      [[[CoordinateProto builderWithPrototype:result.offSet] mergeFrom:value] buildPartial];
  } else {
    result.offSet = value;
  }
  result.hasOffSet = YES;
  return self;
}
- (StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto_Builder*) clearOffSet {
  result.hasOffSet = NO;
  result.offSet = [CoordinateProto defaultInstance];
  return self;
}
@end

@interface StartupResponseProto_StartupConstants_ClanConstants ()
@property int32_t coinPriceToCreateClan;
@property int32_t maxCharLengthForClanName;
@property int32_t maxCharLengthForClanDescription;
@property int32_t maxCharLengthForClanTag;
@property int32_t maxClanSize;
@end

@implementation StartupResponseProto_StartupConstants_ClanConstants

- (BOOL) hasCoinPriceToCreateClan {
  return !!hasCoinPriceToCreateClan_;
}
- (void) setHasCoinPriceToCreateClan:(BOOL) value {
  hasCoinPriceToCreateClan_ = !!value;
}
@synthesize coinPriceToCreateClan;
- (BOOL) hasMaxCharLengthForClanName {
  return !!hasMaxCharLengthForClanName_;
}
- (void) setHasMaxCharLengthForClanName:(BOOL) value {
  hasMaxCharLengthForClanName_ = !!value;
}
@synthesize maxCharLengthForClanName;
- (BOOL) hasMaxCharLengthForClanDescription {
  return !!hasMaxCharLengthForClanDescription_;
}
- (void) setHasMaxCharLengthForClanDescription:(BOOL) value {
  hasMaxCharLengthForClanDescription_ = !!value;
}
@synthesize maxCharLengthForClanDescription;
- (BOOL) hasMaxCharLengthForClanTag {
  return !!hasMaxCharLengthForClanTag_;
}
- (void) setHasMaxCharLengthForClanTag:(BOOL) value {
  hasMaxCharLengthForClanTag_ = !!value;
}
@synthesize maxCharLengthForClanTag;
- (BOOL) hasMaxClanSize {
  return !!hasMaxClanSize_;
}
- (void) setHasMaxClanSize:(BOOL) value {
  hasMaxClanSize_ = !!value;
}
@synthesize maxClanSize;
- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.coinPriceToCreateClan = 0;
    self.maxCharLengthForClanName = 0;
    self.maxCharLengthForClanDescription = 0;
    self.maxCharLengthForClanTag = 0;
    self.maxClanSize = 0;
  }
  return self;
}
static StartupResponseProto_StartupConstants_ClanConstants* defaultStartupResponseProto_StartupConstants_ClanConstantsInstance = nil;
+ (void) initialize {
  if (self == [StartupResponseProto_StartupConstants_ClanConstants class]) {
    defaultStartupResponseProto_StartupConstants_ClanConstantsInstance = [[StartupResponseProto_StartupConstants_ClanConstants alloc] init];
  }
}
+ (StartupResponseProto_StartupConstants_ClanConstants*) defaultInstance {
  return defaultStartupResponseProto_StartupConstants_ClanConstantsInstance;
}
- (StartupResponseProto_StartupConstants_ClanConstants*) defaultInstance {
  return defaultStartupResponseProto_StartupConstants_ClanConstantsInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCoinPriceToCreateClan) {
    [output writeInt32:1 value:self.coinPriceToCreateClan];
  }
  if (self.hasMaxCharLengthForClanName) {
    [output writeInt32:2 value:self.maxCharLengthForClanName];
  }
  if (self.hasMaxCharLengthForClanDescription) {
    [output writeInt32:3 value:self.maxCharLengthForClanDescription];
  }
  if (self.hasMaxCharLengthForClanTag) {
    [output writeInt32:4 value:self.maxCharLengthForClanTag];
  }
  if (self.hasMaxClanSize) {
    [output writeInt32:5 value:self.maxClanSize];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasCoinPriceToCreateClan) {
    size += computeInt32Size(1, self.coinPriceToCreateClan);
  }
  if (self.hasMaxCharLengthForClanName) {
    size += computeInt32Size(2, self.maxCharLengthForClanName);
  }
  if (self.hasMaxCharLengthForClanDescription) {
    size += computeInt32Size(3, self.maxCharLengthForClanDescription);
  }
  if (self.hasMaxCharLengthForClanTag) {
    size += computeInt32Size(4, self.maxCharLengthForClanTag);
  }
  if (self.hasMaxClanSize) {
    size += computeInt32Size(5, self.maxClanSize);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (StartupResponseProto_StartupConstants_ClanConstants*) parseFromData:(NSData*) data {
  return (StartupResponseProto_StartupConstants_ClanConstants*)[[[StartupResponseProto_StartupConstants_ClanConstants builder] mergeFromData:data] build];
}
+ (StartupResponseProto_StartupConstants_ClanConstants*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (StartupResponseProto_StartupConstants_ClanConstants*)[[[StartupResponseProto_StartupConstants_ClanConstants builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (StartupResponseProto_StartupConstants_ClanConstants*) parseFromInputStream:(NSInputStream*) input {
  return (StartupResponseProto_StartupConstants_ClanConstants*)[[[StartupResponseProto_StartupConstants_ClanConstants builder] mergeFromInputStream:input] build];
}
+ (StartupResponseProto_StartupConstants_ClanConstants*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (StartupResponseProto_StartupConstants_ClanConstants*)[[[StartupResponseProto_StartupConstants_ClanConstants builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (StartupResponseProto_StartupConstants_ClanConstants*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (StartupResponseProto_StartupConstants_ClanConstants*)[[[StartupResponseProto_StartupConstants_ClanConstants builder] mergeFromCodedInputStream:input] build];
}
+ (StartupResponseProto_StartupConstants_ClanConstants*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (StartupResponseProto_StartupConstants_ClanConstants*)[[[StartupResponseProto_StartupConstants_ClanConstants builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (StartupResponseProto_StartupConstants_ClanConstants_Builder*) builder {
  return [[[StartupResponseProto_StartupConstants_ClanConstants_Builder alloc] init] autorelease];
}
+ (StartupResponseProto_StartupConstants_ClanConstants_Builder*) builderWithPrototype:(StartupResponseProto_StartupConstants_ClanConstants*) prototype {
  return [[StartupResponseProto_StartupConstants_ClanConstants builder] mergeFrom:prototype];
}
- (StartupResponseProto_StartupConstants_ClanConstants_Builder*) builder {
  return [StartupResponseProto_StartupConstants_ClanConstants builder];
}
@end

@interface StartupResponseProto_StartupConstants_ClanConstants_Builder()
@property (retain) StartupResponseProto_StartupConstants_ClanConstants* result;
@end

@implementation StartupResponseProto_StartupConstants_ClanConstants_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[StartupResponseProto_StartupConstants_ClanConstants alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (StartupResponseProto_StartupConstants_ClanConstants_Builder*) clear {
  self.result = [[[StartupResponseProto_StartupConstants_ClanConstants alloc] init] autorelease];
  return self;
}
- (StartupResponseProto_StartupConstants_ClanConstants_Builder*) clone {
  return [StartupResponseProto_StartupConstants_ClanConstants builderWithPrototype:result];
}
- (StartupResponseProto_StartupConstants_ClanConstants*) defaultInstance {
  return [StartupResponseProto_StartupConstants_ClanConstants defaultInstance];
}
- (StartupResponseProto_StartupConstants_ClanConstants*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (StartupResponseProto_StartupConstants_ClanConstants*) buildPartial {
  StartupResponseProto_StartupConstants_ClanConstants* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (StartupResponseProto_StartupConstants_ClanConstants_Builder*) mergeFrom:(StartupResponseProto_StartupConstants_ClanConstants*) other {
  if (other == [StartupResponseProto_StartupConstants_ClanConstants defaultInstance]) {
    return self;
  }
  if (other.hasCoinPriceToCreateClan) {
    [self setCoinPriceToCreateClan:other.coinPriceToCreateClan];
  }
  if (other.hasMaxCharLengthForClanName) {
    [self setMaxCharLengthForClanName:other.maxCharLengthForClanName];
  }
  if (other.hasMaxCharLengthForClanDescription) {
    [self setMaxCharLengthForClanDescription:other.maxCharLengthForClanDescription];
  }
  if (other.hasMaxCharLengthForClanTag) {
    [self setMaxCharLengthForClanTag:other.maxCharLengthForClanTag];
  }
  if (other.hasMaxClanSize) {
    [self setMaxClanSize:other.maxClanSize];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (StartupResponseProto_StartupConstants_ClanConstants_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (StartupResponseProto_StartupConstants_ClanConstants_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setCoinPriceToCreateClan:[input readInt32]];
        break;
      }
      case 16: {
        [self setMaxCharLengthForClanName:[input readInt32]];
        break;
      }
      case 24: {
        [self setMaxCharLengthForClanDescription:[input readInt32]];
        break;
      }
      case 32: {
        [self setMaxCharLengthForClanTag:[input readInt32]];
        break;
      }
      case 40: {
        [self setMaxClanSize:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasCoinPriceToCreateClan {
  return result.hasCoinPriceToCreateClan;
}
- (int32_t) coinPriceToCreateClan {
  return result.coinPriceToCreateClan;
}
- (StartupResponseProto_StartupConstants_ClanConstants_Builder*) setCoinPriceToCreateClan:(int32_t) value {
  result.hasCoinPriceToCreateClan = YES;
  result.coinPriceToCreateClan = value;
  return self;
}
- (StartupResponseProto_StartupConstants_ClanConstants_Builder*) clearCoinPriceToCreateClan {
  result.hasCoinPriceToCreateClan = NO;
  result.coinPriceToCreateClan = 0;
  return self;
}
- (BOOL) hasMaxCharLengthForClanName {
  return result.hasMaxCharLengthForClanName;
}
- (int32_t) maxCharLengthForClanName {
  return result.maxCharLengthForClanName;
}
- (StartupResponseProto_StartupConstants_ClanConstants_Builder*) setMaxCharLengthForClanName:(int32_t) value {
  result.hasMaxCharLengthForClanName = YES;
  result.maxCharLengthForClanName = value;
  return self;
}
- (StartupResponseProto_StartupConstants_ClanConstants_Builder*) clearMaxCharLengthForClanName {
  result.hasMaxCharLengthForClanName = NO;
  result.maxCharLengthForClanName = 0;
  return self;
}
- (BOOL) hasMaxCharLengthForClanDescription {
  return result.hasMaxCharLengthForClanDescription;
}
- (int32_t) maxCharLengthForClanDescription {
  return result.maxCharLengthForClanDescription;
}
- (StartupResponseProto_StartupConstants_ClanConstants_Builder*) setMaxCharLengthForClanDescription:(int32_t) value {
  result.hasMaxCharLengthForClanDescription = YES;
  result.maxCharLengthForClanDescription = value;
  return self;
}
- (StartupResponseProto_StartupConstants_ClanConstants_Builder*) clearMaxCharLengthForClanDescription {
  result.hasMaxCharLengthForClanDescription = NO;
  result.maxCharLengthForClanDescription = 0;
  return self;
}
- (BOOL) hasMaxCharLengthForClanTag {
  return result.hasMaxCharLengthForClanTag;
}
- (int32_t) maxCharLengthForClanTag {
  return result.maxCharLengthForClanTag;
}
- (StartupResponseProto_StartupConstants_ClanConstants_Builder*) setMaxCharLengthForClanTag:(int32_t) value {
  result.hasMaxCharLengthForClanTag = YES;
  result.maxCharLengthForClanTag = value;
  return self;
}
- (StartupResponseProto_StartupConstants_ClanConstants_Builder*) clearMaxCharLengthForClanTag {
  result.hasMaxCharLengthForClanTag = NO;
  result.maxCharLengthForClanTag = 0;
  return self;
}
- (BOOL) hasMaxClanSize {
  return result.hasMaxClanSize;
}
- (int32_t) maxClanSize {
  return result.maxClanSize;
}
- (StartupResponseProto_StartupConstants_ClanConstants_Builder*) setMaxClanSize:(int32_t) value {
  result.hasMaxClanSize = YES;
  result.maxClanSize = value;
  return self;
}
- (StartupResponseProto_StartupConstants_ClanConstants_Builder*) clearMaxClanSize {
  result.hasMaxClanSize = NO;
  result.maxClanSize = 0;
  return self;
}
@end

@interface StartupResponseProto_StartupConstants_DownloadableNibConstants ()
@property (retain) NSString* mapNibName;
@property (retain) NSString* expansionNibName;
@property (retain) NSString* goldShoppeNibName;
@end

@implementation StartupResponseProto_StartupConstants_DownloadableNibConstants

- (BOOL) hasMapNibName {
  return !!hasMapNibName_;
}
- (void) setHasMapNibName:(BOOL) value {
  hasMapNibName_ = !!value;
}
@synthesize mapNibName;
- (BOOL) hasExpansionNibName {
  return !!hasExpansionNibName_;
}
- (void) setHasExpansionNibName:(BOOL) value {
  hasExpansionNibName_ = !!value;
}
@synthesize expansionNibName;
- (BOOL) hasGoldShoppeNibName {
  return !!hasGoldShoppeNibName_;
}
- (void) setHasGoldShoppeNibName:(BOOL) value {
  hasGoldShoppeNibName_ = !!value;
}
@synthesize goldShoppeNibName;
- (void) dealloc {
  self.mapNibName = nil;
  self.expansionNibName = nil;
  self.goldShoppeNibName = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.mapNibName = @"";
    self.expansionNibName = @"";
    self.goldShoppeNibName = @"";
  }
  return self;
}
static StartupResponseProto_StartupConstants_DownloadableNibConstants* defaultStartupResponseProto_StartupConstants_DownloadableNibConstantsInstance = nil;
+ (void) initialize {
  if (self == [StartupResponseProto_StartupConstants_DownloadableNibConstants class]) {
    defaultStartupResponseProto_StartupConstants_DownloadableNibConstantsInstance = [[StartupResponseProto_StartupConstants_DownloadableNibConstants alloc] init];
  }
}
+ (StartupResponseProto_StartupConstants_DownloadableNibConstants*) defaultInstance {
  return defaultStartupResponseProto_StartupConstants_DownloadableNibConstantsInstance;
}
- (StartupResponseProto_StartupConstants_DownloadableNibConstants*) defaultInstance {
  return defaultStartupResponseProto_StartupConstants_DownloadableNibConstantsInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasMapNibName) {
    [output writeString:1 value:self.mapNibName];
  }
  if (self.hasExpansionNibName) {
    [output writeString:2 value:self.expansionNibName];
  }
  if (self.hasGoldShoppeNibName) {
    [output writeString:3 value:self.goldShoppeNibName];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasMapNibName) {
    size += computeStringSize(1, self.mapNibName);
  }
  if (self.hasExpansionNibName) {
    size += computeStringSize(2, self.expansionNibName);
  }
  if (self.hasGoldShoppeNibName) {
    size += computeStringSize(3, self.goldShoppeNibName);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (StartupResponseProto_StartupConstants_DownloadableNibConstants*) parseFromData:(NSData*) data {
  return (StartupResponseProto_StartupConstants_DownloadableNibConstants*)[[[StartupResponseProto_StartupConstants_DownloadableNibConstants builder] mergeFromData:data] build];
}
+ (StartupResponseProto_StartupConstants_DownloadableNibConstants*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (StartupResponseProto_StartupConstants_DownloadableNibConstants*)[[[StartupResponseProto_StartupConstants_DownloadableNibConstants builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (StartupResponseProto_StartupConstants_DownloadableNibConstants*) parseFromInputStream:(NSInputStream*) input {
  return (StartupResponseProto_StartupConstants_DownloadableNibConstants*)[[[StartupResponseProto_StartupConstants_DownloadableNibConstants builder] mergeFromInputStream:input] build];
}
+ (StartupResponseProto_StartupConstants_DownloadableNibConstants*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (StartupResponseProto_StartupConstants_DownloadableNibConstants*)[[[StartupResponseProto_StartupConstants_DownloadableNibConstants builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (StartupResponseProto_StartupConstants_DownloadableNibConstants*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (StartupResponseProto_StartupConstants_DownloadableNibConstants*)[[[StartupResponseProto_StartupConstants_DownloadableNibConstants builder] mergeFromCodedInputStream:input] build];
}
+ (StartupResponseProto_StartupConstants_DownloadableNibConstants*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (StartupResponseProto_StartupConstants_DownloadableNibConstants*)[[[StartupResponseProto_StartupConstants_DownloadableNibConstants builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (StartupResponseProto_StartupConstants_DownloadableNibConstants_Builder*) builder {
  return [[[StartupResponseProto_StartupConstants_DownloadableNibConstants_Builder alloc] init] autorelease];
}
+ (StartupResponseProto_StartupConstants_DownloadableNibConstants_Builder*) builderWithPrototype:(StartupResponseProto_StartupConstants_DownloadableNibConstants*) prototype {
  return [[StartupResponseProto_StartupConstants_DownloadableNibConstants builder] mergeFrom:prototype];
}
- (StartupResponseProto_StartupConstants_DownloadableNibConstants_Builder*) builder {
  return [StartupResponseProto_StartupConstants_DownloadableNibConstants builder];
}
@end

@interface StartupResponseProto_StartupConstants_DownloadableNibConstants_Builder()
@property (retain) StartupResponseProto_StartupConstants_DownloadableNibConstants* result;
@end

@implementation StartupResponseProto_StartupConstants_DownloadableNibConstants_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[StartupResponseProto_StartupConstants_DownloadableNibConstants alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (StartupResponseProto_StartupConstants_DownloadableNibConstants_Builder*) clear {
  self.result = [[[StartupResponseProto_StartupConstants_DownloadableNibConstants alloc] init] autorelease];
  return self;
}
- (StartupResponseProto_StartupConstants_DownloadableNibConstants_Builder*) clone {
  return [StartupResponseProto_StartupConstants_DownloadableNibConstants builderWithPrototype:result];
}
- (StartupResponseProto_StartupConstants_DownloadableNibConstants*) defaultInstance {
  return [StartupResponseProto_StartupConstants_DownloadableNibConstants defaultInstance];
}
- (StartupResponseProto_StartupConstants_DownloadableNibConstants*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (StartupResponseProto_StartupConstants_DownloadableNibConstants*) buildPartial {
  StartupResponseProto_StartupConstants_DownloadableNibConstants* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (StartupResponseProto_StartupConstants_DownloadableNibConstants_Builder*) mergeFrom:(StartupResponseProto_StartupConstants_DownloadableNibConstants*) other {
  if (other == [StartupResponseProto_StartupConstants_DownloadableNibConstants defaultInstance]) {
    return self;
  }
  if (other.hasMapNibName) {
    [self setMapNibName:other.mapNibName];
  }
  if (other.hasExpansionNibName) {
    [self setExpansionNibName:other.expansionNibName];
  }
  if (other.hasGoldShoppeNibName) {
    [self setGoldShoppeNibName:other.goldShoppeNibName];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (StartupResponseProto_StartupConstants_DownloadableNibConstants_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (StartupResponseProto_StartupConstants_DownloadableNibConstants_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setMapNibName:[input readString]];
        break;
      }
      case 18: {
        [self setExpansionNibName:[input readString]];
        break;
      }
      case 26: {
        [self setGoldShoppeNibName:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasMapNibName {
  return result.hasMapNibName;
}
- (NSString*) mapNibName {
  return result.mapNibName;
}
- (StartupResponseProto_StartupConstants_DownloadableNibConstants_Builder*) setMapNibName:(NSString*) value {
  result.hasMapNibName = YES;
  result.mapNibName = value;
  return self;
}
- (StartupResponseProto_StartupConstants_DownloadableNibConstants_Builder*) clearMapNibName {
  result.hasMapNibName = NO;
  result.mapNibName = @"";
  return self;
}
- (BOOL) hasExpansionNibName {
  return result.hasExpansionNibName;
}
- (NSString*) expansionNibName {
  return result.expansionNibName;
}
- (StartupResponseProto_StartupConstants_DownloadableNibConstants_Builder*) setExpansionNibName:(NSString*) value {
  result.hasExpansionNibName = YES;
  result.expansionNibName = value;
  return self;
}
- (StartupResponseProto_StartupConstants_DownloadableNibConstants_Builder*) clearExpansionNibName {
  result.hasExpansionNibName = NO;
  result.expansionNibName = @"";
  return self;
}
- (BOOL) hasGoldShoppeNibName {
  return result.hasGoldShoppeNibName;
}
- (NSString*) goldShoppeNibName {
  return result.goldShoppeNibName;
}
- (StartupResponseProto_StartupConstants_DownloadableNibConstants_Builder*) setGoldShoppeNibName:(NSString*) value {
  result.hasGoldShoppeNibName = YES;
  result.goldShoppeNibName = value;
  return self;
}
- (StartupResponseProto_StartupConstants_DownloadableNibConstants_Builder*) clearGoldShoppeNibName {
  result.hasGoldShoppeNibName = NO;
  result.goldShoppeNibName = @"";
  return self;
}
@end

@interface StartupResponseProto_StartupConstants_TournamentConstants ()
@property int32_t winsWeight;
@property int32_t lossesWeight;
@property int32_t fleesWeight;
@property int32_t numHoursToShowAfterEventEnd;
@end

@implementation StartupResponseProto_StartupConstants_TournamentConstants

- (BOOL) hasWinsWeight {
  return !!hasWinsWeight_;
}
- (void) setHasWinsWeight:(BOOL) value {
  hasWinsWeight_ = !!value;
}
@synthesize winsWeight;
- (BOOL) hasLossesWeight {
  return !!hasLossesWeight_;
}
- (void) setHasLossesWeight:(BOOL) value {
  hasLossesWeight_ = !!value;
}
@synthesize lossesWeight;
- (BOOL) hasFleesWeight {
  return !!hasFleesWeight_;
}
- (void) setHasFleesWeight:(BOOL) value {
  hasFleesWeight_ = !!value;
}
@synthesize fleesWeight;
- (BOOL) hasNumHoursToShowAfterEventEnd {
  return !!hasNumHoursToShowAfterEventEnd_;
}
- (void) setHasNumHoursToShowAfterEventEnd:(BOOL) value {
  hasNumHoursToShowAfterEventEnd_ = !!value;
}
@synthesize numHoursToShowAfterEventEnd;
- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.winsWeight = 0;
    self.lossesWeight = 0;
    self.fleesWeight = 0;
    self.numHoursToShowAfterEventEnd = 0;
  }
  return self;
}
static StartupResponseProto_StartupConstants_TournamentConstants* defaultStartupResponseProto_StartupConstants_TournamentConstantsInstance = nil;
+ (void) initialize {
  if (self == [StartupResponseProto_StartupConstants_TournamentConstants class]) {
    defaultStartupResponseProto_StartupConstants_TournamentConstantsInstance = [[StartupResponseProto_StartupConstants_TournamentConstants alloc] init];
  }
}
+ (StartupResponseProto_StartupConstants_TournamentConstants*) defaultInstance {
  return defaultStartupResponseProto_StartupConstants_TournamentConstantsInstance;
}
- (StartupResponseProto_StartupConstants_TournamentConstants*) defaultInstance {
  return defaultStartupResponseProto_StartupConstants_TournamentConstantsInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasWinsWeight) {
    [output writeInt32:1 value:self.winsWeight];
  }
  if (self.hasLossesWeight) {
    [output writeInt32:2 value:self.lossesWeight];
  }
  if (self.hasFleesWeight) {
    [output writeInt32:3 value:self.fleesWeight];
  }
  if (self.hasNumHoursToShowAfterEventEnd) {
    [output writeInt32:4 value:self.numHoursToShowAfterEventEnd];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasWinsWeight) {
    size += computeInt32Size(1, self.winsWeight);
  }
  if (self.hasLossesWeight) {
    size += computeInt32Size(2, self.lossesWeight);
  }
  if (self.hasFleesWeight) {
    size += computeInt32Size(3, self.fleesWeight);
  }
  if (self.hasNumHoursToShowAfterEventEnd) {
    size += computeInt32Size(4, self.numHoursToShowAfterEventEnd);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (StartupResponseProto_StartupConstants_TournamentConstants*) parseFromData:(NSData*) data {
  return (StartupResponseProto_StartupConstants_TournamentConstants*)[[[StartupResponseProto_StartupConstants_TournamentConstants builder] mergeFromData:data] build];
}
+ (StartupResponseProto_StartupConstants_TournamentConstants*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (StartupResponseProto_StartupConstants_TournamentConstants*)[[[StartupResponseProto_StartupConstants_TournamentConstants builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (StartupResponseProto_StartupConstants_TournamentConstants*) parseFromInputStream:(NSInputStream*) input {
  return (StartupResponseProto_StartupConstants_TournamentConstants*)[[[StartupResponseProto_StartupConstants_TournamentConstants builder] mergeFromInputStream:input] build];
}
+ (StartupResponseProto_StartupConstants_TournamentConstants*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (StartupResponseProto_StartupConstants_TournamentConstants*)[[[StartupResponseProto_StartupConstants_TournamentConstants builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (StartupResponseProto_StartupConstants_TournamentConstants*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (StartupResponseProto_StartupConstants_TournamentConstants*)[[[StartupResponseProto_StartupConstants_TournamentConstants builder] mergeFromCodedInputStream:input] build];
}
+ (StartupResponseProto_StartupConstants_TournamentConstants*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (StartupResponseProto_StartupConstants_TournamentConstants*)[[[StartupResponseProto_StartupConstants_TournamentConstants builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (StartupResponseProto_StartupConstants_TournamentConstants_Builder*) builder {
  return [[[StartupResponseProto_StartupConstants_TournamentConstants_Builder alloc] init] autorelease];
}
+ (StartupResponseProto_StartupConstants_TournamentConstants_Builder*) builderWithPrototype:(StartupResponseProto_StartupConstants_TournamentConstants*) prototype {
  return [[StartupResponseProto_StartupConstants_TournamentConstants builder] mergeFrom:prototype];
}
- (StartupResponseProto_StartupConstants_TournamentConstants_Builder*) builder {
  return [StartupResponseProto_StartupConstants_TournamentConstants builder];
}
@end

@interface StartupResponseProto_StartupConstants_TournamentConstants_Builder()
@property (retain) StartupResponseProto_StartupConstants_TournamentConstants* result;
@end

@implementation StartupResponseProto_StartupConstants_TournamentConstants_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[StartupResponseProto_StartupConstants_TournamentConstants alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (StartupResponseProto_StartupConstants_TournamentConstants_Builder*) clear {
  self.result = [[[StartupResponseProto_StartupConstants_TournamentConstants alloc] init] autorelease];
  return self;
}
- (StartupResponseProto_StartupConstants_TournamentConstants_Builder*) clone {
  return [StartupResponseProto_StartupConstants_TournamentConstants builderWithPrototype:result];
}
- (StartupResponseProto_StartupConstants_TournamentConstants*) defaultInstance {
  return [StartupResponseProto_StartupConstants_TournamentConstants defaultInstance];
}
- (StartupResponseProto_StartupConstants_TournamentConstants*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (StartupResponseProto_StartupConstants_TournamentConstants*) buildPartial {
  StartupResponseProto_StartupConstants_TournamentConstants* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (StartupResponseProto_StartupConstants_TournamentConstants_Builder*) mergeFrom:(StartupResponseProto_StartupConstants_TournamentConstants*) other {
  if (other == [StartupResponseProto_StartupConstants_TournamentConstants defaultInstance]) {
    return self;
  }
  if (other.hasWinsWeight) {
    [self setWinsWeight:other.winsWeight];
  }
  if (other.hasLossesWeight) {
    [self setLossesWeight:other.lossesWeight];
  }
  if (other.hasFleesWeight) {
    [self setFleesWeight:other.fleesWeight];
  }
  if (other.hasNumHoursToShowAfterEventEnd) {
    [self setNumHoursToShowAfterEventEnd:other.numHoursToShowAfterEventEnd];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (StartupResponseProto_StartupConstants_TournamentConstants_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (StartupResponseProto_StartupConstants_TournamentConstants_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setWinsWeight:[input readInt32]];
        break;
      }
      case 16: {
        [self setLossesWeight:[input readInt32]];
        break;
      }
      case 24: {
        [self setFleesWeight:[input readInt32]];
        break;
      }
      case 32: {
        [self setNumHoursToShowAfterEventEnd:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasWinsWeight {
  return result.hasWinsWeight;
}
- (int32_t) winsWeight {
  return result.winsWeight;
}
- (StartupResponseProto_StartupConstants_TournamentConstants_Builder*) setWinsWeight:(int32_t) value {
  result.hasWinsWeight = YES;
  result.winsWeight = value;
  return self;
}
- (StartupResponseProto_StartupConstants_TournamentConstants_Builder*) clearWinsWeight {
  result.hasWinsWeight = NO;
  result.winsWeight = 0;
  return self;
}
- (BOOL) hasLossesWeight {
  return result.hasLossesWeight;
}
- (int32_t) lossesWeight {
  return result.lossesWeight;
}
- (StartupResponseProto_StartupConstants_TournamentConstants_Builder*) setLossesWeight:(int32_t) value {
  result.hasLossesWeight = YES;
  result.lossesWeight = value;
  return self;
}
- (StartupResponseProto_StartupConstants_TournamentConstants_Builder*) clearLossesWeight {
  result.hasLossesWeight = NO;
  result.lossesWeight = 0;
  return self;
}
- (BOOL) hasFleesWeight {
  return result.hasFleesWeight;
}
- (int32_t) fleesWeight {
  return result.fleesWeight;
}
- (StartupResponseProto_StartupConstants_TournamentConstants_Builder*) setFleesWeight:(int32_t) value {
  result.hasFleesWeight = YES;
  result.fleesWeight = value;
  return self;
}
- (StartupResponseProto_StartupConstants_TournamentConstants_Builder*) clearFleesWeight {
  result.hasFleesWeight = NO;
  result.fleesWeight = 0;
  return self;
}
- (BOOL) hasNumHoursToShowAfterEventEnd {
  return result.hasNumHoursToShowAfterEventEnd;
}
- (int32_t) numHoursToShowAfterEventEnd {
  return result.numHoursToShowAfterEventEnd;
}
- (StartupResponseProto_StartupConstants_TournamentConstants_Builder*) setNumHoursToShowAfterEventEnd:(int32_t) value {
  result.hasNumHoursToShowAfterEventEnd = YES;
  result.numHoursToShowAfterEventEnd = value;
  return self;
}
- (StartupResponseProto_StartupConstants_TournamentConstants_Builder*) clearNumHoursToShowAfterEventEnd {
  result.hasNumHoursToShowAfterEventEnd = NO;
  result.numHoursToShowAfterEventEnd = 0;
  return self;
}
@end

@interface StartupResponseProto_StartupConstants_UserMonsterConstants ()
@property int32_t maxNumTeamSlots;
@property int32_t initialMaxNumMonsterLimit;
@end

@implementation StartupResponseProto_StartupConstants_UserMonsterConstants

- (BOOL) hasMaxNumTeamSlots {
  return !!hasMaxNumTeamSlots_;
}
- (void) setHasMaxNumTeamSlots:(BOOL) value {
  hasMaxNumTeamSlots_ = !!value;
}
@synthesize maxNumTeamSlots;
- (BOOL) hasInitialMaxNumMonsterLimit {
  return !!hasInitialMaxNumMonsterLimit_;
}
- (void) setHasInitialMaxNumMonsterLimit:(BOOL) value {
  hasInitialMaxNumMonsterLimit_ = !!value;
}
@synthesize initialMaxNumMonsterLimit;
- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.maxNumTeamSlots = 0;
    self.initialMaxNumMonsterLimit = 0;
  }
  return self;
}
static StartupResponseProto_StartupConstants_UserMonsterConstants* defaultStartupResponseProto_StartupConstants_UserMonsterConstantsInstance = nil;
+ (void) initialize {
  if (self == [StartupResponseProto_StartupConstants_UserMonsterConstants class]) {
    defaultStartupResponseProto_StartupConstants_UserMonsterConstantsInstance = [[StartupResponseProto_StartupConstants_UserMonsterConstants alloc] init];
  }
}
+ (StartupResponseProto_StartupConstants_UserMonsterConstants*) defaultInstance {
  return defaultStartupResponseProto_StartupConstants_UserMonsterConstantsInstance;
}
- (StartupResponseProto_StartupConstants_UserMonsterConstants*) defaultInstance {
  return defaultStartupResponseProto_StartupConstants_UserMonsterConstantsInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasMaxNumTeamSlots) {
    [output writeInt32:1 value:self.maxNumTeamSlots];
  }
  if (self.hasInitialMaxNumMonsterLimit) {
    [output writeInt32:2 value:self.initialMaxNumMonsterLimit];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasMaxNumTeamSlots) {
    size += computeInt32Size(1, self.maxNumTeamSlots);
  }
  if (self.hasInitialMaxNumMonsterLimit) {
    size += computeInt32Size(2, self.initialMaxNumMonsterLimit);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (StartupResponseProto_StartupConstants_UserMonsterConstants*) parseFromData:(NSData*) data {
  return (StartupResponseProto_StartupConstants_UserMonsterConstants*)[[[StartupResponseProto_StartupConstants_UserMonsterConstants builder] mergeFromData:data] build];
}
+ (StartupResponseProto_StartupConstants_UserMonsterConstants*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (StartupResponseProto_StartupConstants_UserMonsterConstants*)[[[StartupResponseProto_StartupConstants_UserMonsterConstants builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (StartupResponseProto_StartupConstants_UserMonsterConstants*) parseFromInputStream:(NSInputStream*) input {
  return (StartupResponseProto_StartupConstants_UserMonsterConstants*)[[[StartupResponseProto_StartupConstants_UserMonsterConstants builder] mergeFromInputStream:input] build];
}
+ (StartupResponseProto_StartupConstants_UserMonsterConstants*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (StartupResponseProto_StartupConstants_UserMonsterConstants*)[[[StartupResponseProto_StartupConstants_UserMonsterConstants builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (StartupResponseProto_StartupConstants_UserMonsterConstants*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (StartupResponseProto_StartupConstants_UserMonsterConstants*)[[[StartupResponseProto_StartupConstants_UserMonsterConstants builder] mergeFromCodedInputStream:input] build];
}
+ (StartupResponseProto_StartupConstants_UserMonsterConstants*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (StartupResponseProto_StartupConstants_UserMonsterConstants*)[[[StartupResponseProto_StartupConstants_UserMonsterConstants builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (StartupResponseProto_StartupConstants_UserMonsterConstants_Builder*) builder {
  return [[[StartupResponseProto_StartupConstants_UserMonsterConstants_Builder alloc] init] autorelease];
}
+ (StartupResponseProto_StartupConstants_UserMonsterConstants_Builder*) builderWithPrototype:(StartupResponseProto_StartupConstants_UserMonsterConstants*) prototype {
  return [[StartupResponseProto_StartupConstants_UserMonsterConstants builder] mergeFrom:prototype];
}
- (StartupResponseProto_StartupConstants_UserMonsterConstants_Builder*) builder {
  return [StartupResponseProto_StartupConstants_UserMonsterConstants builder];
}
@end

@interface StartupResponseProto_StartupConstants_UserMonsterConstants_Builder()
@property (retain) StartupResponseProto_StartupConstants_UserMonsterConstants* result;
@end

@implementation StartupResponseProto_StartupConstants_UserMonsterConstants_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[StartupResponseProto_StartupConstants_UserMonsterConstants alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (StartupResponseProto_StartupConstants_UserMonsterConstants_Builder*) clear {
  self.result = [[[StartupResponseProto_StartupConstants_UserMonsterConstants alloc] init] autorelease];
  return self;
}
- (StartupResponseProto_StartupConstants_UserMonsterConstants_Builder*) clone {
  return [StartupResponseProto_StartupConstants_UserMonsterConstants builderWithPrototype:result];
}
- (StartupResponseProto_StartupConstants_UserMonsterConstants*) defaultInstance {
  return [StartupResponseProto_StartupConstants_UserMonsterConstants defaultInstance];
}
- (StartupResponseProto_StartupConstants_UserMonsterConstants*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (StartupResponseProto_StartupConstants_UserMonsterConstants*) buildPartial {
  StartupResponseProto_StartupConstants_UserMonsterConstants* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (StartupResponseProto_StartupConstants_UserMonsterConstants_Builder*) mergeFrom:(StartupResponseProto_StartupConstants_UserMonsterConstants*) other {
  if (other == [StartupResponseProto_StartupConstants_UserMonsterConstants defaultInstance]) {
    return self;
  }
  if (other.hasMaxNumTeamSlots) {
    [self setMaxNumTeamSlots:other.maxNumTeamSlots];
  }
  if (other.hasInitialMaxNumMonsterLimit) {
    [self setInitialMaxNumMonsterLimit:other.initialMaxNumMonsterLimit];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (StartupResponseProto_StartupConstants_UserMonsterConstants_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (StartupResponseProto_StartupConstants_UserMonsterConstants_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setMaxNumTeamSlots:[input readInt32]];
        break;
      }
      case 16: {
        [self setInitialMaxNumMonsterLimit:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasMaxNumTeamSlots {
  return result.hasMaxNumTeamSlots;
}
- (int32_t) maxNumTeamSlots {
  return result.maxNumTeamSlots;
}
- (StartupResponseProto_StartupConstants_UserMonsterConstants_Builder*) setMaxNumTeamSlots:(int32_t) value {
  result.hasMaxNumTeamSlots = YES;
  result.maxNumTeamSlots = value;
  return self;
}
- (StartupResponseProto_StartupConstants_UserMonsterConstants_Builder*) clearMaxNumTeamSlots {
  result.hasMaxNumTeamSlots = NO;
  result.maxNumTeamSlots = 0;
  return self;
}
- (BOOL) hasInitialMaxNumMonsterLimit {
  return result.hasInitialMaxNumMonsterLimit;
}
- (int32_t) initialMaxNumMonsterLimit {
  return result.initialMaxNumMonsterLimit;
}
- (StartupResponseProto_StartupConstants_UserMonsterConstants_Builder*) setInitialMaxNumMonsterLimit:(int32_t) value {
  result.hasInitialMaxNumMonsterLimit = YES;
  result.initialMaxNumMonsterLimit = value;
  return self;
}
- (StartupResponseProto_StartupConstants_UserMonsterConstants_Builder*) clearInitialMaxNumMonsterLimit {
  result.hasInitialMaxNumMonsterLimit = NO;
  result.initialMaxNumMonsterLimit = 0;
  return self;
}
@end

@interface StartupResponseProto_StartupConstants_MonsterConstants ()
@property Float32 cashPerHealthPoint;
@property Float32 secondsToHealPerHealthPoint;
@property Float32 elementalStrength;
@property Float32 elementalWeakness;
@end

@implementation StartupResponseProto_StartupConstants_MonsterConstants

- (BOOL) hasCashPerHealthPoint {
  return !!hasCashPerHealthPoint_;
}
- (void) setHasCashPerHealthPoint:(BOOL) value {
  hasCashPerHealthPoint_ = !!value;
}
@synthesize cashPerHealthPoint;
- (BOOL) hasSecondsToHealPerHealthPoint {
  return !!hasSecondsToHealPerHealthPoint_;
}
- (void) setHasSecondsToHealPerHealthPoint:(BOOL) value {
  hasSecondsToHealPerHealthPoint_ = !!value;
}
@synthesize secondsToHealPerHealthPoint;
- (BOOL) hasElementalStrength {
  return !!hasElementalStrength_;
}
- (void) setHasElementalStrength:(BOOL) value {
  hasElementalStrength_ = !!value;
}
@synthesize elementalStrength;
- (BOOL) hasElementalWeakness {
  return !!hasElementalWeakness_;
}
- (void) setHasElementalWeakness:(BOOL) value {
  hasElementalWeakness_ = !!value;
}
@synthesize elementalWeakness;
- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.cashPerHealthPoint = 0;
    self.secondsToHealPerHealthPoint = 0;
    self.elementalStrength = 0;
    self.elementalWeakness = 0;
  }
  return self;
}
static StartupResponseProto_StartupConstants_MonsterConstants* defaultStartupResponseProto_StartupConstants_MonsterConstantsInstance = nil;
+ (void) initialize {
  if (self == [StartupResponseProto_StartupConstants_MonsterConstants class]) {
    defaultStartupResponseProto_StartupConstants_MonsterConstantsInstance = [[StartupResponseProto_StartupConstants_MonsterConstants alloc] init];
  }
}
+ (StartupResponseProto_StartupConstants_MonsterConstants*) defaultInstance {
  return defaultStartupResponseProto_StartupConstants_MonsterConstantsInstance;
}
- (StartupResponseProto_StartupConstants_MonsterConstants*) defaultInstance {
  return defaultStartupResponseProto_StartupConstants_MonsterConstantsInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCashPerHealthPoint) {
    [output writeFloat:1 value:self.cashPerHealthPoint];
  }
  if (self.hasSecondsToHealPerHealthPoint) {
    [output writeFloat:2 value:self.secondsToHealPerHealthPoint];
  }
  if (self.hasElementalStrength) {
    [output writeFloat:3 value:self.elementalStrength];
  }
  if (self.hasElementalWeakness) {
    [output writeFloat:4 value:self.elementalWeakness];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasCashPerHealthPoint) {
    size += computeFloatSize(1, self.cashPerHealthPoint);
  }
  if (self.hasSecondsToHealPerHealthPoint) {
    size += computeFloatSize(2, self.secondsToHealPerHealthPoint);
  }
  if (self.hasElementalStrength) {
    size += computeFloatSize(3, self.elementalStrength);
  }
  if (self.hasElementalWeakness) {
    size += computeFloatSize(4, self.elementalWeakness);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (StartupResponseProto_StartupConstants_MonsterConstants*) parseFromData:(NSData*) data {
  return (StartupResponseProto_StartupConstants_MonsterConstants*)[[[StartupResponseProto_StartupConstants_MonsterConstants builder] mergeFromData:data] build];
}
+ (StartupResponseProto_StartupConstants_MonsterConstants*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (StartupResponseProto_StartupConstants_MonsterConstants*)[[[StartupResponseProto_StartupConstants_MonsterConstants builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (StartupResponseProto_StartupConstants_MonsterConstants*) parseFromInputStream:(NSInputStream*) input {
  return (StartupResponseProto_StartupConstants_MonsterConstants*)[[[StartupResponseProto_StartupConstants_MonsterConstants builder] mergeFromInputStream:input] build];
}
+ (StartupResponseProto_StartupConstants_MonsterConstants*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (StartupResponseProto_StartupConstants_MonsterConstants*)[[[StartupResponseProto_StartupConstants_MonsterConstants builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (StartupResponseProto_StartupConstants_MonsterConstants*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (StartupResponseProto_StartupConstants_MonsterConstants*)[[[StartupResponseProto_StartupConstants_MonsterConstants builder] mergeFromCodedInputStream:input] build];
}
+ (StartupResponseProto_StartupConstants_MonsterConstants*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (StartupResponseProto_StartupConstants_MonsterConstants*)[[[StartupResponseProto_StartupConstants_MonsterConstants builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (StartupResponseProto_StartupConstants_MonsterConstants_Builder*) builder {
  return [[[StartupResponseProto_StartupConstants_MonsterConstants_Builder alloc] init] autorelease];
}
+ (StartupResponseProto_StartupConstants_MonsterConstants_Builder*) builderWithPrototype:(StartupResponseProto_StartupConstants_MonsterConstants*) prototype {
  return [[StartupResponseProto_StartupConstants_MonsterConstants builder] mergeFrom:prototype];
}
- (StartupResponseProto_StartupConstants_MonsterConstants_Builder*) builder {
  return [StartupResponseProto_StartupConstants_MonsterConstants builder];
}
@end

@interface StartupResponseProto_StartupConstants_MonsterConstants_Builder()
@property (retain) StartupResponseProto_StartupConstants_MonsterConstants* result;
@end

@implementation StartupResponseProto_StartupConstants_MonsterConstants_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[StartupResponseProto_StartupConstants_MonsterConstants alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (StartupResponseProto_StartupConstants_MonsterConstants_Builder*) clear {
  self.result = [[[StartupResponseProto_StartupConstants_MonsterConstants alloc] init] autorelease];
  return self;
}
- (StartupResponseProto_StartupConstants_MonsterConstants_Builder*) clone {
  return [StartupResponseProto_StartupConstants_MonsterConstants builderWithPrototype:result];
}
- (StartupResponseProto_StartupConstants_MonsterConstants*) defaultInstance {
  return [StartupResponseProto_StartupConstants_MonsterConstants defaultInstance];
}
- (StartupResponseProto_StartupConstants_MonsterConstants*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (StartupResponseProto_StartupConstants_MonsterConstants*) buildPartial {
  StartupResponseProto_StartupConstants_MonsterConstants* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (StartupResponseProto_StartupConstants_MonsterConstants_Builder*) mergeFrom:(StartupResponseProto_StartupConstants_MonsterConstants*) other {
  if (other == [StartupResponseProto_StartupConstants_MonsterConstants defaultInstance]) {
    return self;
  }
  if (other.hasCashPerHealthPoint) {
    [self setCashPerHealthPoint:other.cashPerHealthPoint];
  }
  if (other.hasSecondsToHealPerHealthPoint) {
    [self setSecondsToHealPerHealthPoint:other.secondsToHealPerHealthPoint];
  }
  if (other.hasElementalStrength) {
    [self setElementalStrength:other.elementalStrength];
  }
  if (other.hasElementalWeakness) {
    [self setElementalWeakness:other.elementalWeakness];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (StartupResponseProto_StartupConstants_MonsterConstants_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (StartupResponseProto_StartupConstants_MonsterConstants_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 13: {
        [self setCashPerHealthPoint:[input readFloat]];
        break;
      }
      case 21: {
        [self setSecondsToHealPerHealthPoint:[input readFloat]];
        break;
      }
      case 29: {
        [self setElementalStrength:[input readFloat]];
        break;
      }
      case 37: {
        [self setElementalWeakness:[input readFloat]];
        break;
      }
    }
  }
}
- (BOOL) hasCashPerHealthPoint {
  return result.hasCashPerHealthPoint;
}
- (Float32) cashPerHealthPoint {
  return result.cashPerHealthPoint;
}
- (StartupResponseProto_StartupConstants_MonsterConstants_Builder*) setCashPerHealthPoint:(Float32) value {
  result.hasCashPerHealthPoint = YES;
  result.cashPerHealthPoint = value;
  return self;
}
- (StartupResponseProto_StartupConstants_MonsterConstants_Builder*) clearCashPerHealthPoint {
  result.hasCashPerHealthPoint = NO;
  result.cashPerHealthPoint = 0;
  return self;
}
- (BOOL) hasSecondsToHealPerHealthPoint {
  return result.hasSecondsToHealPerHealthPoint;
}
- (Float32) secondsToHealPerHealthPoint {
  return result.secondsToHealPerHealthPoint;
}
- (StartupResponseProto_StartupConstants_MonsterConstants_Builder*) setSecondsToHealPerHealthPoint:(Float32) value {
  result.hasSecondsToHealPerHealthPoint = YES;
  result.secondsToHealPerHealthPoint = value;
  return self;
}
- (StartupResponseProto_StartupConstants_MonsterConstants_Builder*) clearSecondsToHealPerHealthPoint {
  result.hasSecondsToHealPerHealthPoint = NO;
  result.secondsToHealPerHealthPoint = 0;
  return self;
}
- (BOOL) hasElementalStrength {
  return result.hasElementalStrength;
}
- (Float32) elementalStrength {
  return result.elementalStrength;
}
- (StartupResponseProto_StartupConstants_MonsterConstants_Builder*) setElementalStrength:(Float32) value {
  result.hasElementalStrength = YES;
  result.elementalStrength = value;
  return self;
}
- (StartupResponseProto_StartupConstants_MonsterConstants_Builder*) clearElementalStrength {
  result.hasElementalStrength = NO;
  result.elementalStrength = 0;
  return self;
}
- (BOOL) hasElementalWeakness {
  return result.hasElementalWeakness;
}
- (Float32) elementalWeakness {
  return result.elementalWeakness;
}
- (StartupResponseProto_StartupConstants_MonsterConstants_Builder*) setElementalWeakness:(Float32) value {
  result.hasElementalWeakness = YES;
  result.elementalWeakness = value;
  return self;
}
- (StartupResponseProto_StartupConstants_MonsterConstants_Builder*) clearElementalWeakness {
  result.hasElementalWeakness = NO;
  result.elementalWeakness = 0;
  return self;
}
@end

@interface StartupResponseProto_StartupConstants_MiniTutorialConstants ()
@property int32_t matchThreeTutorialAssetId;
@property int32_t firstPowerUpAssetId;
@property int32_t rainbowTutorialAssetId;
@property int32_t powerUpComboTutorialAssetId;
@property int32_t monsterDropTutorialAssetId;
@property int32_t elementTutorialAssetId;
@property int32_t cityId;
@property int32_t questIdForCombiningPowerUps;
@end

@implementation StartupResponseProto_StartupConstants_MiniTutorialConstants

- (BOOL) hasMatchThreeTutorialAssetId {
  return !!hasMatchThreeTutorialAssetId_;
}
- (void) setHasMatchThreeTutorialAssetId:(BOOL) value {
  hasMatchThreeTutorialAssetId_ = !!value;
}
@synthesize matchThreeTutorialAssetId;
- (BOOL) hasFirstPowerUpAssetId {
  return !!hasFirstPowerUpAssetId_;
}
- (void) setHasFirstPowerUpAssetId:(BOOL) value {
  hasFirstPowerUpAssetId_ = !!value;
}
@synthesize firstPowerUpAssetId;
- (BOOL) hasRainbowTutorialAssetId {
  return !!hasRainbowTutorialAssetId_;
}
- (void) setHasRainbowTutorialAssetId:(BOOL) value {
  hasRainbowTutorialAssetId_ = !!value;
}
@synthesize rainbowTutorialAssetId;
- (BOOL) hasPowerUpComboTutorialAssetId {
  return !!hasPowerUpComboTutorialAssetId_;
}
- (void) setHasPowerUpComboTutorialAssetId:(BOOL) value {
  hasPowerUpComboTutorialAssetId_ = !!value;
}
@synthesize powerUpComboTutorialAssetId;
- (BOOL) hasMonsterDropTutorialAssetId {
  return !!hasMonsterDropTutorialAssetId_;
}
- (void) setHasMonsterDropTutorialAssetId:(BOOL) value {
  hasMonsterDropTutorialAssetId_ = !!value;
}
@synthesize monsterDropTutorialAssetId;
- (BOOL) hasElementTutorialAssetId {
  return !!hasElementTutorialAssetId_;
}
- (void) setHasElementTutorialAssetId:(BOOL) value {
  hasElementTutorialAssetId_ = !!value;
}
@synthesize elementTutorialAssetId;
- (BOOL) hasCityId {
  return !!hasCityId_;
}
- (void) setHasCityId:(BOOL) value {
  hasCityId_ = !!value;
}
@synthesize cityId;
- (BOOL) hasQuestIdForCombiningPowerUps {
  return !!hasQuestIdForCombiningPowerUps_;
}
- (void) setHasQuestIdForCombiningPowerUps:(BOOL) value {
  hasQuestIdForCombiningPowerUps_ = !!value;
}
@synthesize questIdForCombiningPowerUps;
- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.matchThreeTutorialAssetId = 0;
    self.firstPowerUpAssetId = 0;
    self.rainbowTutorialAssetId = 0;
    self.powerUpComboTutorialAssetId = 0;
    self.monsterDropTutorialAssetId = 0;
    self.elementTutorialAssetId = 0;
    self.cityId = 0;
    self.questIdForCombiningPowerUps = 0;
  }
  return self;
}
static StartupResponseProto_StartupConstants_MiniTutorialConstants* defaultStartupResponseProto_StartupConstants_MiniTutorialConstantsInstance = nil;
+ (void) initialize {
  if (self == [StartupResponseProto_StartupConstants_MiniTutorialConstants class]) {
    defaultStartupResponseProto_StartupConstants_MiniTutorialConstantsInstance = [[StartupResponseProto_StartupConstants_MiniTutorialConstants alloc] init];
  }
}
+ (StartupResponseProto_StartupConstants_MiniTutorialConstants*) defaultInstance {
  return defaultStartupResponseProto_StartupConstants_MiniTutorialConstantsInstance;
}
- (StartupResponseProto_StartupConstants_MiniTutorialConstants*) defaultInstance {
  return defaultStartupResponseProto_StartupConstants_MiniTutorialConstantsInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasMatchThreeTutorialAssetId) {
    [output writeInt32:1 value:self.matchThreeTutorialAssetId];
  }
  if (self.hasFirstPowerUpAssetId) {
    [output writeInt32:2 value:self.firstPowerUpAssetId];
  }
  if (self.hasRainbowTutorialAssetId) {
    [output writeInt32:3 value:self.rainbowTutorialAssetId];
  }
  if (self.hasPowerUpComboTutorialAssetId) {
    [output writeInt32:4 value:self.powerUpComboTutorialAssetId];
  }
  if (self.hasMonsterDropTutorialAssetId) {
    [output writeInt32:5 value:self.monsterDropTutorialAssetId];
  }
  if (self.hasElementTutorialAssetId) {
    [output writeInt32:6 value:self.elementTutorialAssetId];
  }
  if (self.hasCityId) {
    [output writeInt32:7 value:self.cityId];
  }
  if (self.hasQuestIdForCombiningPowerUps) {
    [output writeInt32:8 value:self.questIdForCombiningPowerUps];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasMatchThreeTutorialAssetId) {
    size += computeInt32Size(1, self.matchThreeTutorialAssetId);
  }
  if (self.hasFirstPowerUpAssetId) {
    size += computeInt32Size(2, self.firstPowerUpAssetId);
  }
  if (self.hasRainbowTutorialAssetId) {
    size += computeInt32Size(3, self.rainbowTutorialAssetId);
  }
  if (self.hasPowerUpComboTutorialAssetId) {
    size += computeInt32Size(4, self.powerUpComboTutorialAssetId);
  }
  if (self.hasMonsterDropTutorialAssetId) {
    size += computeInt32Size(5, self.monsterDropTutorialAssetId);
  }
  if (self.hasElementTutorialAssetId) {
    size += computeInt32Size(6, self.elementTutorialAssetId);
  }
  if (self.hasCityId) {
    size += computeInt32Size(7, self.cityId);
  }
  if (self.hasQuestIdForCombiningPowerUps) {
    size += computeInt32Size(8, self.questIdForCombiningPowerUps);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (StartupResponseProto_StartupConstants_MiniTutorialConstants*) parseFromData:(NSData*) data {
  return (StartupResponseProto_StartupConstants_MiniTutorialConstants*)[[[StartupResponseProto_StartupConstants_MiniTutorialConstants builder] mergeFromData:data] build];
}
+ (StartupResponseProto_StartupConstants_MiniTutorialConstants*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (StartupResponseProto_StartupConstants_MiniTutorialConstants*)[[[StartupResponseProto_StartupConstants_MiniTutorialConstants builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (StartupResponseProto_StartupConstants_MiniTutorialConstants*) parseFromInputStream:(NSInputStream*) input {
  return (StartupResponseProto_StartupConstants_MiniTutorialConstants*)[[[StartupResponseProto_StartupConstants_MiniTutorialConstants builder] mergeFromInputStream:input] build];
}
+ (StartupResponseProto_StartupConstants_MiniTutorialConstants*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (StartupResponseProto_StartupConstants_MiniTutorialConstants*)[[[StartupResponseProto_StartupConstants_MiniTutorialConstants builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (StartupResponseProto_StartupConstants_MiniTutorialConstants*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (StartupResponseProto_StartupConstants_MiniTutorialConstants*)[[[StartupResponseProto_StartupConstants_MiniTutorialConstants builder] mergeFromCodedInputStream:input] build];
}
+ (StartupResponseProto_StartupConstants_MiniTutorialConstants*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (StartupResponseProto_StartupConstants_MiniTutorialConstants*)[[[StartupResponseProto_StartupConstants_MiniTutorialConstants builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (StartupResponseProto_StartupConstants_MiniTutorialConstants_Builder*) builder {
  return [[[StartupResponseProto_StartupConstants_MiniTutorialConstants_Builder alloc] init] autorelease];
}
+ (StartupResponseProto_StartupConstants_MiniTutorialConstants_Builder*) builderWithPrototype:(StartupResponseProto_StartupConstants_MiniTutorialConstants*) prototype {
  return [[StartupResponseProto_StartupConstants_MiniTutorialConstants builder] mergeFrom:prototype];
}
- (StartupResponseProto_StartupConstants_MiniTutorialConstants_Builder*) builder {
  return [StartupResponseProto_StartupConstants_MiniTutorialConstants builder];
}
@end

@interface StartupResponseProto_StartupConstants_MiniTutorialConstants_Builder()
@property (retain) StartupResponseProto_StartupConstants_MiniTutorialConstants* result;
@end

@implementation StartupResponseProto_StartupConstants_MiniTutorialConstants_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[StartupResponseProto_StartupConstants_MiniTutorialConstants alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (StartupResponseProto_StartupConstants_MiniTutorialConstants_Builder*) clear {
  self.result = [[[StartupResponseProto_StartupConstants_MiniTutorialConstants alloc] init] autorelease];
  return self;
}
- (StartupResponseProto_StartupConstants_MiniTutorialConstants_Builder*) clone {
  return [StartupResponseProto_StartupConstants_MiniTutorialConstants builderWithPrototype:result];
}
- (StartupResponseProto_StartupConstants_MiniTutorialConstants*) defaultInstance {
  return [StartupResponseProto_StartupConstants_MiniTutorialConstants defaultInstance];
}
- (StartupResponseProto_StartupConstants_MiniTutorialConstants*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (StartupResponseProto_StartupConstants_MiniTutorialConstants*) buildPartial {
  StartupResponseProto_StartupConstants_MiniTutorialConstants* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (StartupResponseProto_StartupConstants_MiniTutorialConstants_Builder*) mergeFrom:(StartupResponseProto_StartupConstants_MiniTutorialConstants*) other {
  if (other == [StartupResponseProto_StartupConstants_MiniTutorialConstants defaultInstance]) {
    return self;
  }
  if (other.hasMatchThreeTutorialAssetId) {
    [self setMatchThreeTutorialAssetId:other.matchThreeTutorialAssetId];
  }
  if (other.hasFirstPowerUpAssetId) {
    [self setFirstPowerUpAssetId:other.firstPowerUpAssetId];
  }
  if (other.hasRainbowTutorialAssetId) {
    [self setRainbowTutorialAssetId:other.rainbowTutorialAssetId];
  }
  if (other.hasPowerUpComboTutorialAssetId) {
    [self setPowerUpComboTutorialAssetId:other.powerUpComboTutorialAssetId];
  }
  if (other.hasMonsterDropTutorialAssetId) {
    [self setMonsterDropTutorialAssetId:other.monsterDropTutorialAssetId];
  }
  if (other.hasElementTutorialAssetId) {
    [self setElementTutorialAssetId:other.elementTutorialAssetId];
  }
  if (other.hasCityId) {
    [self setCityId:other.cityId];
  }
  if (other.hasQuestIdForCombiningPowerUps) {
    [self setQuestIdForCombiningPowerUps:other.questIdForCombiningPowerUps];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (StartupResponseProto_StartupConstants_MiniTutorialConstants_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (StartupResponseProto_StartupConstants_MiniTutorialConstants_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setMatchThreeTutorialAssetId:[input readInt32]];
        break;
      }
      case 16: {
        [self setFirstPowerUpAssetId:[input readInt32]];
        break;
      }
      case 24: {
        [self setRainbowTutorialAssetId:[input readInt32]];
        break;
      }
      case 32: {
        [self setPowerUpComboTutorialAssetId:[input readInt32]];
        break;
      }
      case 40: {
        [self setMonsterDropTutorialAssetId:[input readInt32]];
        break;
      }
      case 48: {
        [self setElementTutorialAssetId:[input readInt32]];
        break;
      }
      case 56: {
        [self setCityId:[input readInt32]];
        break;
      }
      case 64: {
        [self setQuestIdForCombiningPowerUps:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasMatchThreeTutorialAssetId {
  return result.hasMatchThreeTutorialAssetId;
}
- (int32_t) matchThreeTutorialAssetId {
  return result.matchThreeTutorialAssetId;
}
- (StartupResponseProto_StartupConstants_MiniTutorialConstants_Builder*) setMatchThreeTutorialAssetId:(int32_t) value {
  result.hasMatchThreeTutorialAssetId = YES;
  result.matchThreeTutorialAssetId = value;
  return self;
}
- (StartupResponseProto_StartupConstants_MiniTutorialConstants_Builder*) clearMatchThreeTutorialAssetId {
  result.hasMatchThreeTutorialAssetId = NO;
  result.matchThreeTutorialAssetId = 0;
  return self;
}
- (BOOL) hasFirstPowerUpAssetId {
  return result.hasFirstPowerUpAssetId;
}
- (int32_t) firstPowerUpAssetId {
  return result.firstPowerUpAssetId;
}
- (StartupResponseProto_StartupConstants_MiniTutorialConstants_Builder*) setFirstPowerUpAssetId:(int32_t) value {
  result.hasFirstPowerUpAssetId = YES;
  result.firstPowerUpAssetId = value;
  return self;
}
- (StartupResponseProto_StartupConstants_MiniTutorialConstants_Builder*) clearFirstPowerUpAssetId {
  result.hasFirstPowerUpAssetId = NO;
  result.firstPowerUpAssetId = 0;
  return self;
}
- (BOOL) hasRainbowTutorialAssetId {
  return result.hasRainbowTutorialAssetId;
}
- (int32_t) rainbowTutorialAssetId {
  return result.rainbowTutorialAssetId;
}
- (StartupResponseProto_StartupConstants_MiniTutorialConstants_Builder*) setRainbowTutorialAssetId:(int32_t) value {
  result.hasRainbowTutorialAssetId = YES;
  result.rainbowTutorialAssetId = value;
  return self;
}
- (StartupResponseProto_StartupConstants_MiniTutorialConstants_Builder*) clearRainbowTutorialAssetId {
  result.hasRainbowTutorialAssetId = NO;
  result.rainbowTutorialAssetId = 0;
  return self;
}
- (BOOL) hasPowerUpComboTutorialAssetId {
  return result.hasPowerUpComboTutorialAssetId;
}
- (int32_t) powerUpComboTutorialAssetId {
  return result.powerUpComboTutorialAssetId;
}
- (StartupResponseProto_StartupConstants_MiniTutorialConstants_Builder*) setPowerUpComboTutorialAssetId:(int32_t) value {
  result.hasPowerUpComboTutorialAssetId = YES;
  result.powerUpComboTutorialAssetId = value;
  return self;
}
- (StartupResponseProto_StartupConstants_MiniTutorialConstants_Builder*) clearPowerUpComboTutorialAssetId {
  result.hasPowerUpComboTutorialAssetId = NO;
  result.powerUpComboTutorialAssetId = 0;
  return self;
}
- (BOOL) hasMonsterDropTutorialAssetId {
  return result.hasMonsterDropTutorialAssetId;
}
- (int32_t) monsterDropTutorialAssetId {
  return result.monsterDropTutorialAssetId;
}
- (StartupResponseProto_StartupConstants_MiniTutorialConstants_Builder*) setMonsterDropTutorialAssetId:(int32_t) value {
  result.hasMonsterDropTutorialAssetId = YES;
  result.monsterDropTutorialAssetId = value;
  return self;
}
- (StartupResponseProto_StartupConstants_MiniTutorialConstants_Builder*) clearMonsterDropTutorialAssetId {
  result.hasMonsterDropTutorialAssetId = NO;
  result.monsterDropTutorialAssetId = 0;
  return self;
}
- (BOOL) hasElementTutorialAssetId {
  return result.hasElementTutorialAssetId;
}
- (int32_t) elementTutorialAssetId {
  return result.elementTutorialAssetId;
}
- (StartupResponseProto_StartupConstants_MiniTutorialConstants_Builder*) setElementTutorialAssetId:(int32_t) value {
  result.hasElementTutorialAssetId = YES;
  result.elementTutorialAssetId = value;
  return self;
}
- (StartupResponseProto_StartupConstants_MiniTutorialConstants_Builder*) clearElementTutorialAssetId {
  result.hasElementTutorialAssetId = NO;
  result.elementTutorialAssetId = 0;
  return self;
}
- (BOOL) hasCityId {
  return result.hasCityId;
}
- (int32_t) cityId {
  return result.cityId;
}
- (StartupResponseProto_StartupConstants_MiniTutorialConstants_Builder*) setCityId:(int32_t) value {
  result.hasCityId = YES;
  result.cityId = value;
  return self;
}
- (StartupResponseProto_StartupConstants_MiniTutorialConstants_Builder*) clearCityId {
  result.hasCityId = NO;
  result.cityId = 0;
  return self;
}
- (BOOL) hasQuestIdForCombiningPowerUps {
  return result.hasQuestIdForCombiningPowerUps;
}
- (int32_t) questIdForCombiningPowerUps {
  return result.questIdForCombiningPowerUps;
}
- (StartupResponseProto_StartupConstants_MiniTutorialConstants_Builder*) setQuestIdForCombiningPowerUps:(int32_t) value {
  result.hasQuestIdForCombiningPowerUps = YES;
  result.questIdForCombiningPowerUps = value;
  return self;
}
- (StartupResponseProto_StartupConstants_MiniTutorialConstants_Builder*) clearQuestIdForCombiningPowerUps {
  result.hasQuestIdForCombiningPowerUps = NO;
  result.questIdForCombiningPowerUps = 0;
  return self;
}
@end

@interface StartupResponseProto_StartupConstants_Builder()
@property (retain) StartupResponseProto_StartupConstants* result;
@end

@implementation StartupResponseProto_StartupConstants_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[StartupResponseProto_StartupConstants alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (StartupResponseProto_StartupConstants_Builder*) clear {
  self.result = [[[StartupResponseProto_StartupConstants alloc] init] autorelease];
  return self;
}
- (StartupResponseProto_StartupConstants_Builder*) clone {
  return [StartupResponseProto_StartupConstants builderWithPrototype:result];
}
- (StartupResponseProto_StartupConstants*) defaultInstance {
  return [StartupResponseProto_StartupConstants defaultInstance];
}
- (StartupResponseProto_StartupConstants*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (StartupResponseProto_StartupConstants*) buildPartial {
  StartupResponseProto_StartupConstants* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (StartupResponseProto_StartupConstants_Builder*) mergeFrom:(StartupResponseProto_StartupConstants*) other {
  if (other == [StartupResponseProto_StartupConstants defaultInstance]) {
    return self;
  }
  if (other.mutableInAppPurchasePackagesList.count > 0) {
    if (result.mutableInAppPurchasePackagesList == nil) {
      result.mutableInAppPurchasePackagesList = [NSMutableArray array];
    }
    [result.mutableInAppPurchasePackagesList addObjectsFromArray:other.mutableInAppPurchasePackagesList];
  }
  if (other.hasMaxLevelForUser) {
    [self setMaxLevelForUser:other.maxLevelForUser];
  }
  if (other.hasMaxNumOfSingleStruct) {
    [self setMaxNumOfSingleStruct:other.maxNumOfSingleStruct];
  }
  if (other.mutableAnimatedSpriteOffsetsList.count > 0) {
    if (result.mutableAnimatedSpriteOffsetsList == nil) {
      result.mutableAnimatedSpriteOffsetsList = [NSMutableArray array];
    }
    [result.mutableAnimatedSpriteOffsetsList addObjectsFromArray:other.mutableAnimatedSpriteOffsetsList];
  }
  if (other.hasMinNameLength) {
    [self setMinNameLength:other.minNameLength];
  }
  if (other.hasMaxNameLength) {
    [self setMaxNameLength:other.maxNameLength];
  }
  if (other.hasMaxLengthOfChatString) {
    [self setMaxLengthOfChatString:other.maxLengthOfChatString];
  }
  if (other.hasClanConstants) {
    [self mergeClanConstants:other.clanConstants];
  }
  if (other.hasDownloadableNibConstants) {
    [self mergeDownloadableNibConstants:other.downloadableNibConstants];
  }
  if (other.hasNumHoursBeforeReshowingGoldSale) {
    [self setNumHoursBeforeReshowingGoldSale:other.numHoursBeforeReshowingGoldSale];
  }
  if (other.hasLevelToShowRateUsPopup) {
    [self setLevelToShowRateUsPopup:other.levelToShowRateUsPopup];
  }
  if (other.hasTouramentConstants) {
    [self mergeTouramentConstants:other.touramentConstants];
  }
  if (other.hasFbConnectRewardDiamonds) {
    [self setFbConnectRewardDiamonds:other.fbConnectRewardDiamonds];
  }
  if (other.hasFaqFileName) {
    [self setFaqFileName:other.faqFileName];
  }
  if (other.hasAdminChatUserProto) {
    [self mergeAdminChatUserProto:other.adminChatUserProto];
  }
  if (other.hasNumBeginnerSalesAllowed) {
    [self setNumBeginnerSalesAllowed:other.numBeginnerSalesAllowed];
  }
  if (other.hasUserMonsterConstants) {
    [self mergeUserMonsterConstants:other.userMonsterConstants];
  }
  if (other.hasMonsterConstants) {
    [self mergeMonsterConstants:other.monsterConstants];
  }
  if (other.hasMinutesPerGem) {
    [self setMinutesPerGem:other.minutesPerGem];
  }
  if (other.hasPvpRequiredMinLvl) {
    [self setPvpRequiredMinLvl:other.pvpRequiredMinLvl];
  }
  if (other.hasGemsPerResource) {
    [self setGemsPerResource:other.gemsPerResource];
  }
  if (other.hasContinueBattleGemCostMultiplier) {
    [self setContinueBattleGemCostMultiplier:other.continueBattleGemCostMultiplier];
  }
  if (other.hasAddAllFbFriends) {
    [self setAddAllFbFriends:other.addAllFbFriends];
  }
  if (other.hasMiniTuts) {
    [self mergeMiniTuts:other.miniTuts];
  }
  if (other.hasMaxObstacles) {
    [self setMaxObstacles:other.maxObstacles];
  }
  if (other.hasMinutesPerObstacle) {
    [self setMinutesPerObstacle:other.minutesPerObstacle];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (StartupResponseProto_StartupConstants_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (StartupResponseProto_StartupConstants_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        InAppPurchasePackageProto_Builder* subBuilder = [InAppPurchasePackageProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addInAppPurchasePackages:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setMaxLevelForUser:[input readInt32]];
        break;
      }
      case 24: {
        [self setMaxNumOfSingleStruct:[input readInt32]];
        break;
      }
      case 34: {
        StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto_Builder* subBuilder = [StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addAnimatedSpriteOffsets:[subBuilder buildPartial]];
        break;
      }
      case 40: {
        [self setMinNameLength:[input readInt32]];
        break;
      }
      case 48: {
        [self setMaxNameLength:[input readInt32]];
        break;
      }
      case 56: {
        [self setMaxLengthOfChatString:[input readInt32]];
        break;
      }
      case 66: {
        StartupResponseProto_StartupConstants_ClanConstants_Builder* subBuilder = [StartupResponseProto_StartupConstants_ClanConstants builder];
        if (self.hasClanConstants) {
          [subBuilder mergeFrom:self.clanConstants];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setClanConstants:[subBuilder buildPartial]];
        break;
      }
      case 74: {
        StartupResponseProto_StartupConstants_DownloadableNibConstants_Builder* subBuilder = [StartupResponseProto_StartupConstants_DownloadableNibConstants builder];
        if (self.hasDownloadableNibConstants) {
          [subBuilder mergeFrom:self.downloadableNibConstants];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setDownloadableNibConstants:[subBuilder buildPartial]];
        break;
      }
      case 80: {
        [self setNumHoursBeforeReshowingGoldSale:[input readInt32]];
        break;
      }
      case 88: {
        [self setLevelToShowRateUsPopup:[input readInt32]];
        break;
      }
      case 98: {
        StartupResponseProto_StartupConstants_TournamentConstants_Builder* subBuilder = [StartupResponseProto_StartupConstants_TournamentConstants builder];
        if (self.hasTouramentConstants) {
          [subBuilder mergeFrom:self.touramentConstants];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setTouramentConstants:[subBuilder buildPartial]];
        break;
      }
      case 104: {
        [self setFbConnectRewardDiamonds:[input readInt32]];
        break;
      }
      case 114: {
        [self setFaqFileName:[input readString]];
        break;
      }
      case 122: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasAdminChatUserProto) {
          [subBuilder mergeFrom:self.adminChatUserProto];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setAdminChatUserProto:[subBuilder buildPartial]];
        break;
      }
      case 128: {
        [self setNumBeginnerSalesAllowed:[input readInt32]];
        break;
      }
      case 138: {
        StartupResponseProto_StartupConstants_UserMonsterConstants_Builder* subBuilder = [StartupResponseProto_StartupConstants_UserMonsterConstants builder];
        if (self.hasUserMonsterConstants) {
          [subBuilder mergeFrom:self.userMonsterConstants];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setUserMonsterConstants:[subBuilder buildPartial]];
        break;
      }
      case 146: {
        StartupResponseProto_StartupConstants_MonsterConstants_Builder* subBuilder = [StartupResponseProto_StartupConstants_MonsterConstants builder];
        if (self.hasMonsterConstants) {
          [subBuilder mergeFrom:self.monsterConstants];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setMonsterConstants:[subBuilder buildPartial]];
        break;
      }
      case 157: {
        [self setMinutesPerGem:[input readFloat]];
        break;
      }
      case 160: {
        [self setPvpRequiredMinLvl:[input readInt32]];
        break;
      }
      case 173: {
        [self setGemsPerResource:[input readFloat]];
        break;
      }
      case 181: {
        [self setContinueBattleGemCostMultiplier:[input readFloat]];
        break;
      }
      case 184: {
        [self setAddAllFbFriends:[input readBool]];
        break;
      }
      case 194: {
        StartupResponseProto_StartupConstants_MiniTutorialConstants_Builder* subBuilder = [StartupResponseProto_StartupConstants_MiniTutorialConstants builder];
        if (self.hasMiniTuts) {
          [subBuilder mergeFrom:self.miniTuts];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setMiniTuts:[subBuilder buildPartial]];
        break;
      }
      case 200: {
        [self setMaxObstacles:[input readInt32]];
        break;
      }
      case 208: {
        [self setMinutesPerObstacle:[input readInt32]];
        break;
      }
    }
  }
}
- (NSArray*) inAppPurchasePackagesList {
  if (result.mutableInAppPurchasePackagesList == nil) { return [NSArray array]; }
  return result.mutableInAppPurchasePackagesList;
}
- (InAppPurchasePackageProto*) inAppPurchasePackagesAtIndex:(int32_t) index {
  return [result inAppPurchasePackagesAtIndex:index];
}
- (StartupResponseProto_StartupConstants_Builder*) replaceInAppPurchasePackagesAtIndex:(int32_t) index with:(InAppPurchasePackageProto*) value {
  [result.mutableInAppPurchasePackagesList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (StartupResponseProto_StartupConstants_Builder*) addAllInAppPurchasePackages:(NSArray*) values {
  if (result.mutableInAppPurchasePackagesList == nil) {
    result.mutableInAppPurchasePackagesList = [NSMutableArray array];
  }
  [result.mutableInAppPurchasePackagesList addObjectsFromArray:values];
  return self;
}
- (StartupResponseProto_StartupConstants_Builder*) clearInAppPurchasePackagesList {
  result.mutableInAppPurchasePackagesList = nil;
  return self;
}
- (StartupResponseProto_StartupConstants_Builder*) addInAppPurchasePackages:(InAppPurchasePackageProto*) value {
  if (result.mutableInAppPurchasePackagesList == nil) {
    result.mutableInAppPurchasePackagesList = [NSMutableArray array];
  }
  [result.mutableInAppPurchasePackagesList addObject:value];
  return self;
}
- (BOOL) hasMaxLevelForUser {
  return result.hasMaxLevelForUser;
}
- (int32_t) maxLevelForUser {
  return result.maxLevelForUser;
}
- (StartupResponseProto_StartupConstants_Builder*) setMaxLevelForUser:(int32_t) value {
  result.hasMaxLevelForUser = YES;
  result.maxLevelForUser = value;
  return self;
}
- (StartupResponseProto_StartupConstants_Builder*) clearMaxLevelForUser {
  result.hasMaxLevelForUser = NO;
  result.maxLevelForUser = 0;
  return self;
}
- (BOOL) hasMaxNumOfSingleStruct {
  return result.hasMaxNumOfSingleStruct;
}
- (int32_t) maxNumOfSingleStruct {
  return result.maxNumOfSingleStruct;
}
- (StartupResponseProto_StartupConstants_Builder*) setMaxNumOfSingleStruct:(int32_t) value {
  result.hasMaxNumOfSingleStruct = YES;
  result.maxNumOfSingleStruct = value;
  return self;
}
- (StartupResponseProto_StartupConstants_Builder*) clearMaxNumOfSingleStruct {
  result.hasMaxNumOfSingleStruct = NO;
  result.maxNumOfSingleStruct = 0;
  return self;
}
- (NSArray*) animatedSpriteOffsetsList {
  if (result.mutableAnimatedSpriteOffsetsList == nil) { return [NSArray array]; }
  return result.mutableAnimatedSpriteOffsetsList;
}
- (StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto*) animatedSpriteOffsetsAtIndex:(int32_t) index {
  return [result animatedSpriteOffsetsAtIndex:index];
}
- (StartupResponseProto_StartupConstants_Builder*) replaceAnimatedSpriteOffsetsAtIndex:(int32_t) index with:(StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto*) value {
  [result.mutableAnimatedSpriteOffsetsList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (StartupResponseProto_StartupConstants_Builder*) addAllAnimatedSpriteOffsets:(NSArray*) values {
  if (result.mutableAnimatedSpriteOffsetsList == nil) {
    result.mutableAnimatedSpriteOffsetsList = [NSMutableArray array];
  }
  [result.mutableAnimatedSpriteOffsetsList addObjectsFromArray:values];
  return self;
}
- (StartupResponseProto_StartupConstants_Builder*) clearAnimatedSpriteOffsetsList {
  result.mutableAnimatedSpriteOffsetsList = nil;
  return self;
}
- (StartupResponseProto_StartupConstants_Builder*) addAnimatedSpriteOffsets:(StartupResponseProto_StartupConstants_AnimatedSpriteOffsetProto*) value {
  if (result.mutableAnimatedSpriteOffsetsList == nil) {
    result.mutableAnimatedSpriteOffsetsList = [NSMutableArray array];
  }
  [result.mutableAnimatedSpriteOffsetsList addObject:value];
  return self;
}
- (BOOL) hasMinNameLength {
  return result.hasMinNameLength;
}
- (int32_t) minNameLength {
  return result.minNameLength;
}
- (StartupResponseProto_StartupConstants_Builder*) setMinNameLength:(int32_t) value {
  result.hasMinNameLength = YES;
  result.minNameLength = value;
  return self;
}
- (StartupResponseProto_StartupConstants_Builder*) clearMinNameLength {
  result.hasMinNameLength = NO;
  result.minNameLength = 0;
  return self;
}
- (BOOL) hasMaxNameLength {
  return result.hasMaxNameLength;
}
- (int32_t) maxNameLength {
  return result.maxNameLength;
}
- (StartupResponseProto_StartupConstants_Builder*) setMaxNameLength:(int32_t) value {
  result.hasMaxNameLength = YES;
  result.maxNameLength = value;
  return self;
}
- (StartupResponseProto_StartupConstants_Builder*) clearMaxNameLength {
  result.hasMaxNameLength = NO;
  result.maxNameLength = 0;
  return self;
}
- (BOOL) hasMaxLengthOfChatString {
  return result.hasMaxLengthOfChatString;
}
- (int32_t) maxLengthOfChatString {
  return result.maxLengthOfChatString;
}
- (StartupResponseProto_StartupConstants_Builder*) setMaxLengthOfChatString:(int32_t) value {
  result.hasMaxLengthOfChatString = YES;
  result.maxLengthOfChatString = value;
  return self;
}
- (StartupResponseProto_StartupConstants_Builder*) clearMaxLengthOfChatString {
  result.hasMaxLengthOfChatString = NO;
  result.maxLengthOfChatString = 0;
  return self;
}
- (BOOL) hasClanConstants {
  return result.hasClanConstants;
}
- (StartupResponseProto_StartupConstants_ClanConstants*) clanConstants {
  return result.clanConstants;
}
- (StartupResponseProto_StartupConstants_Builder*) setClanConstants:(StartupResponseProto_StartupConstants_ClanConstants*) value {
  result.hasClanConstants = YES;
  result.clanConstants = value;
  return self;
}
- (StartupResponseProto_StartupConstants_Builder*) setClanConstantsBuilder:(StartupResponseProto_StartupConstants_ClanConstants_Builder*) builderForValue {
  return [self setClanConstants:[builderForValue build]];
}
- (StartupResponseProto_StartupConstants_Builder*) mergeClanConstants:(StartupResponseProto_StartupConstants_ClanConstants*) value {
  if (result.hasClanConstants &&
      result.clanConstants != [StartupResponseProto_StartupConstants_ClanConstants defaultInstance]) {
    result.clanConstants =
      [[[StartupResponseProto_StartupConstants_ClanConstants builderWithPrototype:result.clanConstants] mergeFrom:value] buildPartial];
  } else {
    result.clanConstants = value;
  }
  result.hasClanConstants = YES;
  return self;
}
- (StartupResponseProto_StartupConstants_Builder*) clearClanConstants {
  result.hasClanConstants = NO;
  result.clanConstants = [StartupResponseProto_StartupConstants_ClanConstants defaultInstance];
  return self;
}
- (BOOL) hasDownloadableNibConstants {
  return result.hasDownloadableNibConstants;
}
- (StartupResponseProto_StartupConstants_DownloadableNibConstants*) downloadableNibConstants {
  return result.downloadableNibConstants;
}
- (StartupResponseProto_StartupConstants_Builder*) setDownloadableNibConstants:(StartupResponseProto_StartupConstants_DownloadableNibConstants*) value {
  result.hasDownloadableNibConstants = YES;
  result.downloadableNibConstants = value;
  return self;
}
- (StartupResponseProto_StartupConstants_Builder*) setDownloadableNibConstantsBuilder:(StartupResponseProto_StartupConstants_DownloadableNibConstants_Builder*) builderForValue {
  return [self setDownloadableNibConstants:[builderForValue build]];
}
- (StartupResponseProto_StartupConstants_Builder*) mergeDownloadableNibConstants:(StartupResponseProto_StartupConstants_DownloadableNibConstants*) value {
  if (result.hasDownloadableNibConstants &&
      result.downloadableNibConstants != [StartupResponseProto_StartupConstants_DownloadableNibConstants defaultInstance]) {
    result.downloadableNibConstants =
      [[[StartupResponseProto_StartupConstants_DownloadableNibConstants builderWithPrototype:result.downloadableNibConstants] mergeFrom:value] buildPartial];
  } else {
    result.downloadableNibConstants = value;
  }
  result.hasDownloadableNibConstants = YES;
  return self;
}
- (StartupResponseProto_StartupConstants_Builder*) clearDownloadableNibConstants {
  result.hasDownloadableNibConstants = NO;
  result.downloadableNibConstants = [StartupResponseProto_StartupConstants_DownloadableNibConstants defaultInstance];
  return self;
}
- (BOOL) hasNumHoursBeforeReshowingGoldSale {
  return result.hasNumHoursBeforeReshowingGoldSale;
}
- (int32_t) numHoursBeforeReshowingGoldSale {
  return result.numHoursBeforeReshowingGoldSale;
}
- (StartupResponseProto_StartupConstants_Builder*) setNumHoursBeforeReshowingGoldSale:(int32_t) value {
  result.hasNumHoursBeforeReshowingGoldSale = YES;
  result.numHoursBeforeReshowingGoldSale = value;
  return self;
}
- (StartupResponseProto_StartupConstants_Builder*) clearNumHoursBeforeReshowingGoldSale {
  result.hasNumHoursBeforeReshowingGoldSale = NO;
  result.numHoursBeforeReshowingGoldSale = 0;
  return self;
}
- (BOOL) hasLevelToShowRateUsPopup {
  return result.hasLevelToShowRateUsPopup;
}
- (int32_t) levelToShowRateUsPopup {
  return result.levelToShowRateUsPopup;
}
- (StartupResponseProto_StartupConstants_Builder*) setLevelToShowRateUsPopup:(int32_t) value {
  result.hasLevelToShowRateUsPopup = YES;
  result.levelToShowRateUsPopup = value;
  return self;
}
- (StartupResponseProto_StartupConstants_Builder*) clearLevelToShowRateUsPopup {
  result.hasLevelToShowRateUsPopup = NO;
  result.levelToShowRateUsPopup = 0;
  return self;
}
- (BOOL) hasTouramentConstants {
  return result.hasTouramentConstants;
}
- (StartupResponseProto_StartupConstants_TournamentConstants*) touramentConstants {
  return result.touramentConstants;
}
- (StartupResponseProto_StartupConstants_Builder*) setTouramentConstants:(StartupResponseProto_StartupConstants_TournamentConstants*) value {
  result.hasTouramentConstants = YES;
  result.touramentConstants = value;
  return self;
}
- (StartupResponseProto_StartupConstants_Builder*) setTouramentConstantsBuilder:(StartupResponseProto_StartupConstants_TournamentConstants_Builder*) builderForValue {
  return [self setTouramentConstants:[builderForValue build]];
}
- (StartupResponseProto_StartupConstants_Builder*) mergeTouramentConstants:(StartupResponseProto_StartupConstants_TournamentConstants*) value {
  if (result.hasTouramentConstants &&
      result.touramentConstants != [StartupResponseProto_StartupConstants_TournamentConstants defaultInstance]) {
    result.touramentConstants =
      [[[StartupResponseProto_StartupConstants_TournamentConstants builderWithPrototype:result.touramentConstants] mergeFrom:value] buildPartial];
  } else {
    result.touramentConstants = value;
  }
  result.hasTouramentConstants = YES;
  return self;
}
- (StartupResponseProto_StartupConstants_Builder*) clearTouramentConstants {
  result.hasTouramentConstants = NO;
  result.touramentConstants = [StartupResponseProto_StartupConstants_TournamentConstants defaultInstance];
  return self;
}
- (BOOL) hasFbConnectRewardDiamonds {
  return result.hasFbConnectRewardDiamonds;
}
- (int32_t) fbConnectRewardDiamonds {
  return result.fbConnectRewardDiamonds;
}
- (StartupResponseProto_StartupConstants_Builder*) setFbConnectRewardDiamonds:(int32_t) value {
  result.hasFbConnectRewardDiamonds = YES;
  result.fbConnectRewardDiamonds = value;
  return self;
}
- (StartupResponseProto_StartupConstants_Builder*) clearFbConnectRewardDiamonds {
  result.hasFbConnectRewardDiamonds = NO;
  result.fbConnectRewardDiamonds = 0;
  return self;
}
- (BOOL) hasFaqFileName {
  return result.hasFaqFileName;
}
- (NSString*) faqFileName {
  return result.faqFileName;
}
- (StartupResponseProto_StartupConstants_Builder*) setFaqFileName:(NSString*) value {
  result.hasFaqFileName = YES;
  result.faqFileName = value;
  return self;
}
- (StartupResponseProto_StartupConstants_Builder*) clearFaqFileName {
  result.hasFaqFileName = NO;
  result.faqFileName = @"";
  return self;
}
- (BOOL) hasAdminChatUserProto {
  return result.hasAdminChatUserProto;
}
- (MinimumUserProto*) adminChatUserProto {
  return result.adminChatUserProto;
}
- (StartupResponseProto_StartupConstants_Builder*) setAdminChatUserProto:(MinimumUserProto*) value {
  result.hasAdminChatUserProto = YES;
  result.adminChatUserProto = value;
  return self;
}
- (StartupResponseProto_StartupConstants_Builder*) setAdminChatUserProtoBuilder:(MinimumUserProto_Builder*) builderForValue {
  return [self setAdminChatUserProto:[builderForValue build]];
}
- (StartupResponseProto_StartupConstants_Builder*) mergeAdminChatUserProto:(MinimumUserProto*) value {
  if (result.hasAdminChatUserProto &&
      result.adminChatUserProto != [MinimumUserProto defaultInstance]) {
    result.adminChatUserProto =
      [[[MinimumUserProto builderWithPrototype:result.adminChatUserProto] mergeFrom:value] buildPartial];
  } else {
    result.adminChatUserProto = value;
  }
  result.hasAdminChatUserProto = YES;
  return self;
}
- (StartupResponseProto_StartupConstants_Builder*) clearAdminChatUserProto {
  result.hasAdminChatUserProto = NO;
  result.adminChatUserProto = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasNumBeginnerSalesAllowed {
  return result.hasNumBeginnerSalesAllowed;
}
- (int32_t) numBeginnerSalesAllowed {
  return result.numBeginnerSalesAllowed;
}
- (StartupResponseProto_StartupConstants_Builder*) setNumBeginnerSalesAllowed:(int32_t) value {
  result.hasNumBeginnerSalesAllowed = YES;
  result.numBeginnerSalesAllowed = value;
  return self;
}
- (StartupResponseProto_StartupConstants_Builder*) clearNumBeginnerSalesAllowed {
  result.hasNumBeginnerSalesAllowed = NO;
  result.numBeginnerSalesAllowed = 0;
  return self;
}
- (BOOL) hasUserMonsterConstants {
  return result.hasUserMonsterConstants;
}
- (StartupResponseProto_StartupConstants_UserMonsterConstants*) userMonsterConstants {
  return result.userMonsterConstants;
}
- (StartupResponseProto_StartupConstants_Builder*) setUserMonsterConstants:(StartupResponseProto_StartupConstants_UserMonsterConstants*) value {
  result.hasUserMonsterConstants = YES;
  result.userMonsterConstants = value;
  return self;
}
- (StartupResponseProto_StartupConstants_Builder*) setUserMonsterConstantsBuilder:(StartupResponseProto_StartupConstants_UserMonsterConstants_Builder*) builderForValue {
  return [self setUserMonsterConstants:[builderForValue build]];
}
- (StartupResponseProto_StartupConstants_Builder*) mergeUserMonsterConstants:(StartupResponseProto_StartupConstants_UserMonsterConstants*) value {
  if (result.hasUserMonsterConstants &&
      result.userMonsterConstants != [StartupResponseProto_StartupConstants_UserMonsterConstants defaultInstance]) {
    result.userMonsterConstants =
      [[[StartupResponseProto_StartupConstants_UserMonsterConstants builderWithPrototype:result.userMonsterConstants] mergeFrom:value] buildPartial];
  } else {
    result.userMonsterConstants = value;
  }
  result.hasUserMonsterConstants = YES;
  return self;
}
- (StartupResponseProto_StartupConstants_Builder*) clearUserMonsterConstants {
  result.hasUserMonsterConstants = NO;
  result.userMonsterConstants = [StartupResponseProto_StartupConstants_UserMonsterConstants defaultInstance];
  return self;
}
- (BOOL) hasMonsterConstants {
  return result.hasMonsterConstants;
}
- (StartupResponseProto_StartupConstants_MonsterConstants*) monsterConstants {
  return result.monsterConstants;
}
- (StartupResponseProto_StartupConstants_Builder*) setMonsterConstants:(StartupResponseProto_StartupConstants_MonsterConstants*) value {
  result.hasMonsterConstants = YES;
  result.monsterConstants = value;
  return self;
}
- (StartupResponseProto_StartupConstants_Builder*) setMonsterConstantsBuilder:(StartupResponseProto_StartupConstants_MonsterConstants_Builder*) builderForValue {
  return [self setMonsterConstants:[builderForValue build]];
}
- (StartupResponseProto_StartupConstants_Builder*) mergeMonsterConstants:(StartupResponseProto_StartupConstants_MonsterConstants*) value {
  if (result.hasMonsterConstants &&
      result.monsterConstants != [StartupResponseProto_StartupConstants_MonsterConstants defaultInstance]) {
    result.monsterConstants =
      [[[StartupResponseProto_StartupConstants_MonsterConstants builderWithPrototype:result.monsterConstants] mergeFrom:value] buildPartial];
  } else {
    result.monsterConstants = value;
  }
  result.hasMonsterConstants = YES;
  return self;
}
- (StartupResponseProto_StartupConstants_Builder*) clearMonsterConstants {
  result.hasMonsterConstants = NO;
  result.monsterConstants = [StartupResponseProto_StartupConstants_MonsterConstants defaultInstance];
  return self;
}
- (BOOL) hasMinutesPerGem {
  return result.hasMinutesPerGem;
}
- (Float32) minutesPerGem {
  return result.minutesPerGem;
}
- (StartupResponseProto_StartupConstants_Builder*) setMinutesPerGem:(Float32) value {
  result.hasMinutesPerGem = YES;
  result.minutesPerGem = value;
  return self;
}
- (StartupResponseProto_StartupConstants_Builder*) clearMinutesPerGem {
  result.hasMinutesPerGem = NO;
  result.minutesPerGem = 0;
  return self;
}
- (BOOL) hasPvpRequiredMinLvl {
  return result.hasPvpRequiredMinLvl;
}
- (int32_t) pvpRequiredMinLvl {
  return result.pvpRequiredMinLvl;
}
- (StartupResponseProto_StartupConstants_Builder*) setPvpRequiredMinLvl:(int32_t) value {
  result.hasPvpRequiredMinLvl = YES;
  result.pvpRequiredMinLvl = value;
  return self;
}
- (StartupResponseProto_StartupConstants_Builder*) clearPvpRequiredMinLvl {
  result.hasPvpRequiredMinLvl = NO;
  result.pvpRequiredMinLvl = 0;
  return self;
}
- (BOOL) hasGemsPerResource {
  return result.hasGemsPerResource;
}
- (Float32) gemsPerResource {
  return result.gemsPerResource;
}
- (StartupResponseProto_StartupConstants_Builder*) setGemsPerResource:(Float32) value {
  result.hasGemsPerResource = YES;
  result.gemsPerResource = value;
  return self;
}
- (StartupResponseProto_StartupConstants_Builder*) clearGemsPerResource {
  result.hasGemsPerResource = NO;
  result.gemsPerResource = 0;
  return self;
}
- (BOOL) hasContinueBattleGemCostMultiplier {
  return result.hasContinueBattleGemCostMultiplier;
}
- (Float32) continueBattleGemCostMultiplier {
  return result.continueBattleGemCostMultiplier;
}
- (StartupResponseProto_StartupConstants_Builder*) setContinueBattleGemCostMultiplier:(Float32) value {
  result.hasContinueBattleGemCostMultiplier = YES;
  result.continueBattleGemCostMultiplier = value;
  return self;
}
- (StartupResponseProto_StartupConstants_Builder*) clearContinueBattleGemCostMultiplier {
  result.hasContinueBattleGemCostMultiplier = NO;
  result.continueBattleGemCostMultiplier = 0;
  return self;
}
- (BOOL) hasAddAllFbFriends {
  return result.hasAddAllFbFriends;
}
- (BOOL) addAllFbFriends {
  return result.addAllFbFriends;
}
- (StartupResponseProto_StartupConstants_Builder*) setAddAllFbFriends:(BOOL) value {
  result.hasAddAllFbFriends = YES;
  result.addAllFbFriends = value;
  return self;
}
- (StartupResponseProto_StartupConstants_Builder*) clearAddAllFbFriends {
  result.hasAddAllFbFriends = NO;
  result.addAllFbFriends = NO;
  return self;
}
- (BOOL) hasMiniTuts {
  return result.hasMiniTuts;
}
- (StartupResponseProto_StartupConstants_MiniTutorialConstants*) miniTuts {
  return result.miniTuts;
}
- (StartupResponseProto_StartupConstants_Builder*) setMiniTuts:(StartupResponseProto_StartupConstants_MiniTutorialConstants*) value {
  result.hasMiniTuts = YES;
  result.miniTuts = value;
  return self;
}
- (StartupResponseProto_StartupConstants_Builder*) setMiniTutsBuilder:(StartupResponseProto_StartupConstants_MiniTutorialConstants_Builder*) builderForValue {
  return [self setMiniTuts:[builderForValue build]];
}
- (StartupResponseProto_StartupConstants_Builder*) mergeMiniTuts:(StartupResponseProto_StartupConstants_MiniTutorialConstants*) value {
  if (result.hasMiniTuts &&
      result.miniTuts != [StartupResponseProto_StartupConstants_MiniTutorialConstants defaultInstance]) {
    result.miniTuts =
      [[[StartupResponseProto_StartupConstants_MiniTutorialConstants builderWithPrototype:result.miniTuts] mergeFrom:value] buildPartial];
  } else {
    result.miniTuts = value;
  }
  result.hasMiniTuts = YES;
  return self;
}
- (StartupResponseProto_StartupConstants_Builder*) clearMiniTuts {
  result.hasMiniTuts = NO;
  result.miniTuts = [StartupResponseProto_StartupConstants_MiniTutorialConstants defaultInstance];
  return self;
}
- (BOOL) hasMaxObstacles {
  return result.hasMaxObstacles;
}
- (int32_t) maxObstacles {
  return result.maxObstacles;
}
- (StartupResponseProto_StartupConstants_Builder*) setMaxObstacles:(int32_t) value {
  result.hasMaxObstacles = YES;
  result.maxObstacles = value;
  return self;
}
- (StartupResponseProto_StartupConstants_Builder*) clearMaxObstacles {
  result.hasMaxObstacles = NO;
  result.maxObstacles = 0;
  return self;
}
- (BOOL) hasMinutesPerObstacle {
  return result.hasMinutesPerObstacle;
}
- (int32_t) minutesPerObstacle {
  return result.minutesPerObstacle;
}
- (StartupResponseProto_StartupConstants_Builder*) setMinutesPerObstacle:(int32_t) value {
  result.hasMinutesPerObstacle = YES;
  result.minutesPerObstacle = value;
  return self;
}
- (StartupResponseProto_StartupConstants_Builder*) clearMinutesPerObstacle {
  result.hasMinutesPerObstacle = NO;
  result.minutesPerObstacle = 0;
  return self;
}
@end

@interface StartupResponseProto_TutorialConstants ()
@property int32_t startingMonsterId;
@property int32_t enemyMonsterId;
@property int32_t enemyBossMonsterId;
@property int32_t markZmonsterId;
@property (retain) NSMutableArray* mutableTutorialStructuresList;
@property (retain) NSMutableArray* mutableStructureIdsToBeBuilltList;
@property int32_t cityId;
@property (retain) NSMutableArray* mutableCityOneElementsList;
@property int32_t cityElementIdForFirstDungeon;
@property int32_t cityElementIdForSecondDungeon;
@property int32_t cashInit;
@property int32_t oilInit;
@property int32_t gemsInit;
@property (retain) NSMutableArray* mutableTutorialObstaclesList;
@end

@implementation StartupResponseProto_TutorialConstants

- (BOOL) hasStartingMonsterId {
  return !!hasStartingMonsterId_;
}
- (void) setHasStartingMonsterId:(BOOL) value {
  hasStartingMonsterId_ = !!value;
}
@synthesize startingMonsterId;
- (BOOL) hasEnemyMonsterId {
  return !!hasEnemyMonsterId_;
}
- (void) setHasEnemyMonsterId:(BOOL) value {
  hasEnemyMonsterId_ = !!value;
}
@synthesize enemyMonsterId;
- (BOOL) hasEnemyBossMonsterId {
  return !!hasEnemyBossMonsterId_;
}
- (void) setHasEnemyBossMonsterId:(BOOL) value {
  hasEnemyBossMonsterId_ = !!value;
}
@synthesize enemyBossMonsterId;
- (BOOL) hasMarkZmonsterId {
  return !!hasMarkZmonsterId_;
}
- (void) setHasMarkZmonsterId:(BOOL) value {
  hasMarkZmonsterId_ = !!value;
}
@synthesize markZmonsterId;
@synthesize mutableTutorialStructuresList;
@synthesize mutableStructureIdsToBeBuilltList;
- (BOOL) hasCityId {
  return !!hasCityId_;
}
- (void) setHasCityId:(BOOL) value {
  hasCityId_ = !!value;
}
@synthesize cityId;
@synthesize mutableCityOneElementsList;
- (BOOL) hasCityElementIdForFirstDungeon {
  return !!hasCityElementIdForFirstDungeon_;
}
- (void) setHasCityElementIdForFirstDungeon:(BOOL) value {
  hasCityElementIdForFirstDungeon_ = !!value;
}
@synthesize cityElementIdForFirstDungeon;
- (BOOL) hasCityElementIdForSecondDungeon {
  return !!hasCityElementIdForSecondDungeon_;
}
- (void) setHasCityElementIdForSecondDungeon:(BOOL) value {
  hasCityElementIdForSecondDungeon_ = !!value;
}
@synthesize cityElementIdForSecondDungeon;
- (BOOL) hasCashInit {
  return !!hasCashInit_;
}
- (void) setHasCashInit:(BOOL) value {
  hasCashInit_ = !!value;
}
@synthesize cashInit;
- (BOOL) hasOilInit {
  return !!hasOilInit_;
}
- (void) setHasOilInit:(BOOL) value {
  hasOilInit_ = !!value;
}
@synthesize oilInit;
- (BOOL) hasGemsInit {
  return !!hasGemsInit_;
}
- (void) setHasGemsInit:(BOOL) value {
  hasGemsInit_ = !!value;
}
@synthesize gemsInit;
@synthesize mutableTutorialObstaclesList;
- (void) dealloc {
  self.mutableTutorialStructuresList = nil;
  self.mutableStructureIdsToBeBuilltList = nil;
  self.mutableCityOneElementsList = nil;
  self.mutableTutorialObstaclesList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.startingMonsterId = 0;
    self.enemyMonsterId = 0;
    self.enemyBossMonsterId = 0;
    self.markZmonsterId = 0;
    self.cityId = 0;
    self.cityElementIdForFirstDungeon = 0;
    self.cityElementIdForSecondDungeon = 0;
    self.cashInit = 0;
    self.oilInit = 0;
    self.gemsInit = 0;
  }
  return self;
}
static StartupResponseProto_TutorialConstants* defaultStartupResponseProto_TutorialConstantsInstance = nil;
+ (void) initialize {
  if (self == [StartupResponseProto_TutorialConstants class]) {
    defaultStartupResponseProto_TutorialConstantsInstance = [[StartupResponseProto_TutorialConstants alloc] init];
  }
}
+ (StartupResponseProto_TutorialConstants*) defaultInstance {
  return defaultStartupResponseProto_TutorialConstantsInstance;
}
- (StartupResponseProto_TutorialConstants*) defaultInstance {
  return defaultStartupResponseProto_TutorialConstantsInstance;
}
- (NSArray*) tutorialStructuresList {
  return mutableTutorialStructuresList;
}
- (TutorialStructProto*) tutorialStructuresAtIndex:(int32_t) index {
  id value = [mutableTutorialStructuresList objectAtIndex:index];
  return value;
}
- (NSArray*) structureIdsToBeBuilltList {
  return mutableStructureIdsToBeBuilltList;
}
- (int32_t) structureIdsToBeBuilltAtIndex:(int32_t) index {
  id value = [mutableStructureIdsToBeBuilltList objectAtIndex:index];
  return [value intValue];
}
- (NSArray*) cityOneElementsList {
  return mutableCityOneElementsList;
}
- (CityElementProto*) cityOneElementsAtIndex:(int32_t) index {
  id value = [mutableCityOneElementsList objectAtIndex:index];
  return value;
}
- (NSArray*) tutorialObstaclesList {
  return mutableTutorialObstaclesList;
}
- (MinimumObstacleProto*) tutorialObstaclesAtIndex:(int32_t) index {
  id value = [mutableTutorialObstaclesList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasStartingMonsterId) {
    [output writeInt32:1 value:self.startingMonsterId];
  }
  if (self.hasEnemyMonsterId) {
    [output writeInt32:2 value:self.enemyMonsterId];
  }
  for (TutorialStructProto* element in self.tutorialStructuresList) {
    [output writeMessage:3 value:element];
  }
  for (NSNumber* value in self.mutableStructureIdsToBeBuilltList) {
    [output writeInt32:4 value:[value intValue]];
  }
  if (self.hasCityId) {
    [output writeInt32:5 value:self.cityId];
  }
  for (CityElementProto* element in self.cityOneElementsList) {
    [output writeMessage:6 value:element];
  }
  if (self.hasCityElementIdForFirstDungeon) {
    [output writeInt32:7 value:self.cityElementIdForFirstDungeon];
  }
  if (self.hasCityElementIdForSecondDungeon) {
    [output writeInt32:8 value:self.cityElementIdForSecondDungeon];
  }
  if (self.hasEnemyBossMonsterId) {
    [output writeInt32:9 value:self.enemyBossMonsterId];
  }
  if (self.hasMarkZmonsterId) {
    [output writeInt32:10 value:self.markZmonsterId];
  }
  if (self.hasCashInit) {
    [output writeInt32:11 value:self.cashInit];
  }
  if (self.hasOilInit) {
    [output writeInt32:12 value:self.oilInit];
  }
  if (self.hasGemsInit) {
    [output writeInt32:13 value:self.gemsInit];
  }
  for (MinimumObstacleProto* element in self.tutorialObstaclesList) {
    [output writeMessage:14 value:element];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasStartingMonsterId) {
    size += computeInt32Size(1, self.startingMonsterId);
  }
  if (self.hasEnemyMonsterId) {
    size += computeInt32Size(2, self.enemyMonsterId);
  }
  for (TutorialStructProto* element in self.tutorialStructuresList) {
    size += computeMessageSize(3, element);
  }
  {
    int32_t dataSize = 0;
    for (NSNumber* value in self.mutableStructureIdsToBeBuilltList) {
      dataSize += computeInt32SizeNoTag([value intValue]);
    }
    size += dataSize;
    size += 1 * self.mutableStructureIdsToBeBuilltList.count;
  }
  if (self.hasCityId) {
    size += computeInt32Size(5, self.cityId);
  }
  for (CityElementProto* element in self.cityOneElementsList) {
    size += computeMessageSize(6, element);
  }
  if (self.hasCityElementIdForFirstDungeon) {
    size += computeInt32Size(7, self.cityElementIdForFirstDungeon);
  }
  if (self.hasCityElementIdForSecondDungeon) {
    size += computeInt32Size(8, self.cityElementIdForSecondDungeon);
  }
  if (self.hasEnemyBossMonsterId) {
    size += computeInt32Size(9, self.enemyBossMonsterId);
  }
  if (self.hasMarkZmonsterId) {
    size += computeInt32Size(10, self.markZmonsterId);
  }
  if (self.hasCashInit) {
    size += computeInt32Size(11, self.cashInit);
  }
  if (self.hasOilInit) {
    size += computeInt32Size(12, self.oilInit);
  }
  if (self.hasGemsInit) {
    size += computeInt32Size(13, self.gemsInit);
  }
  for (MinimumObstacleProto* element in self.tutorialObstaclesList) {
    size += computeMessageSize(14, element);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (StartupResponseProto_TutorialConstants*) parseFromData:(NSData*) data {
  return (StartupResponseProto_TutorialConstants*)[[[StartupResponseProto_TutorialConstants builder] mergeFromData:data] build];
}
+ (StartupResponseProto_TutorialConstants*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (StartupResponseProto_TutorialConstants*)[[[StartupResponseProto_TutorialConstants builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (StartupResponseProto_TutorialConstants*) parseFromInputStream:(NSInputStream*) input {
  return (StartupResponseProto_TutorialConstants*)[[[StartupResponseProto_TutorialConstants builder] mergeFromInputStream:input] build];
}
+ (StartupResponseProto_TutorialConstants*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (StartupResponseProto_TutorialConstants*)[[[StartupResponseProto_TutorialConstants builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (StartupResponseProto_TutorialConstants*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (StartupResponseProto_TutorialConstants*)[[[StartupResponseProto_TutorialConstants builder] mergeFromCodedInputStream:input] build];
}
+ (StartupResponseProto_TutorialConstants*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (StartupResponseProto_TutorialConstants*)[[[StartupResponseProto_TutorialConstants builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (StartupResponseProto_TutorialConstants_Builder*) builder {
  return [[[StartupResponseProto_TutorialConstants_Builder alloc] init] autorelease];
}
+ (StartupResponseProto_TutorialConstants_Builder*) builderWithPrototype:(StartupResponseProto_TutorialConstants*) prototype {
  return [[StartupResponseProto_TutorialConstants builder] mergeFrom:prototype];
}
- (StartupResponseProto_TutorialConstants_Builder*) builder {
  return [StartupResponseProto_TutorialConstants builder];
}
@end

@interface StartupResponseProto_TutorialConstants_Builder()
@property (retain) StartupResponseProto_TutorialConstants* result;
@end

@implementation StartupResponseProto_TutorialConstants_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[StartupResponseProto_TutorialConstants alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (StartupResponseProto_TutorialConstants_Builder*) clear {
  self.result = [[[StartupResponseProto_TutorialConstants alloc] init] autorelease];
  return self;
}
- (StartupResponseProto_TutorialConstants_Builder*) clone {
  return [StartupResponseProto_TutorialConstants builderWithPrototype:result];
}
- (StartupResponseProto_TutorialConstants*) defaultInstance {
  return [StartupResponseProto_TutorialConstants defaultInstance];
}
- (StartupResponseProto_TutorialConstants*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (StartupResponseProto_TutorialConstants*) buildPartial {
  StartupResponseProto_TutorialConstants* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (StartupResponseProto_TutorialConstants_Builder*) mergeFrom:(StartupResponseProto_TutorialConstants*) other {
  if (other == [StartupResponseProto_TutorialConstants defaultInstance]) {
    return self;
  }
  if (other.hasStartingMonsterId) {
    [self setStartingMonsterId:other.startingMonsterId];
  }
  if (other.hasEnemyMonsterId) {
    [self setEnemyMonsterId:other.enemyMonsterId];
  }
  if (other.hasEnemyBossMonsterId) {
    [self setEnemyBossMonsterId:other.enemyBossMonsterId];
  }
  if (other.hasMarkZmonsterId) {
    [self setMarkZmonsterId:other.markZmonsterId];
  }
  if (other.mutableTutorialStructuresList.count > 0) {
    if (result.mutableTutorialStructuresList == nil) {
      result.mutableTutorialStructuresList = [NSMutableArray array];
    }
    [result.mutableTutorialStructuresList addObjectsFromArray:other.mutableTutorialStructuresList];
  }
  if (other.mutableStructureIdsToBeBuilltList.count > 0) {
    if (result.mutableStructureIdsToBeBuilltList == nil) {
      result.mutableStructureIdsToBeBuilltList = [NSMutableArray array];
    }
    [result.mutableStructureIdsToBeBuilltList addObjectsFromArray:other.mutableStructureIdsToBeBuilltList];
  }
  if (other.hasCityId) {
    [self setCityId:other.cityId];
  }
  if (other.mutableCityOneElementsList.count > 0) {
    if (result.mutableCityOneElementsList == nil) {
      result.mutableCityOneElementsList = [NSMutableArray array];
    }
    [result.mutableCityOneElementsList addObjectsFromArray:other.mutableCityOneElementsList];
  }
  if (other.hasCityElementIdForFirstDungeon) {
    [self setCityElementIdForFirstDungeon:other.cityElementIdForFirstDungeon];
  }
  if (other.hasCityElementIdForSecondDungeon) {
    [self setCityElementIdForSecondDungeon:other.cityElementIdForSecondDungeon];
  }
  if (other.hasCashInit) {
    [self setCashInit:other.cashInit];
  }
  if (other.hasOilInit) {
    [self setOilInit:other.oilInit];
  }
  if (other.hasGemsInit) {
    [self setGemsInit:other.gemsInit];
  }
  if (other.mutableTutorialObstaclesList.count > 0) {
    if (result.mutableTutorialObstaclesList == nil) {
      result.mutableTutorialObstaclesList = [NSMutableArray array];
    }
    [result.mutableTutorialObstaclesList addObjectsFromArray:other.mutableTutorialObstaclesList];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (StartupResponseProto_TutorialConstants_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (StartupResponseProto_TutorialConstants_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setStartingMonsterId:[input readInt32]];
        break;
      }
      case 16: {
        [self setEnemyMonsterId:[input readInt32]];
        break;
      }
      case 26: {
        TutorialStructProto_Builder* subBuilder = [TutorialStructProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addTutorialStructures:[subBuilder buildPartial]];
        break;
      }
      case 32: {
        [self addStructureIdsToBeBuillt:[input readInt32]];
        break;
      }
      case 40: {
        [self setCityId:[input readInt32]];
        break;
      }
      case 50: {
        CityElementProto_Builder* subBuilder = [CityElementProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addCityOneElements:[subBuilder buildPartial]];
        break;
      }
      case 56: {
        [self setCityElementIdForFirstDungeon:[input readInt32]];
        break;
      }
      case 64: {
        [self setCityElementIdForSecondDungeon:[input readInt32]];
        break;
      }
      case 72: {
        [self setEnemyBossMonsterId:[input readInt32]];
        break;
      }
      case 80: {
        [self setMarkZmonsterId:[input readInt32]];
        break;
      }
      case 88: {
        [self setCashInit:[input readInt32]];
        break;
      }
      case 96: {
        [self setOilInit:[input readInt32]];
        break;
      }
      case 104: {
        [self setGemsInit:[input readInt32]];
        break;
      }
      case 114: {
        MinimumObstacleProto_Builder* subBuilder = [MinimumObstacleProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addTutorialObstacles:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasStartingMonsterId {
  return result.hasStartingMonsterId;
}
- (int32_t) startingMonsterId {
  return result.startingMonsterId;
}
- (StartupResponseProto_TutorialConstants_Builder*) setStartingMonsterId:(int32_t) value {
  result.hasStartingMonsterId = YES;
  result.startingMonsterId = value;
  return self;
}
- (StartupResponseProto_TutorialConstants_Builder*) clearStartingMonsterId {
  result.hasStartingMonsterId = NO;
  result.startingMonsterId = 0;
  return self;
}
- (BOOL) hasEnemyMonsterId {
  return result.hasEnemyMonsterId;
}
- (int32_t) enemyMonsterId {
  return result.enemyMonsterId;
}
- (StartupResponseProto_TutorialConstants_Builder*) setEnemyMonsterId:(int32_t) value {
  result.hasEnemyMonsterId = YES;
  result.enemyMonsterId = value;
  return self;
}
- (StartupResponseProto_TutorialConstants_Builder*) clearEnemyMonsterId {
  result.hasEnemyMonsterId = NO;
  result.enemyMonsterId = 0;
  return self;
}
- (BOOL) hasEnemyBossMonsterId {
  return result.hasEnemyBossMonsterId;
}
- (int32_t) enemyBossMonsterId {
  return result.enemyBossMonsterId;
}
- (StartupResponseProto_TutorialConstants_Builder*) setEnemyBossMonsterId:(int32_t) value {
  result.hasEnemyBossMonsterId = YES;
  result.enemyBossMonsterId = value;
  return self;
}
- (StartupResponseProto_TutorialConstants_Builder*) clearEnemyBossMonsterId {
  result.hasEnemyBossMonsterId = NO;
  result.enemyBossMonsterId = 0;
  return self;
}
- (BOOL) hasMarkZmonsterId {
  return result.hasMarkZmonsterId;
}
- (int32_t) markZmonsterId {
  return result.markZmonsterId;
}
- (StartupResponseProto_TutorialConstants_Builder*) setMarkZmonsterId:(int32_t) value {
  result.hasMarkZmonsterId = YES;
  result.markZmonsterId = value;
  return self;
}
- (StartupResponseProto_TutorialConstants_Builder*) clearMarkZmonsterId {
  result.hasMarkZmonsterId = NO;
  result.markZmonsterId = 0;
  return self;
}
- (NSArray*) tutorialStructuresList {
  if (result.mutableTutorialStructuresList == nil) { return [NSArray array]; }
  return result.mutableTutorialStructuresList;
}
- (TutorialStructProto*) tutorialStructuresAtIndex:(int32_t) index {
  return [result tutorialStructuresAtIndex:index];
}
- (StartupResponseProto_TutorialConstants_Builder*) replaceTutorialStructuresAtIndex:(int32_t) index with:(TutorialStructProto*) value {
  [result.mutableTutorialStructuresList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (StartupResponseProto_TutorialConstants_Builder*) addAllTutorialStructures:(NSArray*) values {
  if (result.mutableTutorialStructuresList == nil) {
    result.mutableTutorialStructuresList = [NSMutableArray array];
  }
  [result.mutableTutorialStructuresList addObjectsFromArray:values];
  return self;
}
- (StartupResponseProto_TutorialConstants_Builder*) clearTutorialStructuresList {
  result.mutableTutorialStructuresList = nil;
  return self;
}
- (StartupResponseProto_TutorialConstants_Builder*) addTutorialStructures:(TutorialStructProto*) value {
  if (result.mutableTutorialStructuresList == nil) {
    result.mutableTutorialStructuresList = [NSMutableArray array];
  }
  [result.mutableTutorialStructuresList addObject:value];
  return self;
}
- (NSArray*) structureIdsToBeBuilltList {
  if (result.mutableStructureIdsToBeBuilltList == nil) {
    return [NSArray array];
  }
  return result.mutableStructureIdsToBeBuilltList;
}
- (int32_t) structureIdsToBeBuilltAtIndex:(int32_t) index {
  return [result structureIdsToBeBuilltAtIndex:index];
}
- (StartupResponseProto_TutorialConstants_Builder*) replaceStructureIdsToBeBuilltAtIndex:(int32_t) index with:(int32_t) value {
  [result.mutableStructureIdsToBeBuilltList replaceObjectAtIndex:index withObject:[NSNumber numberWithInt:value]];
  return self;
}
- (StartupResponseProto_TutorialConstants_Builder*) addStructureIdsToBeBuillt:(int32_t) value {
  if (result.mutableStructureIdsToBeBuilltList == nil) {
    result.mutableStructureIdsToBeBuilltList = [NSMutableArray array];
  }
  [result.mutableStructureIdsToBeBuilltList addObject:[NSNumber numberWithInt:value]];
  return self;
}
- (StartupResponseProto_TutorialConstants_Builder*) addAllStructureIdsToBeBuillt:(NSArray*) values {
  if (result.mutableStructureIdsToBeBuilltList == nil) {
    result.mutableStructureIdsToBeBuilltList = [NSMutableArray array];
  }
  [result.mutableStructureIdsToBeBuilltList addObjectsFromArray:values];
  return self;
}
- (StartupResponseProto_TutorialConstants_Builder*) clearStructureIdsToBeBuilltList {
  result.mutableStructureIdsToBeBuilltList = nil;
  return self;
}
- (BOOL) hasCityId {
  return result.hasCityId;
}
- (int32_t) cityId {
  return result.cityId;
}
- (StartupResponseProto_TutorialConstants_Builder*) setCityId:(int32_t) value {
  result.hasCityId = YES;
  result.cityId = value;
  return self;
}
- (StartupResponseProto_TutorialConstants_Builder*) clearCityId {
  result.hasCityId = NO;
  result.cityId = 0;
  return self;
}
- (NSArray*) cityOneElementsList {
  if (result.mutableCityOneElementsList == nil) { return [NSArray array]; }
  return result.mutableCityOneElementsList;
}
- (CityElementProto*) cityOneElementsAtIndex:(int32_t) index {
  return [result cityOneElementsAtIndex:index];
}
- (StartupResponseProto_TutorialConstants_Builder*) replaceCityOneElementsAtIndex:(int32_t) index with:(CityElementProto*) value {
  [result.mutableCityOneElementsList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (StartupResponseProto_TutorialConstants_Builder*) addAllCityOneElements:(NSArray*) values {
  if (result.mutableCityOneElementsList == nil) {
    result.mutableCityOneElementsList = [NSMutableArray array];
  }
  [result.mutableCityOneElementsList addObjectsFromArray:values];
  return self;
}
- (StartupResponseProto_TutorialConstants_Builder*) clearCityOneElementsList {
  result.mutableCityOneElementsList = nil;
  return self;
}
- (StartupResponseProto_TutorialConstants_Builder*) addCityOneElements:(CityElementProto*) value {
  if (result.mutableCityOneElementsList == nil) {
    result.mutableCityOneElementsList = [NSMutableArray array];
  }
  [result.mutableCityOneElementsList addObject:value];
  return self;
}
- (BOOL) hasCityElementIdForFirstDungeon {
  return result.hasCityElementIdForFirstDungeon;
}
- (int32_t) cityElementIdForFirstDungeon {
  return result.cityElementIdForFirstDungeon;
}
- (StartupResponseProto_TutorialConstants_Builder*) setCityElementIdForFirstDungeon:(int32_t) value {
  result.hasCityElementIdForFirstDungeon = YES;
  result.cityElementIdForFirstDungeon = value;
  return self;
}
- (StartupResponseProto_TutorialConstants_Builder*) clearCityElementIdForFirstDungeon {
  result.hasCityElementIdForFirstDungeon = NO;
  result.cityElementIdForFirstDungeon = 0;
  return self;
}
- (BOOL) hasCityElementIdForSecondDungeon {
  return result.hasCityElementIdForSecondDungeon;
}
- (int32_t) cityElementIdForSecondDungeon {
  return result.cityElementIdForSecondDungeon;
}
- (StartupResponseProto_TutorialConstants_Builder*) setCityElementIdForSecondDungeon:(int32_t) value {
  result.hasCityElementIdForSecondDungeon = YES;
  result.cityElementIdForSecondDungeon = value;
  return self;
}
- (StartupResponseProto_TutorialConstants_Builder*) clearCityElementIdForSecondDungeon {
  result.hasCityElementIdForSecondDungeon = NO;
  result.cityElementIdForSecondDungeon = 0;
  return self;
}
- (BOOL) hasCashInit {
  return result.hasCashInit;
}
- (int32_t) cashInit {
  return result.cashInit;
}
- (StartupResponseProto_TutorialConstants_Builder*) setCashInit:(int32_t) value {
  result.hasCashInit = YES;
  result.cashInit = value;
  return self;
}
- (StartupResponseProto_TutorialConstants_Builder*) clearCashInit {
  result.hasCashInit = NO;
  result.cashInit = 0;
  return self;
}
- (BOOL) hasOilInit {
  return result.hasOilInit;
}
- (int32_t) oilInit {
  return result.oilInit;
}
- (StartupResponseProto_TutorialConstants_Builder*) setOilInit:(int32_t) value {
  result.hasOilInit = YES;
  result.oilInit = value;
  return self;
}
- (StartupResponseProto_TutorialConstants_Builder*) clearOilInit {
  result.hasOilInit = NO;
  result.oilInit = 0;
  return self;
}
- (BOOL) hasGemsInit {
  return result.hasGemsInit;
}
- (int32_t) gemsInit {
  return result.gemsInit;
}
- (StartupResponseProto_TutorialConstants_Builder*) setGemsInit:(int32_t) value {
  result.hasGemsInit = YES;
  result.gemsInit = value;
  return self;
}
- (StartupResponseProto_TutorialConstants_Builder*) clearGemsInit {
  result.hasGemsInit = NO;
  result.gemsInit = 0;
  return self;
}
- (NSArray*) tutorialObstaclesList {
  if (result.mutableTutorialObstaclesList == nil) { return [NSArray array]; }
  return result.mutableTutorialObstaclesList;
}
- (MinimumObstacleProto*) tutorialObstaclesAtIndex:(int32_t) index {
  return [result tutorialObstaclesAtIndex:index];
}
- (StartupResponseProto_TutorialConstants_Builder*) replaceTutorialObstaclesAtIndex:(int32_t) index with:(MinimumObstacleProto*) value {
  [result.mutableTutorialObstaclesList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (StartupResponseProto_TutorialConstants_Builder*) addAllTutorialObstacles:(NSArray*) values {
  if (result.mutableTutorialObstaclesList == nil) {
    result.mutableTutorialObstaclesList = [NSMutableArray array];
  }
  [result.mutableTutorialObstaclesList addObjectsFromArray:values];
  return self;
}
- (StartupResponseProto_TutorialConstants_Builder*) clearTutorialObstaclesList {
  result.mutableTutorialObstaclesList = nil;
  return self;
}
- (StartupResponseProto_TutorialConstants_Builder*) addTutorialObstacles:(MinimumObstacleProto*) value {
  if (result.mutableTutorialObstaclesList == nil) {
    result.mutableTutorialObstaclesList = [NSMutableArray array];
  }
  [result.mutableTutorialObstaclesList addObject:value];
  return self;
}
@end

@interface StartupResponseProto_Builder()
@property (retain) StartupResponseProto* result;
@end

@implementation StartupResponseProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[StartupResponseProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (StartupResponseProto_Builder*) clear {
  self.result = [[[StartupResponseProto alloc] init] autorelease];
  return self;
}
- (StartupResponseProto_Builder*) clone {
  return [StartupResponseProto builderWithPrototype:result];
}
- (StartupResponseProto*) defaultInstance {
  return [StartupResponseProto defaultInstance];
}
- (StartupResponseProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (StartupResponseProto*) buildPartial {
  StartupResponseProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (StartupResponseProto_Builder*) mergeFrom:(StartupResponseProto*) other {
  if (other == [StartupResponseProto defaultInstance]) {
    return self;
  }
  if (other.hasServerTimeMillis) {
    [self setServerTimeMillis:other.serverTimeMillis];
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasStartupStatus) {
    [self setStartupStatus:other.startupStatus];
  }
  if (other.hasUpdateStatus) {
    [self setUpdateStatus:other.updateStatus];
  }
  if (other.hasStartupConstants) {
    [self mergeStartupConstants:other.startupConstants];
  }
  if (other.hasTutorialConstants) {
    [self mergeTutorialConstants:other.tutorialConstants];
  }
  if (other.mutableUserQuestsList.count > 0) {
    if (result.mutableUserQuestsList == nil) {
      result.mutableUserQuestsList = [NSMutableArray array];
    }
    [result.mutableUserQuestsList addObjectsFromArray:other.mutableUserQuestsList];
  }
  if (other.mutableRedeemedQuestIdsList.count > 0) {
    if (result.mutableRedeemedQuestIdsList == nil) {
      result.mutableRedeemedQuestIdsList = [NSMutableArray array];
    }
    [result.mutableRedeemedQuestIdsList addObjectsFromArray:other.mutableRedeemedQuestIdsList];
  }
  if (other.mutableUserClanInfoList.count > 0) {
    if (result.mutableUserClanInfoList == nil) {
      result.mutableUserClanInfoList = [NSMutableArray array];
    }
    [result.mutableUserClanInfoList addObjectsFromArray:other.mutableUserClanInfoList];
  }
  if (other.mutableCompletedTaskIdsList.count > 0) {
    if (result.mutableCompletedTaskIdsList == nil) {
      result.mutableCompletedTaskIdsList = [NSMutableArray array];
    }
    [result.mutableCompletedTaskIdsList addObjectsFromArray:other.mutableCompletedTaskIdsList];
  }
  if (other.hasAppStoreUrl) {
    [self setAppStoreUrl:other.appStoreUrl];
  }
  if (other.hasReviewPageUrl) {
    [self setReviewPageUrl:other.reviewPageUrl];
  }
  if (other.hasReviewPageConfirmationMessage) {
    [self setReviewPageConfirmationMessage:other.reviewPageConfirmationMessage];
  }
  if (other.hasPlayerHasBoughtInAppPurchase) {
    [self setPlayerHasBoughtInAppPurchase:other.playerHasBoughtInAppPurchase];
  }
  if (other.mutableAttackNotificationsList.count > 0) {
    if (result.mutableAttackNotificationsList == nil) {
      result.mutableAttackNotificationsList = [NSMutableArray array];
    }
    [result.mutableAttackNotificationsList addObjectsFromArray:other.mutableAttackNotificationsList];
  }
  if (other.mutableReferralNotificationsList.count > 0) {
    if (result.mutableReferralNotificationsList == nil) {
      result.mutableReferralNotificationsList = [NSMutableArray array];
    }
    [result.mutableReferralNotificationsList addObjectsFromArray:other.mutableReferralNotificationsList];
  }
  if (other.mutableNoticesToPlayersList.count > 0) {
    if (result.mutableNoticesToPlayersList == nil) {
      result.mutableNoticesToPlayersList = [NSMutableArray array];
    }
    [result.mutableNoticesToPlayersList addObjectsFromArray:other.mutableNoticesToPlayersList];
  }
  if (other.mutableGlobalChatsList.count > 0) {
    if (result.mutableGlobalChatsList == nil) {
      result.mutableGlobalChatsList = [NSMutableArray array];
    }
    [result.mutableGlobalChatsList addObjectsFromArray:other.mutableGlobalChatsList];
  }
  if (other.mutableClanChatsList.count > 0) {
    if (result.mutableClanChatsList == nil) {
      result.mutableClanChatsList = [NSMutableArray array];
    }
    [result.mutableClanChatsList addObjectsFromArray:other.mutableClanChatsList];
  }
  if (other.mutablePcppList.count > 0) {
    if (result.mutablePcppList == nil) {
      result.mutablePcppList = [NSMutableArray array];
    }
    [result.mutablePcppList addObjectsFromArray:other.mutablePcppList];
  }
  if (other.mutableUsersMonstersList.count > 0) {
    if (result.mutableUsersMonstersList == nil) {
      result.mutableUsersMonstersList = [NSMutableArray array];
    }
    [result.mutableUsersMonstersList addObjectsFromArray:other.mutableUsersMonstersList];
  }
  if (other.mutableMonstersHealingList.count > 0) {
    if (result.mutableMonstersHealingList == nil) {
      result.mutableMonstersHealingList = [NSMutableArray array];
    }
    [result.mutableMonstersHealingList addObjectsFromArray:other.mutableMonstersHealingList];
  }
  if (other.hasEnhancements) {
    [self mergeEnhancements:other.enhancements];
  }
  if (other.hasEvolution) {
    [self mergeEvolution:other.evolution];
  }
  if (other.mutableRareBoosterPurchasesList.count > 0) {
    if (result.mutableRareBoosterPurchasesList == nil) {
      result.mutableRareBoosterPurchasesList = [NSMutableArray array];
    }
    [result.mutableRareBoosterPurchasesList addObjectsFromArray:other.mutableRareBoosterPurchasesList];
  }
  if (other.hasKabamNaid) {
    [self setKabamNaid:other.kabamNaid];
  }
  if (other.mutableInvitesToMeForSlotsList.count > 0) {
    if (result.mutableInvitesToMeForSlotsList == nil) {
      result.mutableInvitesToMeForSlotsList = [NSMutableArray array];
    }
    [result.mutableInvitesToMeForSlotsList addObjectsFromArray:other.mutableInvitesToMeForSlotsList];
  }
  if (other.mutableInvitesFromMeForSlotsList.count > 0) {
    if (result.mutableInvitesFromMeForSlotsList == nil) {
      result.mutableInvitesFromMeForSlotsList = [NSMutableArray array];
    }
    [result.mutableInvitesFromMeForSlotsList addObjectsFromArray:other.mutableInvitesFromMeForSlotsList];
  }
  if (other.hasStaticDataStuffProto) {
    [self mergeStaticDataStuffProto:other.staticDataStuffProto];
  }
  if (other.mutableTaskIdForCurrentCityBossList.count > 0) {
    if (result.mutableTaskIdForCurrentCityBossList == nil) {
      result.mutableTaskIdForCurrentCityBossList = [NSMutableArray array];
    }
    [result.mutableTaskIdForCurrentCityBossList addObjectsFromArray:other.mutableTaskIdForCurrentCityBossList];
  }
  if (other.mutableUserEventsList.count > 0) {
    if (result.mutableUserEventsList == nil) {
      result.mutableUserEventsList = [NSMutableArray array];
    }
    [result.mutableUserEventsList addObjectsFromArray:other.mutableUserEventsList];
  }
  if (other.hasCurRaidClanInfo) {
    [self mergeCurRaidClanInfo:other.curRaidClanInfo];
  }
  if (other.mutableCurRaidClanUserInfoList.count > 0) {
    if (result.mutableCurRaidClanUserInfoList == nil) {
      result.mutableCurRaidClanUserInfoList = [NSMutableArray array];
    }
    [result.mutableCurRaidClanUserInfoList addObjectsFromArray:other.mutableCurRaidClanUserInfoList];
  }
  if (other.mutableRaidStageHistoryList.count > 0) {
    if (result.mutableRaidStageHistoryList == nil) {
      result.mutableRaidStageHistoryList = [NSMutableArray array];
    }
    [result.mutableRaidStageHistoryList addObjectsFromArray:other.mutableRaidStageHistoryList];
  }
  if (other.mutableRecentNbattlesList.count > 0) {
    if (result.mutableRecentNbattlesList == nil) {
      result.mutableRecentNbattlesList = [NSMutableArray array];
    }
    [result.mutableRecentNbattlesList addObjectsFromArray:other.mutableRecentNbattlesList];
  }
  if (other.hasCurTask) {
    [self mergeCurTask:other.curTask];
  }
  if (other.mutableCurTaskStagesList.count > 0) {
    if (result.mutableCurTaskStagesList == nil) {
      result.mutableCurTaskStagesList = [NSMutableArray array];
    }
    [result.mutableCurTaskStagesList addObjectsFromArray:other.mutableCurTaskStagesList];
  }
  if (other.mutableUserAchievementsList.count > 0) {
    if (result.mutableUserAchievementsList == nil) {
      result.mutableUserAchievementsList = [NSMutableArray array];
    }
    [result.mutableUserAchievementsList addObjectsFromArray:other.mutableUserAchievementsList];
  }
  if (other.mutableUserMiniJobProtosList.count > 0) {
    if (result.mutableUserMiniJobProtosList == nil) {
      result.mutableUserMiniJobProtosList = [NSMutableArray array];
    }
    [result.mutableUserMiniJobProtosList addObjectsFromArray:other.mutableUserMiniJobProtosList];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (StartupResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (StartupResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setServerTimeMillis:[input readInt64]];
        break;
      }
      case 18: {
        FullUserProto_Builder* subBuilder = [FullUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 24: {
        int32_t value = [input readEnum];
        if (StartupResponseProto_StartupStatusIsValidValue(value)) {
          [self setStartupStatus:value];
        } else {
          [unknownFields mergeVarintField:3 value:value];
        }
        break;
      }
      case 32: {
        int32_t value = [input readEnum];
        if (StartupResponseProto_UpdateStatusIsValidValue(value)) {
          [self setUpdateStatus:value];
        } else {
          [unknownFields mergeVarintField:4 value:value];
        }
        break;
      }
      case 42: {
        StartupResponseProto_StartupConstants_Builder* subBuilder = [StartupResponseProto_StartupConstants builder];
        if (self.hasStartupConstants) {
          [subBuilder mergeFrom:self.startupConstants];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setStartupConstants:[subBuilder buildPartial]];
        break;
      }
      case 50: {
        FullUserQuestProto_Builder* subBuilder = [FullUserQuestProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addUserQuests:[subBuilder buildPartial]];
        break;
      }
      case 58: {
        FullUserClanProto_Builder* subBuilder = [FullUserClanProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addUserClanInfo:[subBuilder buildPartial]];
        break;
      }
      case 64: {
        [self addCompletedTaskIds:[input readInt32]];
        break;
      }
      case 74: {
        [self setAppStoreUrl:[input readString]];
        break;
      }
      case 82: {
        [self setReviewPageUrl:[input readString]];
        break;
      }
      case 90: {
        [self setReviewPageConfirmationMessage:[input readString]];
        break;
      }
      case 96: {
        [self setPlayerHasBoughtInAppPurchase:[input readBool]];
        break;
      }
      case 106: {
        StartupResponseProto_AttackedNotificationProto_Builder* subBuilder = [StartupResponseProto_AttackedNotificationProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addAttackNotifications:[subBuilder buildPartial]];
        break;
      }
      case 114: {
        StartupResponseProto_ReferralNotificationProto_Builder* subBuilder = [StartupResponseProto_ReferralNotificationProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addReferralNotifications:[subBuilder buildPartial]];
        break;
      }
      case 122: {
        [self addNoticesToPlayers:[input readString]];
        break;
      }
      case 130: {
        GroupChatMessageProto_Builder* subBuilder = [GroupChatMessageProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addGlobalChats:[subBuilder buildPartial]];
        break;
      }
      case 138: {
        GroupChatMessageProto_Builder* subBuilder = [GroupChatMessageProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addClanChats:[subBuilder buildPartial]];
        break;
      }
      case 146: {
        PrivateChatPostProto_Builder* subBuilder = [PrivateChatPostProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addPcpp:[subBuilder buildPartial]];
        break;
      }
      case 154: {
        FullUserMonsterProto_Builder* subBuilder = [FullUserMonsterProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addUsersMonsters:[subBuilder buildPartial]];
        break;
      }
      case 162: {
        UserMonsterHealingProto_Builder* subBuilder = [UserMonsterHealingProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addMonstersHealing:[subBuilder buildPartial]];
        break;
      }
      case 170: {
        UserEnhancementProto_Builder* subBuilder = [UserEnhancementProto builder];
        if (self.hasEnhancements) {
          [subBuilder mergeFrom:self.enhancements];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setEnhancements:[subBuilder buildPartial]];
        break;
      }
      case 178: {
        RareBoosterPurchaseProto_Builder* subBuilder = [RareBoosterPurchaseProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addRareBoosterPurchases:[subBuilder buildPartial]];
        break;
      }
      case 186: {
        [self setKabamNaid:[input readString]];
        break;
      }
      case 194: {
        UserFacebookInviteForSlotProto_Builder* subBuilder = [UserFacebookInviteForSlotProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addInvitesToMeForSlots:[subBuilder buildPartial]];
        break;
      }
      case 202: {
        UserFacebookInviteForSlotProto_Builder* subBuilder = [UserFacebookInviteForSlotProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addInvitesFromMeForSlots:[subBuilder buildPartial]];
        break;
      }
      case 210: {
        StaticDataProto_Builder* subBuilder = [StaticDataProto builder];
        if (self.hasStaticDataStuffProto) {
          [subBuilder mergeFrom:self.staticDataStuffProto];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setStaticDataStuffProto:[subBuilder buildPartial]];
        break;
      }
      case 216: {
        [self addRedeemedQuestIds:[input readInt32]];
        break;
      }
      case 224: {
        [self addTaskIdForCurrentCityBoss:[input readInt32]];
        break;
      }
      case 234: {
        UserMonsterEvolutionProto_Builder* subBuilder = [UserMonsterEvolutionProto builder];
        if (self.hasEvolution) {
          [subBuilder mergeFrom:self.evolution];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setEvolution:[subBuilder buildPartial]];
        break;
      }
      case 242: {
        UserPersistentEventProto_Builder* subBuilder = [UserPersistentEventProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addUserEvents:[subBuilder buildPartial]];
        break;
      }
      case 250: {
        PersistentClanEventClanInfoProto_Builder* subBuilder = [PersistentClanEventClanInfoProto builder];
        if (self.hasCurRaidClanInfo) {
          [subBuilder mergeFrom:self.curRaidClanInfo];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setCurRaidClanInfo:[subBuilder buildPartial]];
        break;
      }
      case 258: {
        PersistentClanEventUserInfoProto_Builder* subBuilder = [PersistentClanEventUserInfoProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addCurRaidClanUserInfo:[subBuilder buildPartial]];
        break;
      }
      case 266: {
        PersistentClanEventRaidStageHistoryProto_Builder* subBuilder = [PersistentClanEventRaidStageHistoryProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addRaidStageHistory:[subBuilder buildPartial]];
        break;
      }
      case 274: {
        StartupResponseProto_TutorialConstants_Builder* subBuilder = [StartupResponseProto_TutorialConstants builder];
        if (self.hasTutorialConstants) {
          [subBuilder mergeFrom:self.tutorialConstants];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setTutorialConstants:[subBuilder buildPartial]];
        break;
      }
      case 282: {
        PvpHistoryProto_Builder* subBuilder = [PvpHistoryProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addRecentNbattles:[subBuilder buildPartial]];
        break;
      }
      case 290: {
        MinimumUserTaskProto_Builder* subBuilder = [MinimumUserTaskProto builder];
        if (self.hasCurTask) {
          [subBuilder mergeFrom:self.curTask];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setCurTask:[subBuilder buildPartial]];
        break;
      }
      case 298: {
        TaskStageProto_Builder* subBuilder = [TaskStageProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addCurTaskStages:[subBuilder buildPartial]];
        break;
      }
      case 306: {
        UserAchievementProto_Builder* subBuilder = [UserAchievementProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addUserAchievements:[subBuilder buildPartial]];
        break;
      }
      case 314: {
        UserMiniJobProto_Builder* subBuilder = [UserMiniJobProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addUserMiniJobProtos:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasServerTimeMillis {
  return result.hasServerTimeMillis;
}
- (int64_t) serverTimeMillis {
  return result.serverTimeMillis;
}
- (StartupResponseProto_Builder*) setServerTimeMillis:(int64_t) value {
  result.hasServerTimeMillis = YES;
  result.serverTimeMillis = value;
  return self;
}
- (StartupResponseProto_Builder*) clearServerTimeMillis {
  result.hasServerTimeMillis = NO;
  result.serverTimeMillis = 0L;
  return self;
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (FullUserProto*) sender {
  return result.sender;
}
- (StartupResponseProto_Builder*) setSender:(FullUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (StartupResponseProto_Builder*) setSenderBuilder:(FullUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (StartupResponseProto_Builder*) mergeSender:(FullUserProto*) value {
  if (result.hasSender &&
      result.sender != [FullUserProto defaultInstance]) {
    result.sender =
      [[[FullUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (StartupResponseProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [FullUserProto defaultInstance];
  return self;
}
- (BOOL) hasStartupStatus {
  return result.hasStartupStatus;
}
- (StartupResponseProto_StartupStatus) startupStatus {
  return result.startupStatus;
}
- (StartupResponseProto_Builder*) setStartupStatus:(StartupResponseProto_StartupStatus) value {
  result.hasStartupStatus = YES;
  result.startupStatus = value;
  return self;
}
- (StartupResponseProto_Builder*) clearStartupStatus {
  result.hasStartupStatus = NO;
  result.startupStatus = StartupResponseProto_StartupStatusUserInDb;
  return self;
}
- (BOOL) hasUpdateStatus {
  return result.hasUpdateStatus;
}
- (StartupResponseProto_UpdateStatus) updateStatus {
  return result.updateStatus;
}
- (StartupResponseProto_Builder*) setUpdateStatus:(StartupResponseProto_UpdateStatus) value {
  result.hasUpdateStatus = YES;
  result.updateStatus = value;
  return self;
}
- (StartupResponseProto_Builder*) clearUpdateStatus {
  result.hasUpdateStatus = NO;
  result.updateStatus = StartupResponseProto_UpdateStatusNoUpdate;
  return self;
}
- (BOOL) hasStartupConstants {
  return result.hasStartupConstants;
}
- (StartupResponseProto_StartupConstants*) startupConstants {
  return result.startupConstants;
}
- (StartupResponseProto_Builder*) setStartupConstants:(StartupResponseProto_StartupConstants*) value {
  result.hasStartupConstants = YES;
  result.startupConstants = value;
  return self;
}
- (StartupResponseProto_Builder*) setStartupConstantsBuilder:(StartupResponseProto_StartupConstants_Builder*) builderForValue {
  return [self setStartupConstants:[builderForValue build]];
}
- (StartupResponseProto_Builder*) mergeStartupConstants:(StartupResponseProto_StartupConstants*) value {
  if (result.hasStartupConstants &&
      result.startupConstants != [StartupResponseProto_StartupConstants defaultInstance]) {
    result.startupConstants =
      [[[StartupResponseProto_StartupConstants builderWithPrototype:result.startupConstants] mergeFrom:value] buildPartial];
  } else {
    result.startupConstants = value;
  }
  result.hasStartupConstants = YES;
  return self;
}
- (StartupResponseProto_Builder*) clearStartupConstants {
  result.hasStartupConstants = NO;
  result.startupConstants = [StartupResponseProto_StartupConstants defaultInstance];
  return self;
}
- (BOOL) hasTutorialConstants {
  return result.hasTutorialConstants;
}
- (StartupResponseProto_TutorialConstants*) tutorialConstants {
  return result.tutorialConstants;
}
- (StartupResponseProto_Builder*) setTutorialConstants:(StartupResponseProto_TutorialConstants*) value {
  result.hasTutorialConstants = YES;
  result.tutorialConstants = value;
  return self;
}
- (StartupResponseProto_Builder*) setTutorialConstantsBuilder:(StartupResponseProto_TutorialConstants_Builder*) builderForValue {
  return [self setTutorialConstants:[builderForValue build]];
}
- (StartupResponseProto_Builder*) mergeTutorialConstants:(StartupResponseProto_TutorialConstants*) value {
  if (result.hasTutorialConstants &&
      result.tutorialConstants != [StartupResponseProto_TutorialConstants defaultInstance]) {
    result.tutorialConstants =
      [[[StartupResponseProto_TutorialConstants builderWithPrototype:result.tutorialConstants] mergeFrom:value] buildPartial];
  } else {
    result.tutorialConstants = value;
  }
  result.hasTutorialConstants = YES;
  return self;
}
- (StartupResponseProto_Builder*) clearTutorialConstants {
  result.hasTutorialConstants = NO;
  result.tutorialConstants = [StartupResponseProto_TutorialConstants defaultInstance];
  return self;
}
- (NSArray*) userQuestsList {
  if (result.mutableUserQuestsList == nil) { return [NSArray array]; }
  return result.mutableUserQuestsList;
}
- (FullUserQuestProto*) userQuestsAtIndex:(int32_t) index {
  return [result userQuestsAtIndex:index];
}
- (StartupResponseProto_Builder*) replaceUserQuestsAtIndex:(int32_t) index with:(FullUserQuestProto*) value {
  [result.mutableUserQuestsList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (StartupResponseProto_Builder*) addAllUserQuests:(NSArray*) values {
  if (result.mutableUserQuestsList == nil) {
    result.mutableUserQuestsList = [NSMutableArray array];
  }
  [result.mutableUserQuestsList addObjectsFromArray:values];
  return self;
}
- (StartupResponseProto_Builder*) clearUserQuestsList {
  result.mutableUserQuestsList = nil;
  return self;
}
- (StartupResponseProto_Builder*) addUserQuests:(FullUserQuestProto*) value {
  if (result.mutableUserQuestsList == nil) {
    result.mutableUserQuestsList = [NSMutableArray array];
  }
  [result.mutableUserQuestsList addObject:value];
  return self;
}
- (NSArray*) redeemedQuestIdsList {
  if (result.mutableRedeemedQuestIdsList == nil) {
    return [NSArray array];
  }
  return result.mutableRedeemedQuestIdsList;
}
- (int32_t) redeemedQuestIdsAtIndex:(int32_t) index {
  return [result redeemedQuestIdsAtIndex:index];
}
- (StartupResponseProto_Builder*) replaceRedeemedQuestIdsAtIndex:(int32_t) index with:(int32_t) value {
  [result.mutableRedeemedQuestIdsList replaceObjectAtIndex:index withObject:[NSNumber numberWithInt:value]];
  return self;
}
- (StartupResponseProto_Builder*) addRedeemedQuestIds:(int32_t) value {
  if (result.mutableRedeemedQuestIdsList == nil) {
    result.mutableRedeemedQuestIdsList = [NSMutableArray array];
  }
  [result.mutableRedeemedQuestIdsList addObject:[NSNumber numberWithInt:value]];
  return self;
}
- (StartupResponseProto_Builder*) addAllRedeemedQuestIds:(NSArray*) values {
  if (result.mutableRedeemedQuestIdsList == nil) {
    result.mutableRedeemedQuestIdsList = [NSMutableArray array];
  }
  [result.mutableRedeemedQuestIdsList addObjectsFromArray:values];
  return self;
}
- (StartupResponseProto_Builder*) clearRedeemedQuestIdsList {
  result.mutableRedeemedQuestIdsList = nil;
  return self;
}
- (NSArray*) userClanInfoList {
  if (result.mutableUserClanInfoList == nil) { return [NSArray array]; }
  return result.mutableUserClanInfoList;
}
- (FullUserClanProto*) userClanInfoAtIndex:(int32_t) index {
  return [result userClanInfoAtIndex:index];
}
- (StartupResponseProto_Builder*) replaceUserClanInfoAtIndex:(int32_t) index with:(FullUserClanProto*) value {
  [result.mutableUserClanInfoList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (StartupResponseProto_Builder*) addAllUserClanInfo:(NSArray*) values {
  if (result.mutableUserClanInfoList == nil) {
    result.mutableUserClanInfoList = [NSMutableArray array];
  }
  [result.mutableUserClanInfoList addObjectsFromArray:values];
  return self;
}
- (StartupResponseProto_Builder*) clearUserClanInfoList {
  result.mutableUserClanInfoList = nil;
  return self;
}
- (StartupResponseProto_Builder*) addUserClanInfo:(FullUserClanProto*) value {
  if (result.mutableUserClanInfoList == nil) {
    result.mutableUserClanInfoList = [NSMutableArray array];
  }
  [result.mutableUserClanInfoList addObject:value];
  return self;
}
- (NSArray*) completedTaskIdsList {
  if (result.mutableCompletedTaskIdsList == nil) {
    return [NSArray array];
  }
  return result.mutableCompletedTaskIdsList;
}
- (int32_t) completedTaskIdsAtIndex:(int32_t) index {
  return [result completedTaskIdsAtIndex:index];
}
- (StartupResponseProto_Builder*) replaceCompletedTaskIdsAtIndex:(int32_t) index with:(int32_t) value {
  [result.mutableCompletedTaskIdsList replaceObjectAtIndex:index withObject:[NSNumber numberWithInt:value]];
  return self;
}
- (StartupResponseProto_Builder*) addCompletedTaskIds:(int32_t) value {
  if (result.mutableCompletedTaskIdsList == nil) {
    result.mutableCompletedTaskIdsList = [NSMutableArray array];
  }
  [result.mutableCompletedTaskIdsList addObject:[NSNumber numberWithInt:value]];
  return self;
}
- (StartupResponseProto_Builder*) addAllCompletedTaskIds:(NSArray*) values {
  if (result.mutableCompletedTaskIdsList == nil) {
    result.mutableCompletedTaskIdsList = [NSMutableArray array];
  }
  [result.mutableCompletedTaskIdsList addObjectsFromArray:values];
  return self;
}
- (StartupResponseProto_Builder*) clearCompletedTaskIdsList {
  result.mutableCompletedTaskIdsList = nil;
  return self;
}
- (BOOL) hasAppStoreUrl {
  return result.hasAppStoreUrl;
}
- (NSString*) appStoreUrl {
  return result.appStoreUrl;
}
- (StartupResponseProto_Builder*) setAppStoreUrl:(NSString*) value {
  result.hasAppStoreUrl = YES;
  result.appStoreUrl = value;
  return self;
}
- (StartupResponseProto_Builder*) clearAppStoreUrl {
  result.hasAppStoreUrl = NO;
  result.appStoreUrl = @"";
  return self;
}
- (BOOL) hasReviewPageUrl {
  return result.hasReviewPageUrl;
}
- (NSString*) reviewPageUrl {
  return result.reviewPageUrl;
}
- (StartupResponseProto_Builder*) setReviewPageUrl:(NSString*) value {
  result.hasReviewPageUrl = YES;
  result.reviewPageUrl = value;
  return self;
}
- (StartupResponseProto_Builder*) clearReviewPageUrl {
  result.hasReviewPageUrl = NO;
  result.reviewPageUrl = @"";
  return self;
}
- (BOOL) hasReviewPageConfirmationMessage {
  return result.hasReviewPageConfirmationMessage;
}
- (NSString*) reviewPageConfirmationMessage {
  return result.reviewPageConfirmationMessage;
}
- (StartupResponseProto_Builder*) setReviewPageConfirmationMessage:(NSString*) value {
  result.hasReviewPageConfirmationMessage = YES;
  result.reviewPageConfirmationMessage = value;
  return self;
}
- (StartupResponseProto_Builder*) clearReviewPageConfirmationMessage {
  result.hasReviewPageConfirmationMessage = NO;
  result.reviewPageConfirmationMessage = @"";
  return self;
}
- (BOOL) hasPlayerHasBoughtInAppPurchase {
  return result.hasPlayerHasBoughtInAppPurchase;
}
- (BOOL) playerHasBoughtInAppPurchase {
  return result.playerHasBoughtInAppPurchase;
}
- (StartupResponseProto_Builder*) setPlayerHasBoughtInAppPurchase:(BOOL) value {
  result.hasPlayerHasBoughtInAppPurchase = YES;
  result.playerHasBoughtInAppPurchase = value;
  return self;
}
- (StartupResponseProto_Builder*) clearPlayerHasBoughtInAppPurchase {
  result.hasPlayerHasBoughtInAppPurchase = NO;
  result.playerHasBoughtInAppPurchase = NO;
  return self;
}
- (NSArray*) attackNotificationsList {
  if (result.mutableAttackNotificationsList == nil) { return [NSArray array]; }
  return result.mutableAttackNotificationsList;
}
- (StartupResponseProto_AttackedNotificationProto*) attackNotificationsAtIndex:(int32_t) index {
  return [result attackNotificationsAtIndex:index];
}
- (StartupResponseProto_Builder*) replaceAttackNotificationsAtIndex:(int32_t) index with:(StartupResponseProto_AttackedNotificationProto*) value {
  [result.mutableAttackNotificationsList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (StartupResponseProto_Builder*) addAllAttackNotifications:(NSArray*) values {
  if (result.mutableAttackNotificationsList == nil) {
    result.mutableAttackNotificationsList = [NSMutableArray array];
  }
  [result.mutableAttackNotificationsList addObjectsFromArray:values];
  return self;
}
- (StartupResponseProto_Builder*) clearAttackNotificationsList {
  result.mutableAttackNotificationsList = nil;
  return self;
}
- (StartupResponseProto_Builder*) addAttackNotifications:(StartupResponseProto_AttackedNotificationProto*) value {
  if (result.mutableAttackNotificationsList == nil) {
    result.mutableAttackNotificationsList = [NSMutableArray array];
  }
  [result.mutableAttackNotificationsList addObject:value];
  return self;
}
- (NSArray*) referralNotificationsList {
  if (result.mutableReferralNotificationsList == nil) { return [NSArray array]; }
  return result.mutableReferralNotificationsList;
}
- (StartupResponseProto_ReferralNotificationProto*) referralNotificationsAtIndex:(int32_t) index {
  return [result referralNotificationsAtIndex:index];
}
- (StartupResponseProto_Builder*) replaceReferralNotificationsAtIndex:(int32_t) index with:(StartupResponseProto_ReferralNotificationProto*) value {
  [result.mutableReferralNotificationsList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (StartupResponseProto_Builder*) addAllReferralNotifications:(NSArray*) values {
  if (result.mutableReferralNotificationsList == nil) {
    result.mutableReferralNotificationsList = [NSMutableArray array];
  }
  [result.mutableReferralNotificationsList addObjectsFromArray:values];
  return self;
}
- (StartupResponseProto_Builder*) clearReferralNotificationsList {
  result.mutableReferralNotificationsList = nil;
  return self;
}
- (StartupResponseProto_Builder*) addReferralNotifications:(StartupResponseProto_ReferralNotificationProto*) value {
  if (result.mutableReferralNotificationsList == nil) {
    result.mutableReferralNotificationsList = [NSMutableArray array];
  }
  [result.mutableReferralNotificationsList addObject:value];
  return self;
}
- (NSArray*) noticesToPlayersList {
  if (result.mutableNoticesToPlayersList == nil) {
    return [NSArray array];
  }
  return result.mutableNoticesToPlayersList;
}
- (NSString*) noticesToPlayersAtIndex:(int32_t) index {
  return [result noticesToPlayersAtIndex:index];
}
- (StartupResponseProto_Builder*) replaceNoticesToPlayersAtIndex:(int32_t) index with:(NSString*) value {
  [result.mutableNoticesToPlayersList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (StartupResponseProto_Builder*) addNoticesToPlayers:(NSString*) value {
  if (result.mutableNoticesToPlayersList == nil) {
    result.mutableNoticesToPlayersList = [NSMutableArray array];
  }
  [result.mutableNoticesToPlayersList addObject:value];
  return self;
}
- (StartupResponseProto_Builder*) addAllNoticesToPlayers:(NSArray*) values {
  if (result.mutableNoticesToPlayersList == nil) {
    result.mutableNoticesToPlayersList = [NSMutableArray array];
  }
  [result.mutableNoticesToPlayersList addObjectsFromArray:values];
  return self;
}
- (StartupResponseProto_Builder*) clearNoticesToPlayersList {
  result.mutableNoticesToPlayersList = nil;
  return self;
}
- (NSArray*) globalChatsList {
  if (result.mutableGlobalChatsList == nil) { return [NSArray array]; }
  return result.mutableGlobalChatsList;
}
- (GroupChatMessageProto*) globalChatsAtIndex:(int32_t) index {
  return [result globalChatsAtIndex:index];
}
- (StartupResponseProto_Builder*) replaceGlobalChatsAtIndex:(int32_t) index with:(GroupChatMessageProto*) value {
  [result.mutableGlobalChatsList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (StartupResponseProto_Builder*) addAllGlobalChats:(NSArray*) values {
  if (result.mutableGlobalChatsList == nil) {
    result.mutableGlobalChatsList = [NSMutableArray array];
  }
  [result.mutableGlobalChatsList addObjectsFromArray:values];
  return self;
}
- (StartupResponseProto_Builder*) clearGlobalChatsList {
  result.mutableGlobalChatsList = nil;
  return self;
}
- (StartupResponseProto_Builder*) addGlobalChats:(GroupChatMessageProto*) value {
  if (result.mutableGlobalChatsList == nil) {
    result.mutableGlobalChatsList = [NSMutableArray array];
  }
  [result.mutableGlobalChatsList addObject:value];
  return self;
}
- (NSArray*) clanChatsList {
  if (result.mutableClanChatsList == nil) { return [NSArray array]; }
  return result.mutableClanChatsList;
}
- (GroupChatMessageProto*) clanChatsAtIndex:(int32_t) index {
  return [result clanChatsAtIndex:index];
}
- (StartupResponseProto_Builder*) replaceClanChatsAtIndex:(int32_t) index with:(GroupChatMessageProto*) value {
  [result.mutableClanChatsList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (StartupResponseProto_Builder*) addAllClanChats:(NSArray*) values {
  if (result.mutableClanChatsList == nil) {
    result.mutableClanChatsList = [NSMutableArray array];
  }
  [result.mutableClanChatsList addObjectsFromArray:values];
  return self;
}
- (StartupResponseProto_Builder*) clearClanChatsList {
  result.mutableClanChatsList = nil;
  return self;
}
- (StartupResponseProto_Builder*) addClanChats:(GroupChatMessageProto*) value {
  if (result.mutableClanChatsList == nil) {
    result.mutableClanChatsList = [NSMutableArray array];
  }
  [result.mutableClanChatsList addObject:value];
  return self;
}
- (NSArray*) pcppList {
  if (result.mutablePcppList == nil) { return [NSArray array]; }
  return result.mutablePcppList;
}
- (PrivateChatPostProto*) pcppAtIndex:(int32_t) index {
  return [result pcppAtIndex:index];
}
- (StartupResponseProto_Builder*) replacePcppAtIndex:(int32_t) index with:(PrivateChatPostProto*) value {
  [result.mutablePcppList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (StartupResponseProto_Builder*) addAllPcpp:(NSArray*) values {
  if (result.mutablePcppList == nil) {
    result.mutablePcppList = [NSMutableArray array];
  }
  [result.mutablePcppList addObjectsFromArray:values];
  return self;
}
- (StartupResponseProto_Builder*) clearPcppList {
  result.mutablePcppList = nil;
  return self;
}
- (StartupResponseProto_Builder*) addPcpp:(PrivateChatPostProto*) value {
  if (result.mutablePcppList == nil) {
    result.mutablePcppList = [NSMutableArray array];
  }
  [result.mutablePcppList addObject:value];
  return self;
}
- (NSArray*) usersMonstersList {
  if (result.mutableUsersMonstersList == nil) { return [NSArray array]; }
  return result.mutableUsersMonstersList;
}
- (FullUserMonsterProto*) usersMonstersAtIndex:(int32_t) index {
  return [result usersMonstersAtIndex:index];
}
- (StartupResponseProto_Builder*) replaceUsersMonstersAtIndex:(int32_t) index with:(FullUserMonsterProto*) value {
  [result.mutableUsersMonstersList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (StartupResponseProto_Builder*) addAllUsersMonsters:(NSArray*) values {
  if (result.mutableUsersMonstersList == nil) {
    result.mutableUsersMonstersList = [NSMutableArray array];
  }
  [result.mutableUsersMonstersList addObjectsFromArray:values];
  return self;
}
- (StartupResponseProto_Builder*) clearUsersMonstersList {
  result.mutableUsersMonstersList = nil;
  return self;
}
- (StartupResponseProto_Builder*) addUsersMonsters:(FullUserMonsterProto*) value {
  if (result.mutableUsersMonstersList == nil) {
    result.mutableUsersMonstersList = [NSMutableArray array];
  }
  [result.mutableUsersMonstersList addObject:value];
  return self;
}
- (NSArray*) monstersHealingList {
  if (result.mutableMonstersHealingList == nil) { return [NSArray array]; }
  return result.mutableMonstersHealingList;
}
- (UserMonsterHealingProto*) monstersHealingAtIndex:(int32_t) index {
  return [result monstersHealingAtIndex:index];
}
- (StartupResponseProto_Builder*) replaceMonstersHealingAtIndex:(int32_t) index with:(UserMonsterHealingProto*) value {
  [result.mutableMonstersHealingList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (StartupResponseProto_Builder*) addAllMonstersHealing:(NSArray*) values {
  if (result.mutableMonstersHealingList == nil) {
    result.mutableMonstersHealingList = [NSMutableArray array];
  }
  [result.mutableMonstersHealingList addObjectsFromArray:values];
  return self;
}
- (StartupResponseProto_Builder*) clearMonstersHealingList {
  result.mutableMonstersHealingList = nil;
  return self;
}
- (StartupResponseProto_Builder*) addMonstersHealing:(UserMonsterHealingProto*) value {
  if (result.mutableMonstersHealingList == nil) {
    result.mutableMonstersHealingList = [NSMutableArray array];
  }
  [result.mutableMonstersHealingList addObject:value];
  return self;
}
- (BOOL) hasEnhancements {
  return result.hasEnhancements;
}
- (UserEnhancementProto*) enhancements {
  return result.enhancements;
}
- (StartupResponseProto_Builder*) setEnhancements:(UserEnhancementProto*) value {
  result.hasEnhancements = YES;
  result.enhancements = value;
  return self;
}
- (StartupResponseProto_Builder*) setEnhancementsBuilder:(UserEnhancementProto_Builder*) builderForValue {
  return [self setEnhancements:[builderForValue build]];
}
- (StartupResponseProto_Builder*) mergeEnhancements:(UserEnhancementProto*) value {
  if (result.hasEnhancements &&
      result.enhancements != [UserEnhancementProto defaultInstance]) {
    result.enhancements =
      [[[UserEnhancementProto builderWithPrototype:result.enhancements] mergeFrom:value] buildPartial];
  } else {
    result.enhancements = value;
  }
  result.hasEnhancements = YES;
  return self;
}
- (StartupResponseProto_Builder*) clearEnhancements {
  result.hasEnhancements = NO;
  result.enhancements = [UserEnhancementProto defaultInstance];
  return self;
}
- (BOOL) hasEvolution {
  return result.hasEvolution;
}
- (UserMonsterEvolutionProto*) evolution {
  return result.evolution;
}
- (StartupResponseProto_Builder*) setEvolution:(UserMonsterEvolutionProto*) value {
  result.hasEvolution = YES;
  result.evolution = value;
  return self;
}
- (StartupResponseProto_Builder*) setEvolutionBuilder:(UserMonsterEvolutionProto_Builder*) builderForValue {
  return [self setEvolution:[builderForValue build]];
}
- (StartupResponseProto_Builder*) mergeEvolution:(UserMonsterEvolutionProto*) value {
  if (result.hasEvolution &&
      result.evolution != [UserMonsterEvolutionProto defaultInstance]) {
    result.evolution =
      [[[UserMonsterEvolutionProto builderWithPrototype:result.evolution] mergeFrom:value] buildPartial];
  } else {
    result.evolution = value;
  }
  result.hasEvolution = YES;
  return self;
}
- (StartupResponseProto_Builder*) clearEvolution {
  result.hasEvolution = NO;
  result.evolution = [UserMonsterEvolutionProto defaultInstance];
  return self;
}
- (NSArray*) rareBoosterPurchasesList {
  if (result.mutableRareBoosterPurchasesList == nil) { return [NSArray array]; }
  return result.mutableRareBoosterPurchasesList;
}
- (RareBoosterPurchaseProto*) rareBoosterPurchasesAtIndex:(int32_t) index {
  return [result rareBoosterPurchasesAtIndex:index];
}
- (StartupResponseProto_Builder*) replaceRareBoosterPurchasesAtIndex:(int32_t) index with:(RareBoosterPurchaseProto*) value {
  [result.mutableRareBoosterPurchasesList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (StartupResponseProto_Builder*) addAllRareBoosterPurchases:(NSArray*) values {
  if (result.mutableRareBoosterPurchasesList == nil) {
    result.mutableRareBoosterPurchasesList = [NSMutableArray array];
  }
  [result.mutableRareBoosterPurchasesList addObjectsFromArray:values];
  return self;
}
- (StartupResponseProto_Builder*) clearRareBoosterPurchasesList {
  result.mutableRareBoosterPurchasesList = nil;
  return self;
}
- (StartupResponseProto_Builder*) addRareBoosterPurchases:(RareBoosterPurchaseProto*) value {
  if (result.mutableRareBoosterPurchasesList == nil) {
    result.mutableRareBoosterPurchasesList = [NSMutableArray array];
  }
  [result.mutableRareBoosterPurchasesList addObject:value];
  return self;
}
- (BOOL) hasKabamNaid {
  return result.hasKabamNaid;
}
- (NSString*) kabamNaid {
  return result.kabamNaid;
}
- (StartupResponseProto_Builder*) setKabamNaid:(NSString*) value {
  result.hasKabamNaid = YES;
  result.kabamNaid = value;
  return self;
}
- (StartupResponseProto_Builder*) clearKabamNaid {
  result.hasKabamNaid = NO;
  result.kabamNaid = @"";
  return self;
}
- (NSArray*) invitesToMeForSlotsList {
  if (result.mutableInvitesToMeForSlotsList == nil) { return [NSArray array]; }
  return result.mutableInvitesToMeForSlotsList;
}
- (UserFacebookInviteForSlotProto*) invitesToMeForSlotsAtIndex:(int32_t) index {
  return [result invitesToMeForSlotsAtIndex:index];
}
- (StartupResponseProto_Builder*) replaceInvitesToMeForSlotsAtIndex:(int32_t) index with:(UserFacebookInviteForSlotProto*) value {
  [result.mutableInvitesToMeForSlotsList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (StartupResponseProto_Builder*) addAllInvitesToMeForSlots:(NSArray*) values {
  if (result.mutableInvitesToMeForSlotsList == nil) {
    result.mutableInvitesToMeForSlotsList = [NSMutableArray array];
  }
  [result.mutableInvitesToMeForSlotsList addObjectsFromArray:values];
  return self;
}
- (StartupResponseProto_Builder*) clearInvitesToMeForSlotsList {
  result.mutableInvitesToMeForSlotsList = nil;
  return self;
}
- (StartupResponseProto_Builder*) addInvitesToMeForSlots:(UserFacebookInviteForSlotProto*) value {
  if (result.mutableInvitesToMeForSlotsList == nil) {
    result.mutableInvitesToMeForSlotsList = [NSMutableArray array];
  }
  [result.mutableInvitesToMeForSlotsList addObject:value];
  return self;
}
- (NSArray*) invitesFromMeForSlotsList {
  if (result.mutableInvitesFromMeForSlotsList == nil) { return [NSArray array]; }
  return result.mutableInvitesFromMeForSlotsList;
}
- (UserFacebookInviteForSlotProto*) invitesFromMeForSlotsAtIndex:(int32_t) index {
  return [result invitesFromMeForSlotsAtIndex:index];
}
- (StartupResponseProto_Builder*) replaceInvitesFromMeForSlotsAtIndex:(int32_t) index with:(UserFacebookInviteForSlotProto*) value {
  [result.mutableInvitesFromMeForSlotsList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (StartupResponseProto_Builder*) addAllInvitesFromMeForSlots:(NSArray*) values {
  if (result.mutableInvitesFromMeForSlotsList == nil) {
    result.mutableInvitesFromMeForSlotsList = [NSMutableArray array];
  }
  [result.mutableInvitesFromMeForSlotsList addObjectsFromArray:values];
  return self;
}
- (StartupResponseProto_Builder*) clearInvitesFromMeForSlotsList {
  result.mutableInvitesFromMeForSlotsList = nil;
  return self;
}
- (StartupResponseProto_Builder*) addInvitesFromMeForSlots:(UserFacebookInviteForSlotProto*) value {
  if (result.mutableInvitesFromMeForSlotsList == nil) {
    result.mutableInvitesFromMeForSlotsList = [NSMutableArray array];
  }
  [result.mutableInvitesFromMeForSlotsList addObject:value];
  return self;
}
- (BOOL) hasStaticDataStuffProto {
  return result.hasStaticDataStuffProto;
}
- (StaticDataProto*) staticDataStuffProto {
  return result.staticDataStuffProto;
}
- (StartupResponseProto_Builder*) setStaticDataStuffProto:(StaticDataProto*) value {
  result.hasStaticDataStuffProto = YES;
  result.staticDataStuffProto = value;
  return self;
}
- (StartupResponseProto_Builder*) setStaticDataStuffProtoBuilder:(StaticDataProto_Builder*) builderForValue {
  return [self setStaticDataStuffProto:[builderForValue build]];
}
- (StartupResponseProto_Builder*) mergeStaticDataStuffProto:(StaticDataProto*) value {
  if (result.hasStaticDataStuffProto &&
      result.staticDataStuffProto != [StaticDataProto defaultInstance]) {
    result.staticDataStuffProto =
      [[[StaticDataProto builderWithPrototype:result.staticDataStuffProto] mergeFrom:value] buildPartial];
  } else {
    result.staticDataStuffProto = value;
  }
  result.hasStaticDataStuffProto = YES;
  return self;
}
- (StartupResponseProto_Builder*) clearStaticDataStuffProto {
  result.hasStaticDataStuffProto = NO;
  result.staticDataStuffProto = [StaticDataProto defaultInstance];
  return self;
}
- (NSArray*) taskIdForCurrentCityBossList {
  if (result.mutableTaskIdForCurrentCityBossList == nil) {
    return [NSArray array];
  }
  return result.mutableTaskIdForCurrentCityBossList;
}
- (int32_t) taskIdForCurrentCityBossAtIndex:(int32_t) index {
  return [result taskIdForCurrentCityBossAtIndex:index];
}
- (StartupResponseProto_Builder*) replaceTaskIdForCurrentCityBossAtIndex:(int32_t) index with:(int32_t) value {
  [result.mutableTaskIdForCurrentCityBossList replaceObjectAtIndex:index withObject:[NSNumber numberWithInt:value]];
  return self;
}
- (StartupResponseProto_Builder*) addTaskIdForCurrentCityBoss:(int32_t) value {
  if (result.mutableTaskIdForCurrentCityBossList == nil) {
    result.mutableTaskIdForCurrentCityBossList = [NSMutableArray array];
  }
  [result.mutableTaskIdForCurrentCityBossList addObject:[NSNumber numberWithInt:value]];
  return self;
}
- (StartupResponseProto_Builder*) addAllTaskIdForCurrentCityBoss:(NSArray*) values {
  if (result.mutableTaskIdForCurrentCityBossList == nil) {
    result.mutableTaskIdForCurrentCityBossList = [NSMutableArray array];
  }
  [result.mutableTaskIdForCurrentCityBossList addObjectsFromArray:values];
  return self;
}
- (StartupResponseProto_Builder*) clearTaskIdForCurrentCityBossList {
  result.mutableTaskIdForCurrentCityBossList = nil;
  return self;
}
- (NSArray*) userEventsList {
  if (result.mutableUserEventsList == nil) { return [NSArray array]; }
  return result.mutableUserEventsList;
}
- (UserPersistentEventProto*) userEventsAtIndex:(int32_t) index {
  return [result userEventsAtIndex:index];
}
- (StartupResponseProto_Builder*) replaceUserEventsAtIndex:(int32_t) index with:(UserPersistentEventProto*) value {
  [result.mutableUserEventsList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (StartupResponseProto_Builder*) addAllUserEvents:(NSArray*) values {
  if (result.mutableUserEventsList == nil) {
    result.mutableUserEventsList = [NSMutableArray array];
  }
  [result.mutableUserEventsList addObjectsFromArray:values];
  return self;
}
- (StartupResponseProto_Builder*) clearUserEventsList {
  result.mutableUserEventsList = nil;
  return self;
}
- (StartupResponseProto_Builder*) addUserEvents:(UserPersistentEventProto*) value {
  if (result.mutableUserEventsList == nil) {
    result.mutableUserEventsList = [NSMutableArray array];
  }
  [result.mutableUserEventsList addObject:value];
  return self;
}
- (BOOL) hasCurRaidClanInfo {
  return result.hasCurRaidClanInfo;
}
- (PersistentClanEventClanInfoProto*) curRaidClanInfo {
  return result.curRaidClanInfo;
}
- (StartupResponseProto_Builder*) setCurRaidClanInfo:(PersistentClanEventClanInfoProto*) value {
  result.hasCurRaidClanInfo = YES;
  result.curRaidClanInfo = value;
  return self;
}
- (StartupResponseProto_Builder*) setCurRaidClanInfoBuilder:(PersistentClanEventClanInfoProto_Builder*) builderForValue {
  return [self setCurRaidClanInfo:[builderForValue build]];
}
- (StartupResponseProto_Builder*) mergeCurRaidClanInfo:(PersistentClanEventClanInfoProto*) value {
  if (result.hasCurRaidClanInfo &&
      result.curRaidClanInfo != [PersistentClanEventClanInfoProto defaultInstance]) {
    result.curRaidClanInfo =
      [[[PersistentClanEventClanInfoProto builderWithPrototype:result.curRaidClanInfo] mergeFrom:value] buildPartial];
  } else {
    result.curRaidClanInfo = value;
  }
  result.hasCurRaidClanInfo = YES;
  return self;
}
- (StartupResponseProto_Builder*) clearCurRaidClanInfo {
  result.hasCurRaidClanInfo = NO;
  result.curRaidClanInfo = [PersistentClanEventClanInfoProto defaultInstance];
  return self;
}
- (NSArray*) curRaidClanUserInfoList {
  if (result.mutableCurRaidClanUserInfoList == nil) { return [NSArray array]; }
  return result.mutableCurRaidClanUserInfoList;
}
- (PersistentClanEventUserInfoProto*) curRaidClanUserInfoAtIndex:(int32_t) index {
  return [result curRaidClanUserInfoAtIndex:index];
}
- (StartupResponseProto_Builder*) replaceCurRaidClanUserInfoAtIndex:(int32_t) index with:(PersistentClanEventUserInfoProto*) value {
  [result.mutableCurRaidClanUserInfoList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (StartupResponseProto_Builder*) addAllCurRaidClanUserInfo:(NSArray*) values {
  if (result.mutableCurRaidClanUserInfoList == nil) {
    result.mutableCurRaidClanUserInfoList = [NSMutableArray array];
  }
  [result.mutableCurRaidClanUserInfoList addObjectsFromArray:values];
  return self;
}
- (StartupResponseProto_Builder*) clearCurRaidClanUserInfoList {
  result.mutableCurRaidClanUserInfoList = nil;
  return self;
}
- (StartupResponseProto_Builder*) addCurRaidClanUserInfo:(PersistentClanEventUserInfoProto*) value {
  if (result.mutableCurRaidClanUserInfoList == nil) {
    result.mutableCurRaidClanUserInfoList = [NSMutableArray array];
  }
  [result.mutableCurRaidClanUserInfoList addObject:value];
  return self;
}
- (NSArray*) raidStageHistoryList {
  if (result.mutableRaidStageHistoryList == nil) { return [NSArray array]; }
  return result.mutableRaidStageHistoryList;
}
- (PersistentClanEventRaidStageHistoryProto*) raidStageHistoryAtIndex:(int32_t) index {
  return [result raidStageHistoryAtIndex:index];
}
- (StartupResponseProto_Builder*) replaceRaidStageHistoryAtIndex:(int32_t) index with:(PersistentClanEventRaidStageHistoryProto*) value {
  [result.mutableRaidStageHistoryList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (StartupResponseProto_Builder*) addAllRaidStageHistory:(NSArray*) values {
  if (result.mutableRaidStageHistoryList == nil) {
    result.mutableRaidStageHistoryList = [NSMutableArray array];
  }
  [result.mutableRaidStageHistoryList addObjectsFromArray:values];
  return self;
}
- (StartupResponseProto_Builder*) clearRaidStageHistoryList {
  result.mutableRaidStageHistoryList = nil;
  return self;
}
- (StartupResponseProto_Builder*) addRaidStageHistory:(PersistentClanEventRaidStageHistoryProto*) value {
  if (result.mutableRaidStageHistoryList == nil) {
    result.mutableRaidStageHistoryList = [NSMutableArray array];
  }
  [result.mutableRaidStageHistoryList addObject:value];
  return self;
}
- (NSArray*) recentNbattlesList {
  if (result.mutableRecentNbattlesList == nil) { return [NSArray array]; }
  return result.mutableRecentNbattlesList;
}
- (PvpHistoryProto*) recentNbattlesAtIndex:(int32_t) index {
  return [result recentNbattlesAtIndex:index];
}
- (StartupResponseProto_Builder*) replaceRecentNbattlesAtIndex:(int32_t) index with:(PvpHistoryProto*) value {
  [result.mutableRecentNbattlesList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (StartupResponseProto_Builder*) addAllRecentNbattles:(NSArray*) values {
  if (result.mutableRecentNbattlesList == nil) {
    result.mutableRecentNbattlesList = [NSMutableArray array];
  }
  [result.mutableRecentNbattlesList addObjectsFromArray:values];
  return self;
}
- (StartupResponseProto_Builder*) clearRecentNbattlesList {
  result.mutableRecentNbattlesList = nil;
  return self;
}
- (StartupResponseProto_Builder*) addRecentNbattles:(PvpHistoryProto*) value {
  if (result.mutableRecentNbattlesList == nil) {
    result.mutableRecentNbattlesList = [NSMutableArray array];
  }
  [result.mutableRecentNbattlesList addObject:value];
  return self;
}
- (BOOL) hasCurTask {
  return result.hasCurTask;
}
- (MinimumUserTaskProto*) curTask {
  return result.curTask;
}
- (StartupResponseProto_Builder*) setCurTask:(MinimumUserTaskProto*) value {
  result.hasCurTask = YES;
  result.curTask = value;
  return self;
}
- (StartupResponseProto_Builder*) setCurTaskBuilder:(MinimumUserTaskProto_Builder*) builderForValue {
  return [self setCurTask:[builderForValue build]];
}
- (StartupResponseProto_Builder*) mergeCurTask:(MinimumUserTaskProto*) value {
  if (result.hasCurTask &&
      result.curTask != [MinimumUserTaskProto defaultInstance]) {
    result.curTask =
      [[[MinimumUserTaskProto builderWithPrototype:result.curTask] mergeFrom:value] buildPartial];
  } else {
    result.curTask = value;
  }
  result.hasCurTask = YES;
  return self;
}
- (StartupResponseProto_Builder*) clearCurTask {
  result.hasCurTask = NO;
  result.curTask = [MinimumUserTaskProto defaultInstance];
  return self;
}
- (NSArray*) curTaskStagesList {
  if (result.mutableCurTaskStagesList == nil) { return [NSArray array]; }
  return result.mutableCurTaskStagesList;
}
- (TaskStageProto*) curTaskStagesAtIndex:(int32_t) index {
  return [result curTaskStagesAtIndex:index];
}
- (StartupResponseProto_Builder*) replaceCurTaskStagesAtIndex:(int32_t) index with:(TaskStageProto*) value {
  [result.mutableCurTaskStagesList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (StartupResponseProto_Builder*) addAllCurTaskStages:(NSArray*) values {
  if (result.mutableCurTaskStagesList == nil) {
    result.mutableCurTaskStagesList = [NSMutableArray array];
  }
  [result.mutableCurTaskStagesList addObjectsFromArray:values];
  return self;
}
- (StartupResponseProto_Builder*) clearCurTaskStagesList {
  result.mutableCurTaskStagesList = nil;
  return self;
}
- (StartupResponseProto_Builder*) addCurTaskStages:(TaskStageProto*) value {
  if (result.mutableCurTaskStagesList == nil) {
    result.mutableCurTaskStagesList = [NSMutableArray array];
  }
  [result.mutableCurTaskStagesList addObject:value];
  return self;
}
- (NSArray*) userAchievementsList {
  if (result.mutableUserAchievementsList == nil) { return [NSArray array]; }
  return result.mutableUserAchievementsList;
}
- (UserAchievementProto*) userAchievementsAtIndex:(int32_t) index {
  return [result userAchievementsAtIndex:index];
}
- (StartupResponseProto_Builder*) replaceUserAchievementsAtIndex:(int32_t) index with:(UserAchievementProto*) value {
  [result.mutableUserAchievementsList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (StartupResponseProto_Builder*) addAllUserAchievements:(NSArray*) values {
  if (result.mutableUserAchievementsList == nil) {
    result.mutableUserAchievementsList = [NSMutableArray array];
  }
  [result.mutableUserAchievementsList addObjectsFromArray:values];
  return self;
}
- (StartupResponseProto_Builder*) clearUserAchievementsList {
  result.mutableUserAchievementsList = nil;
  return self;
}
- (StartupResponseProto_Builder*) addUserAchievements:(UserAchievementProto*) value {
  if (result.mutableUserAchievementsList == nil) {
    result.mutableUserAchievementsList = [NSMutableArray array];
  }
  [result.mutableUserAchievementsList addObject:value];
  return self;
}
- (NSArray*) userMiniJobProtosList {
  if (result.mutableUserMiniJobProtosList == nil) { return [NSArray array]; }
  return result.mutableUserMiniJobProtosList;
}
- (UserMiniJobProto*) userMiniJobProtosAtIndex:(int32_t) index {
  return [result userMiniJobProtosAtIndex:index];
}
- (StartupResponseProto_Builder*) replaceUserMiniJobProtosAtIndex:(int32_t) index with:(UserMiniJobProto*) value {
  [result.mutableUserMiniJobProtosList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (StartupResponseProto_Builder*) addAllUserMiniJobProtos:(NSArray*) values {
  if (result.mutableUserMiniJobProtosList == nil) {
    result.mutableUserMiniJobProtosList = [NSMutableArray array];
  }
  [result.mutableUserMiniJobProtosList addObjectsFromArray:values];
  return self;
}
- (StartupResponseProto_Builder*) clearUserMiniJobProtosList {
  result.mutableUserMiniJobProtosList = nil;
  return self;
}
- (StartupResponseProto_Builder*) addUserMiniJobProtos:(UserMiniJobProto*) value {
  if (result.mutableUserMiniJobProtosList == nil) {
    result.mutableUserMiniJobProtosList = [NSMutableArray array];
  }
  [result.mutableUserMiniJobProtosList addObject:value];
  return self;
}
@end

@interface ForceLogoutResponseProto ()
@property int64_t previousLoginTime;
@property (retain) NSString* udid;
@end

@implementation ForceLogoutResponseProto

- (BOOL) hasPreviousLoginTime {
  return !!hasPreviousLoginTime_;
}
- (void) setHasPreviousLoginTime:(BOOL) value {
  hasPreviousLoginTime_ = !!value;
}
@synthesize previousLoginTime;
- (BOOL) hasUdid {
  return !!hasUdid_;
}
- (void) setHasUdid:(BOOL) value {
  hasUdid_ = !!value;
}
@synthesize udid;
- (void) dealloc {
  self.udid = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.previousLoginTime = 0L;
    self.udid = @"";
  }
  return self;
}
static ForceLogoutResponseProto* defaultForceLogoutResponseProtoInstance = nil;
+ (void) initialize {
  if (self == [ForceLogoutResponseProto class]) {
    defaultForceLogoutResponseProtoInstance = [[ForceLogoutResponseProto alloc] init];
  }
}
+ (ForceLogoutResponseProto*) defaultInstance {
  return defaultForceLogoutResponseProtoInstance;
}
- (ForceLogoutResponseProto*) defaultInstance {
  return defaultForceLogoutResponseProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasPreviousLoginTime) {
    [output writeInt64:1 value:self.previousLoginTime];
  }
  if (self.hasUdid) {
    [output writeString:2 value:self.udid];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasPreviousLoginTime) {
    size += computeInt64Size(1, self.previousLoginTime);
  }
  if (self.hasUdid) {
    size += computeStringSize(2, self.udid);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (ForceLogoutResponseProto*) parseFromData:(NSData*) data {
  return (ForceLogoutResponseProto*)[[[ForceLogoutResponseProto builder] mergeFromData:data] build];
}
+ (ForceLogoutResponseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ForceLogoutResponseProto*)[[[ForceLogoutResponseProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ForceLogoutResponseProto*) parseFromInputStream:(NSInputStream*) input {
  return (ForceLogoutResponseProto*)[[[ForceLogoutResponseProto builder] mergeFromInputStream:input] build];
}
+ (ForceLogoutResponseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ForceLogoutResponseProto*)[[[ForceLogoutResponseProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ForceLogoutResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ForceLogoutResponseProto*)[[[ForceLogoutResponseProto builder] mergeFromCodedInputStream:input] build];
}
+ (ForceLogoutResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ForceLogoutResponseProto*)[[[ForceLogoutResponseProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ForceLogoutResponseProto_Builder*) builder {
  return [[[ForceLogoutResponseProto_Builder alloc] init] autorelease];
}
+ (ForceLogoutResponseProto_Builder*) builderWithPrototype:(ForceLogoutResponseProto*) prototype {
  return [[ForceLogoutResponseProto builder] mergeFrom:prototype];
}
- (ForceLogoutResponseProto_Builder*) builder {
  return [ForceLogoutResponseProto builder];
}
@end

@interface ForceLogoutResponseProto_Builder()
@property (retain) ForceLogoutResponseProto* result;
@end

@implementation ForceLogoutResponseProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[ForceLogoutResponseProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (ForceLogoutResponseProto_Builder*) clear {
  self.result = [[[ForceLogoutResponseProto alloc] init] autorelease];
  return self;
}
- (ForceLogoutResponseProto_Builder*) clone {
  return [ForceLogoutResponseProto builderWithPrototype:result];
}
- (ForceLogoutResponseProto*) defaultInstance {
  return [ForceLogoutResponseProto defaultInstance];
}
- (ForceLogoutResponseProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ForceLogoutResponseProto*) buildPartial {
  ForceLogoutResponseProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (ForceLogoutResponseProto_Builder*) mergeFrom:(ForceLogoutResponseProto*) other {
  if (other == [ForceLogoutResponseProto defaultInstance]) {
    return self;
  }
  if (other.hasPreviousLoginTime) {
    [self setPreviousLoginTime:other.previousLoginTime];
  }
  if (other.hasUdid) {
    [self setUdid:other.udid];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ForceLogoutResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ForceLogoutResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setPreviousLoginTime:[input readInt64]];
        break;
      }
      case 18: {
        [self setUdid:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasPreviousLoginTime {
  return result.hasPreviousLoginTime;
}
- (int64_t) previousLoginTime {
  return result.previousLoginTime;
}
- (ForceLogoutResponseProto_Builder*) setPreviousLoginTime:(int64_t) value {
  result.hasPreviousLoginTime = YES;
  result.previousLoginTime = value;
  return self;
}
- (ForceLogoutResponseProto_Builder*) clearPreviousLoginTime {
  result.hasPreviousLoginTime = NO;
  result.previousLoginTime = 0L;
  return self;
}
- (BOOL) hasUdid {
  return result.hasUdid;
}
- (NSString*) udid {
  return result.udid;
}
- (ForceLogoutResponseProto_Builder*) setUdid:(NSString*) value {
  result.hasUdid = YES;
  result.udid = value;
  return self;
}
- (ForceLogoutResponseProto_Builder*) clearUdid {
  result.hasUdid = NO;
  result.udid = @"";
  return self;
}
@end


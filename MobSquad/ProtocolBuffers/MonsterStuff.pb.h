// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "ProtocolBuffers.h"

#import "SharedEnumConfig.pb.h"

@class FullUserMonsterProto;
@class FullUserMonsterProto_Builder;
@class MinimumUserMonsterProto;
@class MinimumUserMonsterProto_Builder;
@class MinimumUserMonsterSellProto;
@class MinimumUserMonsterSellProto_Builder;
@class MonsterBattleDialogueProto;
@class MonsterBattleDialogueProto_Builder;
@class MonsterLevelInfoProto;
@class MonsterLevelInfoProto_Builder;
@class MonsterProto;
@class MonsterProto_Builder;
@class UserCurrentMonsterTeamProto;
@class UserCurrentMonsterTeamProto_Builder;
@class UserEnhancementItemProto;
@class UserEnhancementItemProto_Builder;
@class UserEnhancementProto;
@class UserEnhancementProto_Builder;
@class UserMonsterCurrentExpProto;
@class UserMonsterCurrentExpProto_Builder;
@class UserMonsterCurrentHealthProto;
@class UserMonsterCurrentHealthProto_Builder;
@class UserMonsterEvolutionProto;
@class UserMonsterEvolutionProto_Builder;
@class UserMonsterHealingProto;
@class UserMonsterHealingProto_Builder;
typedef enum {
  MonsterProto_AnimationTypeNoAnimation = 3,
  MonsterProto_AnimationTypeMelee = 1,
  MonsterProto_AnimationTypeRanged = 2,
} MonsterProto_AnimationType;

BOOL MonsterProto_AnimationTypeIsValidValue(MonsterProto_AnimationType value);

typedef enum {
  MonsterBattleDialogueProto_DialogueTypeNoDialogue = 2,
  MonsterBattleDialogueProto_DialogueTypeEnterBattle = 1,
} MonsterBattleDialogueProto_DialogueType;

BOOL MonsterBattleDialogueProto_DialogueTypeIsValidValue(MonsterBattleDialogueProto_DialogueType value);


@interface MonsterStuffRoot : NSObject {
}
+ (PBExtensionRegistry*) extensionRegistry;
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry;
@end

@interface MonsterProto : PBGeneratedMessage {
@private
  BOOL hasAtkAnimationRepeatedFramesEnd_:1;
  BOOL hasAtkAnimationRepeatedFramesStart_:1;
  BOOL hasAtkSoundAnimationFrame_:1;
  BOOL hasVerticalPixelOffset_:1;
  BOOL hasEvolutionCost_:1;
  BOOL hasNumCatalystMonstersRequired_:1;
  BOOL hasMinutesToEvolve_:1;
  BOOL hasEvolutionCatalystMonsterId_:1;
  BOOL hasEvolutionMonsterId_:1;
  BOOL hasMaxLevel_:1;
  BOOL hasMonsterId_:1;
  BOOL hasEvolutionLevel_:1;
  BOOL hasNumPuzzlePieces_:1;
  BOOL hasMinutesToCombinePieces_:1;
  BOOL hasImagePrefix_:1;
  BOOL hasDisplayName_:1;
  BOOL hasCarrotRecruited_:1;
  BOOL hasCarrotDefeated_:1;
  BOOL hasCarrotEvolved_:1;
  BOOL hasDescription_:1;
  BOOL hasMonsterGroup_:1;
  BOOL hasAtkSoundFile_:1;
  BOOL hasShorterName_:1;
  BOOL hasEvolutionGroup_:1;
  BOOL hasMonsterElement_:1;
  BOOL hasQuality_:1;
  BOOL hasAttackAnimationType_:1;
  int32_t atkAnimationRepeatedFramesEnd;
  int32_t atkAnimationRepeatedFramesStart;
  int32_t atkSoundAnimationFrame;
  int32_t verticalPixelOffset;
  int32_t evolutionCost;
  int32_t numCatalystMonstersRequired;
  int32_t minutesToEvolve;
  int32_t evolutionCatalystMonsterId;
  int32_t evolutionMonsterId;
  int32_t maxLevel;
  int32_t monsterId;
  int32_t evolutionLevel;
  int32_t numPuzzlePieces;
  int32_t minutesToCombinePieces;
  NSString* imagePrefix;
  NSString* displayName;
  NSString* carrotRecruited;
  NSString* carrotDefeated;
  NSString* carrotEvolved;
  NSString* description;
  NSString* monsterGroup;
  NSString* atkSoundFile;
  NSString* shorterName;
  NSString* evolutionGroup;
  Element monsterElement;
  Quality quality;
  MonsterProto_AnimationType attackAnimationType;
  NSMutableArray* mutableLvlInfoList;
}
- (BOOL) hasMonsterId;
- (BOOL) hasEvolutionGroup;
- (BOOL) hasShorterName;
- (BOOL) hasMonsterGroup;
- (BOOL) hasQuality;
- (BOOL) hasEvolutionLevel;
- (BOOL) hasDisplayName;
- (BOOL) hasMonsterElement;
- (BOOL) hasImagePrefix;
- (BOOL) hasNumPuzzlePieces;
- (BOOL) hasMinutesToCombinePieces;
- (BOOL) hasMaxLevel;
- (BOOL) hasEvolutionMonsterId;
- (BOOL) hasEvolutionCatalystMonsterId;
- (BOOL) hasMinutesToEvolve;
- (BOOL) hasNumCatalystMonstersRequired;
- (BOOL) hasCarrotRecruited;
- (BOOL) hasCarrotDefeated;
- (BOOL) hasCarrotEvolved;
- (BOOL) hasDescription;
- (BOOL) hasEvolutionCost;
- (BOOL) hasAttackAnimationType;
- (BOOL) hasVerticalPixelOffset;
- (BOOL) hasAtkSoundFile;
- (BOOL) hasAtkSoundAnimationFrame;
- (BOOL) hasAtkAnimationRepeatedFramesStart;
- (BOOL) hasAtkAnimationRepeatedFramesEnd;
@property (readonly) int32_t monsterId;
@property (readonly, retain) NSString* evolutionGroup;
@property (readonly, retain) NSString* shorterName;
@property (readonly, retain) NSString* monsterGroup;
@property (readonly) Quality quality;
@property (readonly) int32_t evolutionLevel;
@property (readonly, retain) NSString* displayName;
@property (readonly) Element monsterElement;
@property (readonly, retain) NSString* imagePrefix;
@property (readonly) int32_t numPuzzlePieces;
@property (readonly) int32_t minutesToCombinePieces;
@property (readonly) int32_t maxLevel;
@property (readonly) int32_t evolutionMonsterId;
@property (readonly) int32_t evolutionCatalystMonsterId;
@property (readonly) int32_t minutesToEvolve;
@property (readonly) int32_t numCatalystMonstersRequired;
@property (readonly, retain) NSString* carrotRecruited;
@property (readonly, retain) NSString* carrotDefeated;
@property (readonly, retain) NSString* carrotEvolved;
@property (readonly, retain) NSString* description;
@property (readonly) int32_t evolutionCost;
@property (readonly) MonsterProto_AnimationType attackAnimationType;
@property (readonly) int32_t verticalPixelOffset;
@property (readonly, retain) NSString* atkSoundFile;
@property (readonly) int32_t atkSoundAnimationFrame;
@property (readonly) int32_t atkAnimationRepeatedFramesStart;
@property (readonly) int32_t atkAnimationRepeatedFramesEnd;
- (NSArray*) lvlInfoList;
- (MonsterLevelInfoProto*) lvlInfoAtIndex:(int32_t) index;

+ (MonsterProto*) defaultInstance;
- (MonsterProto*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (MonsterProto_Builder*) builder;
+ (MonsterProto_Builder*) builder;
+ (MonsterProto_Builder*) builderWithPrototype:(MonsterProto*) prototype;

+ (MonsterProto*) parseFromData:(NSData*) data;
+ (MonsterProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MonsterProto*) parseFromInputStream:(NSInputStream*) input;
+ (MonsterProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MonsterProto*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (MonsterProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface MonsterProto_Builder : PBGeneratedMessage_Builder {
@private
  MonsterProto* result;
}

- (MonsterProto*) defaultInstance;

- (MonsterProto_Builder*) clear;
- (MonsterProto_Builder*) clone;

- (MonsterProto*) build;
- (MonsterProto*) buildPartial;

- (MonsterProto_Builder*) mergeFrom:(MonsterProto*) other;
- (MonsterProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (MonsterProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasMonsterId;
- (int32_t) monsterId;
- (MonsterProto_Builder*) setMonsterId:(int32_t) value;
- (MonsterProto_Builder*) clearMonsterId;

- (BOOL) hasEvolutionGroup;
- (NSString*) evolutionGroup;
- (MonsterProto_Builder*) setEvolutionGroup:(NSString*) value;
- (MonsterProto_Builder*) clearEvolutionGroup;

- (BOOL) hasShorterName;
- (NSString*) shorterName;
- (MonsterProto_Builder*) setShorterName:(NSString*) value;
- (MonsterProto_Builder*) clearShorterName;

- (BOOL) hasMonsterGroup;
- (NSString*) monsterGroup;
- (MonsterProto_Builder*) setMonsterGroup:(NSString*) value;
- (MonsterProto_Builder*) clearMonsterGroup;

- (BOOL) hasQuality;
- (Quality) quality;
- (MonsterProto_Builder*) setQuality:(Quality) value;
- (MonsterProto_Builder*) clearQuality;

- (BOOL) hasEvolutionLevel;
- (int32_t) evolutionLevel;
- (MonsterProto_Builder*) setEvolutionLevel:(int32_t) value;
- (MonsterProto_Builder*) clearEvolutionLevel;

- (BOOL) hasDisplayName;
- (NSString*) displayName;
- (MonsterProto_Builder*) setDisplayName:(NSString*) value;
- (MonsterProto_Builder*) clearDisplayName;

- (BOOL) hasMonsterElement;
- (Element) monsterElement;
- (MonsterProto_Builder*) setMonsterElement:(Element) value;
- (MonsterProto_Builder*) clearMonsterElement;

- (BOOL) hasImagePrefix;
- (NSString*) imagePrefix;
- (MonsterProto_Builder*) setImagePrefix:(NSString*) value;
- (MonsterProto_Builder*) clearImagePrefix;

- (BOOL) hasNumPuzzlePieces;
- (int32_t) numPuzzlePieces;
- (MonsterProto_Builder*) setNumPuzzlePieces:(int32_t) value;
- (MonsterProto_Builder*) clearNumPuzzlePieces;

- (BOOL) hasMinutesToCombinePieces;
- (int32_t) minutesToCombinePieces;
- (MonsterProto_Builder*) setMinutesToCombinePieces:(int32_t) value;
- (MonsterProto_Builder*) clearMinutesToCombinePieces;

- (BOOL) hasMaxLevel;
- (int32_t) maxLevel;
- (MonsterProto_Builder*) setMaxLevel:(int32_t) value;
- (MonsterProto_Builder*) clearMaxLevel;

- (BOOL) hasEvolutionMonsterId;
- (int32_t) evolutionMonsterId;
- (MonsterProto_Builder*) setEvolutionMonsterId:(int32_t) value;
- (MonsterProto_Builder*) clearEvolutionMonsterId;

- (BOOL) hasEvolutionCatalystMonsterId;
- (int32_t) evolutionCatalystMonsterId;
- (MonsterProto_Builder*) setEvolutionCatalystMonsterId:(int32_t) value;
- (MonsterProto_Builder*) clearEvolutionCatalystMonsterId;

- (BOOL) hasMinutesToEvolve;
- (int32_t) minutesToEvolve;
- (MonsterProto_Builder*) setMinutesToEvolve:(int32_t) value;
- (MonsterProto_Builder*) clearMinutesToEvolve;

- (BOOL) hasNumCatalystMonstersRequired;
- (int32_t) numCatalystMonstersRequired;
- (MonsterProto_Builder*) setNumCatalystMonstersRequired:(int32_t) value;
- (MonsterProto_Builder*) clearNumCatalystMonstersRequired;

- (BOOL) hasCarrotRecruited;
- (NSString*) carrotRecruited;
- (MonsterProto_Builder*) setCarrotRecruited:(NSString*) value;
- (MonsterProto_Builder*) clearCarrotRecruited;

- (BOOL) hasCarrotDefeated;
- (NSString*) carrotDefeated;
- (MonsterProto_Builder*) setCarrotDefeated:(NSString*) value;
- (MonsterProto_Builder*) clearCarrotDefeated;

- (BOOL) hasCarrotEvolved;
- (NSString*) carrotEvolved;
- (MonsterProto_Builder*) setCarrotEvolved:(NSString*) value;
- (MonsterProto_Builder*) clearCarrotEvolved;

- (BOOL) hasDescription;
- (NSString*) description;
- (MonsterProto_Builder*) setDescription:(NSString*) value;
- (MonsterProto_Builder*) clearDescription;

- (NSArray*) lvlInfoList;
- (MonsterLevelInfoProto*) lvlInfoAtIndex:(int32_t) index;
- (MonsterProto_Builder*) replaceLvlInfoAtIndex:(int32_t) index with:(MonsterLevelInfoProto*) value;
- (MonsterProto_Builder*) addLvlInfo:(MonsterLevelInfoProto*) value;
- (MonsterProto_Builder*) addAllLvlInfo:(NSArray*) values;
- (MonsterProto_Builder*) clearLvlInfoList;

- (BOOL) hasEvolutionCost;
- (int32_t) evolutionCost;
- (MonsterProto_Builder*) setEvolutionCost:(int32_t) value;
- (MonsterProto_Builder*) clearEvolutionCost;

- (BOOL) hasAttackAnimationType;
- (MonsterProto_AnimationType) attackAnimationType;
- (MonsterProto_Builder*) setAttackAnimationType:(MonsterProto_AnimationType) value;
- (MonsterProto_Builder*) clearAttackAnimationType;

- (BOOL) hasVerticalPixelOffset;
- (int32_t) verticalPixelOffset;
- (MonsterProto_Builder*) setVerticalPixelOffset:(int32_t) value;
- (MonsterProto_Builder*) clearVerticalPixelOffset;

- (BOOL) hasAtkSoundFile;
- (NSString*) atkSoundFile;
- (MonsterProto_Builder*) setAtkSoundFile:(NSString*) value;
- (MonsterProto_Builder*) clearAtkSoundFile;

- (BOOL) hasAtkSoundAnimationFrame;
- (int32_t) atkSoundAnimationFrame;
- (MonsterProto_Builder*) setAtkSoundAnimationFrame:(int32_t) value;
- (MonsterProto_Builder*) clearAtkSoundAnimationFrame;

- (BOOL) hasAtkAnimationRepeatedFramesStart;
- (int32_t) atkAnimationRepeatedFramesStart;
- (MonsterProto_Builder*) setAtkAnimationRepeatedFramesStart:(int32_t) value;
- (MonsterProto_Builder*) clearAtkAnimationRepeatedFramesStart;

- (BOOL) hasAtkAnimationRepeatedFramesEnd;
- (int32_t) atkAnimationRepeatedFramesEnd;
- (MonsterProto_Builder*) setAtkAnimationRepeatedFramesEnd:(int32_t) value;
- (MonsterProto_Builder*) clearAtkAnimationRepeatedFramesEnd;
@end

@interface MonsterLevelInfoProto : PBGeneratedMessage {
@private
  BOOL hasHpExponentBase_:1;
  BOOL hasDmgExponentBase_:1;
  BOOL hasExpLvlDivisor_:1;
  BOOL hasExpLvlExponent_:1;
  BOOL hasLvl_:1;
  BOOL hasHp_:1;
  BOOL hasCurLvlRequiredExp_:1;
  BOOL hasFeederExp_:1;
  BOOL hasSpeed_:1;
  BOOL hasFireDmg_:1;
  BOOL hasGrassDmg_:1;
  BOOL hasWaterDmg_:1;
  BOOL hasLightningDmg_:1;
  BOOL hasDarknessDmg_:1;
  BOOL hasRockDmg_:1;
  Float32 hpExponentBase;
  Float32 dmgExponentBase;
  Float32 expLvlDivisor;
  Float32 expLvlExponent;
  int32_t lvl;
  int32_t hp;
  int32_t curLvlRequiredExp;
  int32_t feederExp;
  int32_t speed;
  int32_t fireDmg;
  int32_t grassDmg;
  int32_t waterDmg;
  int32_t lightningDmg;
  int32_t darknessDmg;
  int32_t rockDmg;
}
- (BOOL) hasLvl;
- (BOOL) hasHp;
- (BOOL) hasCurLvlRequiredExp;
- (BOOL) hasFeederExp;
- (BOOL) hasFireDmg;
- (BOOL) hasGrassDmg;
- (BOOL) hasWaterDmg;
- (BOOL) hasLightningDmg;
- (BOOL) hasDarknessDmg;
- (BOOL) hasRockDmg;
- (BOOL) hasSpeed;
- (BOOL) hasHpExponentBase;
- (BOOL) hasDmgExponentBase;
- (BOOL) hasExpLvlDivisor;
- (BOOL) hasExpLvlExponent;
@property (readonly) int32_t lvl;
@property (readonly) int32_t hp;
@property (readonly) int32_t curLvlRequiredExp;
@property (readonly) int32_t feederExp;
@property (readonly) int32_t fireDmg;
@property (readonly) int32_t grassDmg;
@property (readonly) int32_t waterDmg;
@property (readonly) int32_t lightningDmg;
@property (readonly) int32_t darknessDmg;
@property (readonly) int32_t rockDmg;
@property (readonly) int32_t speed;
@property (readonly) Float32 hpExponentBase;
@property (readonly) Float32 dmgExponentBase;
@property (readonly) Float32 expLvlDivisor;
@property (readonly) Float32 expLvlExponent;

+ (MonsterLevelInfoProto*) defaultInstance;
- (MonsterLevelInfoProto*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (MonsterLevelInfoProto_Builder*) builder;
+ (MonsterLevelInfoProto_Builder*) builder;
+ (MonsterLevelInfoProto_Builder*) builderWithPrototype:(MonsterLevelInfoProto*) prototype;

+ (MonsterLevelInfoProto*) parseFromData:(NSData*) data;
+ (MonsterLevelInfoProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MonsterLevelInfoProto*) parseFromInputStream:(NSInputStream*) input;
+ (MonsterLevelInfoProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MonsterLevelInfoProto*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (MonsterLevelInfoProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface MonsterLevelInfoProto_Builder : PBGeneratedMessage_Builder {
@private
  MonsterLevelInfoProto* result;
}

- (MonsterLevelInfoProto*) defaultInstance;

- (MonsterLevelInfoProto_Builder*) clear;
- (MonsterLevelInfoProto_Builder*) clone;

- (MonsterLevelInfoProto*) build;
- (MonsterLevelInfoProto*) buildPartial;

- (MonsterLevelInfoProto_Builder*) mergeFrom:(MonsterLevelInfoProto*) other;
- (MonsterLevelInfoProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (MonsterLevelInfoProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasLvl;
- (int32_t) lvl;
- (MonsterLevelInfoProto_Builder*) setLvl:(int32_t) value;
- (MonsterLevelInfoProto_Builder*) clearLvl;

- (BOOL) hasHp;
- (int32_t) hp;
- (MonsterLevelInfoProto_Builder*) setHp:(int32_t) value;
- (MonsterLevelInfoProto_Builder*) clearHp;

- (BOOL) hasCurLvlRequiredExp;
- (int32_t) curLvlRequiredExp;
- (MonsterLevelInfoProto_Builder*) setCurLvlRequiredExp:(int32_t) value;
- (MonsterLevelInfoProto_Builder*) clearCurLvlRequiredExp;

- (BOOL) hasFeederExp;
- (int32_t) feederExp;
- (MonsterLevelInfoProto_Builder*) setFeederExp:(int32_t) value;
- (MonsterLevelInfoProto_Builder*) clearFeederExp;

- (BOOL) hasFireDmg;
- (int32_t) fireDmg;
- (MonsterLevelInfoProto_Builder*) setFireDmg:(int32_t) value;
- (MonsterLevelInfoProto_Builder*) clearFireDmg;

- (BOOL) hasGrassDmg;
- (int32_t) grassDmg;
- (MonsterLevelInfoProto_Builder*) setGrassDmg:(int32_t) value;
- (MonsterLevelInfoProto_Builder*) clearGrassDmg;

- (BOOL) hasWaterDmg;
- (int32_t) waterDmg;
- (MonsterLevelInfoProto_Builder*) setWaterDmg:(int32_t) value;
- (MonsterLevelInfoProto_Builder*) clearWaterDmg;

- (BOOL) hasLightningDmg;
- (int32_t) lightningDmg;
- (MonsterLevelInfoProto_Builder*) setLightningDmg:(int32_t) value;
- (MonsterLevelInfoProto_Builder*) clearLightningDmg;

- (BOOL) hasDarknessDmg;
- (int32_t) darknessDmg;
- (MonsterLevelInfoProto_Builder*) setDarknessDmg:(int32_t) value;
- (MonsterLevelInfoProto_Builder*) clearDarknessDmg;

- (BOOL) hasRockDmg;
- (int32_t) rockDmg;
- (MonsterLevelInfoProto_Builder*) setRockDmg:(int32_t) value;
- (MonsterLevelInfoProto_Builder*) clearRockDmg;

- (BOOL) hasSpeed;
- (int32_t) speed;
- (MonsterLevelInfoProto_Builder*) setSpeed:(int32_t) value;
- (MonsterLevelInfoProto_Builder*) clearSpeed;

- (BOOL) hasHpExponentBase;
- (Float32) hpExponentBase;
- (MonsterLevelInfoProto_Builder*) setHpExponentBase:(Float32) value;
- (MonsterLevelInfoProto_Builder*) clearHpExponentBase;

- (BOOL) hasDmgExponentBase;
- (Float32) dmgExponentBase;
- (MonsterLevelInfoProto_Builder*) setDmgExponentBase:(Float32) value;
- (MonsterLevelInfoProto_Builder*) clearDmgExponentBase;

- (BOOL) hasExpLvlDivisor;
- (Float32) expLvlDivisor;
- (MonsterLevelInfoProto_Builder*) setExpLvlDivisor:(Float32) value;
- (MonsterLevelInfoProto_Builder*) clearExpLvlDivisor;

- (BOOL) hasExpLvlExponent;
- (Float32) expLvlExponent;
- (MonsterLevelInfoProto_Builder*) setExpLvlExponent:(Float32) value;
- (MonsterLevelInfoProto_Builder*) clearExpLvlExponent;
@end

@interface FullUserMonsterProto : PBGeneratedMessage {
@private
  BOOL hasIsComplete_:1;
  BOOL hasUserMonsterId_:1;
  BOOL hasCombineStartTime_:1;
  BOOL hasUserId_:1;
  BOOL hasMonsterId_:1;
  BOOL hasCurrentExp_:1;
  BOOL hasCurrentLvl_:1;
  BOOL hasCurrentHealth_:1;
  BOOL hasNumPieces_:1;
  BOOL hasTeamSlotNum_:1;
  BOOL isComplete_:1;
  int64_t userMonsterId;
  int64_t combineStartTime;
  int32_t userId;
  int32_t monsterId;
  int32_t currentExp;
  int32_t currentLvl;
  int32_t currentHealth;
  int32_t numPieces;
  int32_t teamSlotNum;
}
- (BOOL) hasUserMonsterId;
- (BOOL) hasUserId;
- (BOOL) hasMonsterId;
- (BOOL) hasCurrentExp;
- (BOOL) hasCurrentLvl;
- (BOOL) hasCurrentHealth;
- (BOOL) hasNumPieces;
- (BOOL) hasIsComplete;
- (BOOL) hasCombineStartTime;
- (BOOL) hasTeamSlotNum;
@property (readonly) int64_t userMonsterId;
@property (readonly) int32_t userId;
@property (readonly) int32_t monsterId;
@property (readonly) int32_t currentExp;
@property (readonly) int32_t currentLvl;
@property (readonly) int32_t currentHealth;
@property (readonly) int32_t numPieces;
- (BOOL) isComplete;
@property (readonly) int64_t combineStartTime;
@property (readonly) int32_t teamSlotNum;

+ (FullUserMonsterProto*) defaultInstance;
- (FullUserMonsterProto*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (FullUserMonsterProto_Builder*) builder;
+ (FullUserMonsterProto_Builder*) builder;
+ (FullUserMonsterProto_Builder*) builderWithPrototype:(FullUserMonsterProto*) prototype;

+ (FullUserMonsterProto*) parseFromData:(NSData*) data;
+ (FullUserMonsterProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (FullUserMonsterProto*) parseFromInputStream:(NSInputStream*) input;
+ (FullUserMonsterProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (FullUserMonsterProto*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (FullUserMonsterProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface FullUserMonsterProto_Builder : PBGeneratedMessage_Builder {
@private
  FullUserMonsterProto* result;
}

- (FullUserMonsterProto*) defaultInstance;

- (FullUserMonsterProto_Builder*) clear;
- (FullUserMonsterProto_Builder*) clone;

- (FullUserMonsterProto*) build;
- (FullUserMonsterProto*) buildPartial;

- (FullUserMonsterProto_Builder*) mergeFrom:(FullUserMonsterProto*) other;
- (FullUserMonsterProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (FullUserMonsterProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasUserMonsterId;
- (int64_t) userMonsterId;
- (FullUserMonsterProto_Builder*) setUserMonsterId:(int64_t) value;
- (FullUserMonsterProto_Builder*) clearUserMonsterId;

- (BOOL) hasUserId;
- (int32_t) userId;
- (FullUserMonsterProto_Builder*) setUserId:(int32_t) value;
- (FullUserMonsterProto_Builder*) clearUserId;

- (BOOL) hasMonsterId;
- (int32_t) monsterId;
- (FullUserMonsterProto_Builder*) setMonsterId:(int32_t) value;
- (FullUserMonsterProto_Builder*) clearMonsterId;

- (BOOL) hasCurrentExp;
- (int32_t) currentExp;
- (FullUserMonsterProto_Builder*) setCurrentExp:(int32_t) value;
- (FullUserMonsterProto_Builder*) clearCurrentExp;

- (BOOL) hasCurrentLvl;
- (int32_t) currentLvl;
- (FullUserMonsterProto_Builder*) setCurrentLvl:(int32_t) value;
- (FullUserMonsterProto_Builder*) clearCurrentLvl;

- (BOOL) hasCurrentHealth;
- (int32_t) currentHealth;
- (FullUserMonsterProto_Builder*) setCurrentHealth:(int32_t) value;
- (FullUserMonsterProto_Builder*) clearCurrentHealth;

- (BOOL) hasNumPieces;
- (int32_t) numPieces;
- (FullUserMonsterProto_Builder*) setNumPieces:(int32_t) value;
- (FullUserMonsterProto_Builder*) clearNumPieces;

- (BOOL) hasIsComplete;
- (BOOL) isComplete;
- (FullUserMonsterProto_Builder*) setIsComplete:(BOOL) value;
- (FullUserMonsterProto_Builder*) clearIsComplete;

- (BOOL) hasCombineStartTime;
- (int64_t) combineStartTime;
- (FullUserMonsterProto_Builder*) setCombineStartTime:(int64_t) value;
- (FullUserMonsterProto_Builder*) clearCombineStartTime;

- (BOOL) hasTeamSlotNum;
- (int32_t) teamSlotNum;
- (FullUserMonsterProto_Builder*) setTeamSlotNum:(int32_t) value;
- (FullUserMonsterProto_Builder*) clearTeamSlotNum;
@end

@interface MinimumUserMonsterProto : PBGeneratedMessage {
@private
  BOOL hasMonsterId_:1;
  BOOL hasMonsterLvl_:1;
  int32_t monsterId;
  int32_t monsterLvl;
}
- (BOOL) hasMonsterId;
- (BOOL) hasMonsterLvl;
@property (readonly) int32_t monsterId;
@property (readonly) int32_t monsterLvl;

+ (MinimumUserMonsterProto*) defaultInstance;
- (MinimumUserMonsterProto*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (MinimumUserMonsterProto_Builder*) builder;
+ (MinimumUserMonsterProto_Builder*) builder;
+ (MinimumUserMonsterProto_Builder*) builderWithPrototype:(MinimumUserMonsterProto*) prototype;

+ (MinimumUserMonsterProto*) parseFromData:(NSData*) data;
+ (MinimumUserMonsterProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MinimumUserMonsterProto*) parseFromInputStream:(NSInputStream*) input;
+ (MinimumUserMonsterProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MinimumUserMonsterProto*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (MinimumUserMonsterProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface MinimumUserMonsterProto_Builder : PBGeneratedMessage_Builder {
@private
  MinimumUserMonsterProto* result;
}

- (MinimumUserMonsterProto*) defaultInstance;

- (MinimumUserMonsterProto_Builder*) clear;
- (MinimumUserMonsterProto_Builder*) clone;

- (MinimumUserMonsterProto*) build;
- (MinimumUserMonsterProto*) buildPartial;

- (MinimumUserMonsterProto_Builder*) mergeFrom:(MinimumUserMonsterProto*) other;
- (MinimumUserMonsterProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (MinimumUserMonsterProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasMonsterId;
- (int32_t) monsterId;
- (MinimumUserMonsterProto_Builder*) setMonsterId:(int32_t) value;
- (MinimumUserMonsterProto_Builder*) clearMonsterId;

- (BOOL) hasMonsterLvl;
- (int32_t) monsterLvl;
- (MinimumUserMonsterProto_Builder*) setMonsterLvl:(int32_t) value;
- (MinimumUserMonsterProto_Builder*) clearMonsterLvl;
@end

@interface UserMonsterHealingProto : PBGeneratedMessage {
@private
  BOOL hasHealthProgress_:1;
  BOOL hasUserMonsterId_:1;
  BOOL hasQueuedTimeMillis_:1;
  BOOL hasUserId_:1;
  BOOL hasPriority_:1;
  Float32 healthProgress;
  int64_t userMonsterId;
  int64_t queuedTimeMillis;
  int32_t userId;
  int32_t priority;
}
- (BOOL) hasUserId;
- (BOOL) hasUserMonsterId;
- (BOOL) hasQueuedTimeMillis;
- (BOOL) hasHealthProgress;
- (BOOL) hasPriority;
@property (readonly) int32_t userId;
@property (readonly) int64_t userMonsterId;
@property (readonly) int64_t queuedTimeMillis;
@property (readonly) Float32 healthProgress;
@property (readonly) int32_t priority;

+ (UserMonsterHealingProto*) defaultInstance;
- (UserMonsterHealingProto*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (UserMonsterHealingProto_Builder*) builder;
+ (UserMonsterHealingProto_Builder*) builder;
+ (UserMonsterHealingProto_Builder*) builderWithPrototype:(UserMonsterHealingProto*) prototype;

+ (UserMonsterHealingProto*) parseFromData:(NSData*) data;
+ (UserMonsterHealingProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (UserMonsterHealingProto*) parseFromInputStream:(NSInputStream*) input;
+ (UserMonsterHealingProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (UserMonsterHealingProto*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (UserMonsterHealingProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface UserMonsterHealingProto_Builder : PBGeneratedMessage_Builder {
@private
  UserMonsterHealingProto* result;
}

- (UserMonsterHealingProto*) defaultInstance;

- (UserMonsterHealingProto_Builder*) clear;
- (UserMonsterHealingProto_Builder*) clone;

- (UserMonsterHealingProto*) build;
- (UserMonsterHealingProto*) buildPartial;

- (UserMonsterHealingProto_Builder*) mergeFrom:(UserMonsterHealingProto*) other;
- (UserMonsterHealingProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (UserMonsterHealingProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasUserId;
- (int32_t) userId;
- (UserMonsterHealingProto_Builder*) setUserId:(int32_t) value;
- (UserMonsterHealingProto_Builder*) clearUserId;

- (BOOL) hasUserMonsterId;
- (int64_t) userMonsterId;
- (UserMonsterHealingProto_Builder*) setUserMonsterId:(int64_t) value;
- (UserMonsterHealingProto_Builder*) clearUserMonsterId;

- (BOOL) hasQueuedTimeMillis;
- (int64_t) queuedTimeMillis;
- (UserMonsterHealingProto_Builder*) setQueuedTimeMillis:(int64_t) value;
- (UserMonsterHealingProto_Builder*) clearQueuedTimeMillis;

- (BOOL) hasHealthProgress;
- (Float32) healthProgress;
- (UserMonsterHealingProto_Builder*) setHealthProgress:(Float32) value;
- (UserMonsterHealingProto_Builder*) clearHealthProgress;

- (BOOL) hasPriority;
- (int32_t) priority;
- (UserMonsterHealingProto_Builder*) setPriority:(int32_t) value;
- (UserMonsterHealingProto_Builder*) clearPriority;
@end

@interface UserMonsterCurrentHealthProto : PBGeneratedMessage {
@private
  BOOL hasUserMonsterId_:1;
  BOOL hasCurrentHealth_:1;
  int64_t userMonsterId;
  int32_t currentHealth;
}
- (BOOL) hasUserMonsterId;
- (BOOL) hasCurrentHealth;
@property (readonly) int64_t userMonsterId;
@property (readonly) int32_t currentHealth;

+ (UserMonsterCurrentHealthProto*) defaultInstance;
- (UserMonsterCurrentHealthProto*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (UserMonsterCurrentHealthProto_Builder*) builder;
+ (UserMonsterCurrentHealthProto_Builder*) builder;
+ (UserMonsterCurrentHealthProto_Builder*) builderWithPrototype:(UserMonsterCurrentHealthProto*) prototype;

+ (UserMonsterCurrentHealthProto*) parseFromData:(NSData*) data;
+ (UserMonsterCurrentHealthProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (UserMonsterCurrentHealthProto*) parseFromInputStream:(NSInputStream*) input;
+ (UserMonsterCurrentHealthProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (UserMonsterCurrentHealthProto*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (UserMonsterCurrentHealthProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface UserMonsterCurrentHealthProto_Builder : PBGeneratedMessage_Builder {
@private
  UserMonsterCurrentHealthProto* result;
}

- (UserMonsterCurrentHealthProto*) defaultInstance;

- (UserMonsterCurrentHealthProto_Builder*) clear;
- (UserMonsterCurrentHealthProto_Builder*) clone;

- (UserMonsterCurrentHealthProto*) build;
- (UserMonsterCurrentHealthProto*) buildPartial;

- (UserMonsterCurrentHealthProto_Builder*) mergeFrom:(UserMonsterCurrentHealthProto*) other;
- (UserMonsterCurrentHealthProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (UserMonsterCurrentHealthProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasUserMonsterId;
- (int64_t) userMonsterId;
- (UserMonsterCurrentHealthProto_Builder*) setUserMonsterId:(int64_t) value;
- (UserMonsterCurrentHealthProto_Builder*) clearUserMonsterId;

- (BOOL) hasCurrentHealth;
- (int32_t) currentHealth;
- (UserMonsterCurrentHealthProto_Builder*) setCurrentHealth:(int32_t) value;
- (UserMonsterCurrentHealthProto_Builder*) clearCurrentHealth;
@end

@interface UserEnhancementProto : PBGeneratedMessage {
@private
  BOOL hasUserId_:1;
  BOOL hasBaseMonster_:1;
  int32_t userId;
  UserEnhancementItemProto* baseMonster;
  NSMutableArray* mutableFeedersList;
}
- (BOOL) hasUserId;
- (BOOL) hasBaseMonster;
@property (readonly) int32_t userId;
@property (readonly, retain) UserEnhancementItemProto* baseMonster;
- (NSArray*) feedersList;
- (UserEnhancementItemProto*) feedersAtIndex:(int32_t) index;

+ (UserEnhancementProto*) defaultInstance;
- (UserEnhancementProto*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (UserEnhancementProto_Builder*) builder;
+ (UserEnhancementProto_Builder*) builder;
+ (UserEnhancementProto_Builder*) builderWithPrototype:(UserEnhancementProto*) prototype;

+ (UserEnhancementProto*) parseFromData:(NSData*) data;
+ (UserEnhancementProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (UserEnhancementProto*) parseFromInputStream:(NSInputStream*) input;
+ (UserEnhancementProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (UserEnhancementProto*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (UserEnhancementProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface UserEnhancementProto_Builder : PBGeneratedMessage_Builder {
@private
  UserEnhancementProto* result;
}

- (UserEnhancementProto*) defaultInstance;

- (UserEnhancementProto_Builder*) clear;
- (UserEnhancementProto_Builder*) clone;

- (UserEnhancementProto*) build;
- (UserEnhancementProto*) buildPartial;

- (UserEnhancementProto_Builder*) mergeFrom:(UserEnhancementProto*) other;
- (UserEnhancementProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (UserEnhancementProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasUserId;
- (int32_t) userId;
- (UserEnhancementProto_Builder*) setUserId:(int32_t) value;
- (UserEnhancementProto_Builder*) clearUserId;

- (BOOL) hasBaseMonster;
- (UserEnhancementItemProto*) baseMonster;
- (UserEnhancementProto_Builder*) setBaseMonster:(UserEnhancementItemProto*) value;
- (UserEnhancementProto_Builder*) setBaseMonsterBuilder:(UserEnhancementItemProto_Builder*) builderForValue;
- (UserEnhancementProto_Builder*) mergeBaseMonster:(UserEnhancementItemProto*) value;
- (UserEnhancementProto_Builder*) clearBaseMonster;

- (NSArray*) feedersList;
- (UserEnhancementItemProto*) feedersAtIndex:(int32_t) index;
- (UserEnhancementProto_Builder*) replaceFeedersAtIndex:(int32_t) index with:(UserEnhancementItemProto*) value;
- (UserEnhancementProto_Builder*) addFeeders:(UserEnhancementItemProto*) value;
- (UserEnhancementProto_Builder*) addAllFeeders:(NSArray*) values;
- (UserEnhancementProto_Builder*) clearFeedersList;
@end

@interface UserEnhancementItemProto : PBGeneratedMessage {
@private
  BOOL hasUserMonsterId_:1;
  BOOL hasExpectedStartTimeMillis_:1;
  BOOL hasEnhancingCost_:1;
  int64_t userMonsterId;
  int64_t expectedStartTimeMillis;
  int32_t enhancingCost;
}
- (BOOL) hasUserMonsterId;
- (BOOL) hasExpectedStartTimeMillis;
- (BOOL) hasEnhancingCost;
@property (readonly) int64_t userMonsterId;
@property (readonly) int64_t expectedStartTimeMillis;
@property (readonly) int32_t enhancingCost;

+ (UserEnhancementItemProto*) defaultInstance;
- (UserEnhancementItemProto*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (UserEnhancementItemProto_Builder*) builder;
+ (UserEnhancementItemProto_Builder*) builder;
+ (UserEnhancementItemProto_Builder*) builderWithPrototype:(UserEnhancementItemProto*) prototype;

+ (UserEnhancementItemProto*) parseFromData:(NSData*) data;
+ (UserEnhancementItemProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (UserEnhancementItemProto*) parseFromInputStream:(NSInputStream*) input;
+ (UserEnhancementItemProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (UserEnhancementItemProto*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (UserEnhancementItemProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface UserEnhancementItemProto_Builder : PBGeneratedMessage_Builder {
@private
  UserEnhancementItemProto* result;
}

- (UserEnhancementItemProto*) defaultInstance;

- (UserEnhancementItemProto_Builder*) clear;
- (UserEnhancementItemProto_Builder*) clone;

- (UserEnhancementItemProto*) build;
- (UserEnhancementItemProto*) buildPartial;

- (UserEnhancementItemProto_Builder*) mergeFrom:(UserEnhancementItemProto*) other;
- (UserEnhancementItemProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (UserEnhancementItemProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasUserMonsterId;
- (int64_t) userMonsterId;
- (UserEnhancementItemProto_Builder*) setUserMonsterId:(int64_t) value;
- (UserEnhancementItemProto_Builder*) clearUserMonsterId;

- (BOOL) hasExpectedStartTimeMillis;
- (int64_t) expectedStartTimeMillis;
- (UserEnhancementItemProto_Builder*) setExpectedStartTimeMillis:(int64_t) value;
- (UserEnhancementItemProto_Builder*) clearExpectedStartTimeMillis;

- (BOOL) hasEnhancingCost;
- (int32_t) enhancingCost;
- (UserEnhancementItemProto_Builder*) setEnhancingCost:(int32_t) value;
- (UserEnhancementItemProto_Builder*) clearEnhancingCost;
@end

@interface UserMonsterCurrentExpProto : PBGeneratedMessage {
@private
  BOOL hasUserMonsterId_:1;
  BOOL hasExpectedExperience_:1;
  BOOL hasExpectedLevel_:1;
  int64_t userMonsterId;
  int32_t expectedExperience;
  int32_t expectedLevel;
}
- (BOOL) hasUserMonsterId;
- (BOOL) hasExpectedExperience;
- (BOOL) hasExpectedLevel;
@property (readonly) int64_t userMonsterId;
@property (readonly) int32_t expectedExperience;
@property (readonly) int32_t expectedLevel;

+ (UserMonsterCurrentExpProto*) defaultInstance;
- (UserMonsterCurrentExpProto*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (UserMonsterCurrentExpProto_Builder*) builder;
+ (UserMonsterCurrentExpProto_Builder*) builder;
+ (UserMonsterCurrentExpProto_Builder*) builderWithPrototype:(UserMonsterCurrentExpProto*) prototype;

+ (UserMonsterCurrentExpProto*) parseFromData:(NSData*) data;
+ (UserMonsterCurrentExpProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (UserMonsterCurrentExpProto*) parseFromInputStream:(NSInputStream*) input;
+ (UserMonsterCurrentExpProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (UserMonsterCurrentExpProto*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (UserMonsterCurrentExpProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface UserMonsterCurrentExpProto_Builder : PBGeneratedMessage_Builder {
@private
  UserMonsterCurrentExpProto* result;
}

- (UserMonsterCurrentExpProto*) defaultInstance;

- (UserMonsterCurrentExpProto_Builder*) clear;
- (UserMonsterCurrentExpProto_Builder*) clone;

- (UserMonsterCurrentExpProto*) build;
- (UserMonsterCurrentExpProto*) buildPartial;

- (UserMonsterCurrentExpProto_Builder*) mergeFrom:(UserMonsterCurrentExpProto*) other;
- (UserMonsterCurrentExpProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (UserMonsterCurrentExpProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasUserMonsterId;
- (int64_t) userMonsterId;
- (UserMonsterCurrentExpProto_Builder*) setUserMonsterId:(int64_t) value;
- (UserMonsterCurrentExpProto_Builder*) clearUserMonsterId;

- (BOOL) hasExpectedExperience;
- (int32_t) expectedExperience;
- (UserMonsterCurrentExpProto_Builder*) setExpectedExperience:(int32_t) value;
- (UserMonsterCurrentExpProto_Builder*) clearExpectedExperience;

- (BOOL) hasExpectedLevel;
- (int32_t) expectedLevel;
- (UserMonsterCurrentExpProto_Builder*) setExpectedLevel:(int32_t) value;
- (UserMonsterCurrentExpProto_Builder*) clearExpectedLevel;
@end

@interface MinimumUserMonsterSellProto : PBGeneratedMessage {
@private
  BOOL hasUserMonsterId_:1;
  BOOL hasCashAmount_:1;
  int64_t userMonsterId;
  int32_t cashAmount;
}
- (BOOL) hasUserMonsterId;
- (BOOL) hasCashAmount;
@property (readonly) int64_t userMonsterId;
@property (readonly) int32_t cashAmount;

+ (MinimumUserMonsterSellProto*) defaultInstance;
- (MinimumUserMonsterSellProto*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (MinimumUserMonsterSellProto_Builder*) builder;
+ (MinimumUserMonsterSellProto_Builder*) builder;
+ (MinimumUserMonsterSellProto_Builder*) builderWithPrototype:(MinimumUserMonsterSellProto*) prototype;

+ (MinimumUserMonsterSellProto*) parseFromData:(NSData*) data;
+ (MinimumUserMonsterSellProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MinimumUserMonsterSellProto*) parseFromInputStream:(NSInputStream*) input;
+ (MinimumUserMonsterSellProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MinimumUserMonsterSellProto*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (MinimumUserMonsterSellProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface MinimumUserMonsterSellProto_Builder : PBGeneratedMessage_Builder {
@private
  MinimumUserMonsterSellProto* result;
}

- (MinimumUserMonsterSellProto*) defaultInstance;

- (MinimumUserMonsterSellProto_Builder*) clear;
- (MinimumUserMonsterSellProto_Builder*) clone;

- (MinimumUserMonsterSellProto*) build;
- (MinimumUserMonsterSellProto*) buildPartial;

- (MinimumUserMonsterSellProto_Builder*) mergeFrom:(MinimumUserMonsterSellProto*) other;
- (MinimumUserMonsterSellProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (MinimumUserMonsterSellProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasUserMonsterId;
- (int64_t) userMonsterId;
- (MinimumUserMonsterSellProto_Builder*) setUserMonsterId:(int64_t) value;
- (MinimumUserMonsterSellProto_Builder*) clearUserMonsterId;

- (BOOL) hasCashAmount;
- (int32_t) cashAmount;
- (MinimumUserMonsterSellProto_Builder*) setCashAmount:(int32_t) value;
- (MinimumUserMonsterSellProto_Builder*) clearCashAmount;
@end

@interface UserCurrentMonsterTeamProto : PBGeneratedMessage {
@private
  BOOL hasUserId_:1;
  int32_t userId;
  NSMutableArray* mutableCurrentTeamList;
}
- (BOOL) hasUserId;
@property (readonly) int32_t userId;
- (NSArray*) currentTeamList;
- (FullUserMonsterProto*) currentTeamAtIndex:(int32_t) index;

+ (UserCurrentMonsterTeamProto*) defaultInstance;
- (UserCurrentMonsterTeamProto*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (UserCurrentMonsterTeamProto_Builder*) builder;
+ (UserCurrentMonsterTeamProto_Builder*) builder;
+ (UserCurrentMonsterTeamProto_Builder*) builderWithPrototype:(UserCurrentMonsterTeamProto*) prototype;

+ (UserCurrentMonsterTeamProto*) parseFromData:(NSData*) data;
+ (UserCurrentMonsterTeamProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (UserCurrentMonsterTeamProto*) parseFromInputStream:(NSInputStream*) input;
+ (UserCurrentMonsterTeamProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (UserCurrentMonsterTeamProto*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (UserCurrentMonsterTeamProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface UserCurrentMonsterTeamProto_Builder : PBGeneratedMessage_Builder {
@private
  UserCurrentMonsterTeamProto* result;
}

- (UserCurrentMonsterTeamProto*) defaultInstance;

- (UserCurrentMonsterTeamProto_Builder*) clear;
- (UserCurrentMonsterTeamProto_Builder*) clone;

- (UserCurrentMonsterTeamProto*) build;
- (UserCurrentMonsterTeamProto*) buildPartial;

- (UserCurrentMonsterTeamProto_Builder*) mergeFrom:(UserCurrentMonsterTeamProto*) other;
- (UserCurrentMonsterTeamProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (UserCurrentMonsterTeamProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasUserId;
- (int32_t) userId;
- (UserCurrentMonsterTeamProto_Builder*) setUserId:(int32_t) value;
- (UserCurrentMonsterTeamProto_Builder*) clearUserId;

- (NSArray*) currentTeamList;
- (FullUserMonsterProto*) currentTeamAtIndex:(int32_t) index;
- (UserCurrentMonsterTeamProto_Builder*) replaceCurrentTeamAtIndex:(int32_t) index with:(FullUserMonsterProto*) value;
- (UserCurrentMonsterTeamProto_Builder*) addCurrentTeam:(FullUserMonsterProto*) value;
- (UserCurrentMonsterTeamProto_Builder*) addAllCurrentTeam:(NSArray*) values;
- (UserCurrentMonsterTeamProto_Builder*) clearCurrentTeamList;
@end

@interface UserMonsterEvolutionProto : PBGeneratedMessage {
@private
  BOOL hasCatalystUserMonsterId_:1;
  BOOL hasStartTime_:1;
  int64_t catalystUserMonsterId;
  int64_t startTime;
  NSMutableArray* mutableUserMonsterIdsList;
}
- (BOOL) hasCatalystUserMonsterId;
- (BOOL) hasStartTime;
@property (readonly) int64_t catalystUserMonsterId;
@property (readonly) int64_t startTime;
- (NSArray*) userMonsterIdsList;
- (int64_t) userMonsterIdsAtIndex:(int32_t) index;

+ (UserMonsterEvolutionProto*) defaultInstance;
- (UserMonsterEvolutionProto*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (UserMonsterEvolutionProto_Builder*) builder;
+ (UserMonsterEvolutionProto_Builder*) builder;
+ (UserMonsterEvolutionProto_Builder*) builderWithPrototype:(UserMonsterEvolutionProto*) prototype;

+ (UserMonsterEvolutionProto*) parseFromData:(NSData*) data;
+ (UserMonsterEvolutionProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (UserMonsterEvolutionProto*) parseFromInputStream:(NSInputStream*) input;
+ (UserMonsterEvolutionProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (UserMonsterEvolutionProto*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (UserMonsterEvolutionProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface UserMonsterEvolutionProto_Builder : PBGeneratedMessage_Builder {
@private
  UserMonsterEvolutionProto* result;
}

- (UserMonsterEvolutionProto*) defaultInstance;

- (UserMonsterEvolutionProto_Builder*) clear;
- (UserMonsterEvolutionProto_Builder*) clone;

- (UserMonsterEvolutionProto*) build;
- (UserMonsterEvolutionProto*) buildPartial;

- (UserMonsterEvolutionProto_Builder*) mergeFrom:(UserMonsterEvolutionProto*) other;
- (UserMonsterEvolutionProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (UserMonsterEvolutionProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasCatalystUserMonsterId;
- (int64_t) catalystUserMonsterId;
- (UserMonsterEvolutionProto_Builder*) setCatalystUserMonsterId:(int64_t) value;
- (UserMonsterEvolutionProto_Builder*) clearCatalystUserMonsterId;

- (NSArray*) userMonsterIdsList;
- (int64_t) userMonsterIdsAtIndex:(int32_t) index;
- (UserMonsterEvolutionProto_Builder*) replaceUserMonsterIdsAtIndex:(int32_t) index with:(int64_t) value;
- (UserMonsterEvolutionProto_Builder*) addUserMonsterIds:(int64_t) value;
- (UserMonsterEvolutionProto_Builder*) addAllUserMonsterIds:(NSArray*) values;
- (UserMonsterEvolutionProto_Builder*) clearUserMonsterIdsList;

- (BOOL) hasStartTime;
- (int64_t) startTime;
- (UserMonsterEvolutionProto_Builder*) setStartTime:(int64_t) value;
- (UserMonsterEvolutionProto_Builder*) clearStartTime;
@end

@interface MonsterBattleDialogueProto : PBGeneratedMessage {
@private
  BOOL hasProbabilityUttered_:1;
  BOOL hasMonsterId_:1;
  BOOL hasDialogue_:1;
  BOOL hasDialogueType_:1;
  Float32 probabilityUttered;
  int32_t monsterId;
  NSString* dialogue;
  MonsterBattleDialogueProto_DialogueType dialogueType;
}
- (BOOL) hasMonsterId;
- (BOOL) hasDialogueType;
- (BOOL) hasDialogue;
- (BOOL) hasProbabilityUttered;
@property (readonly) int32_t monsterId;
@property (readonly) MonsterBattleDialogueProto_DialogueType dialogueType;
@property (readonly, retain) NSString* dialogue;
@property (readonly) Float32 probabilityUttered;

+ (MonsterBattleDialogueProto*) defaultInstance;
- (MonsterBattleDialogueProto*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (MonsterBattleDialogueProto_Builder*) builder;
+ (MonsterBattleDialogueProto_Builder*) builder;
+ (MonsterBattleDialogueProto_Builder*) builderWithPrototype:(MonsterBattleDialogueProto*) prototype;

+ (MonsterBattleDialogueProto*) parseFromData:(NSData*) data;
+ (MonsterBattleDialogueProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MonsterBattleDialogueProto*) parseFromInputStream:(NSInputStream*) input;
+ (MonsterBattleDialogueProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MonsterBattleDialogueProto*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (MonsterBattleDialogueProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface MonsterBattleDialogueProto_Builder : PBGeneratedMessage_Builder {
@private
  MonsterBattleDialogueProto* result;
}

- (MonsterBattleDialogueProto*) defaultInstance;

- (MonsterBattleDialogueProto_Builder*) clear;
- (MonsterBattleDialogueProto_Builder*) clone;

- (MonsterBattleDialogueProto*) build;
- (MonsterBattleDialogueProto*) buildPartial;

- (MonsterBattleDialogueProto_Builder*) mergeFrom:(MonsterBattleDialogueProto*) other;
- (MonsterBattleDialogueProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (MonsterBattleDialogueProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasMonsterId;
- (int32_t) monsterId;
- (MonsterBattleDialogueProto_Builder*) setMonsterId:(int32_t) value;
- (MonsterBattleDialogueProto_Builder*) clearMonsterId;

- (BOOL) hasDialogueType;
- (MonsterBattleDialogueProto_DialogueType) dialogueType;
- (MonsterBattleDialogueProto_Builder*) setDialogueType:(MonsterBattleDialogueProto_DialogueType) value;
- (MonsterBattleDialogueProto_Builder*) clearDialogueType;

- (BOOL) hasDialogue;
- (NSString*) dialogue;
- (MonsterBattleDialogueProto_Builder*) setDialogue:(NSString*) value;
- (MonsterBattleDialogueProto_Builder*) clearDialogue;

- (BOOL) hasProbabilityUttered;
- (Float32) probabilityUttered;
- (MonsterBattleDialogueProto_Builder*) setProbabilityUttered:(Float32) value;
- (MonsterBattleDialogueProto_Builder*) clearProbabilityUttered;
@end


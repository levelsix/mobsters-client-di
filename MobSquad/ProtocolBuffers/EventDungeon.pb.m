// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "EventDungeon.pb.h"

@implementation EventDungeonRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [EventDungeonRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    [MonsterStuffRoot registerAllExtensions:registry];
    [SharedEnumConfigRoot registerAllExtensions:registry];
    [TaskRoot registerAllExtensions:registry];
    [UserRoot registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface BeginDungeonRequestProto ()
@property (retain) MinimumUserProto* sender;
@property int64_t clientTime;
@property int32_t taskId;
@property BOOL userBeatAllCityTasks;
@property BOOL isEvent;
@property int32_t persistentEventId;
@property int32_t gemsSpent;
@property (retain) NSMutableArray* mutableQuestIdsList;
@property Element elem;
@property BOOL forceEnemyElem;
@end

@implementation BeginDungeonRequestProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value {
  hasSender_ = !!value;
}
@synthesize sender;
- (BOOL) hasClientTime {
  return !!hasClientTime_;
}
- (void) setHasClientTime:(BOOL) value {
  hasClientTime_ = !!value;
}
@synthesize clientTime;
- (BOOL) hasTaskId {
  return !!hasTaskId_;
}
- (void) setHasTaskId:(BOOL) value {
  hasTaskId_ = !!value;
}
@synthesize taskId;
- (BOOL) hasUserBeatAllCityTasks {
  return !!hasUserBeatAllCityTasks_;
}
- (void) setHasUserBeatAllCityTasks:(BOOL) value {
  hasUserBeatAllCityTasks_ = !!value;
}
- (BOOL) userBeatAllCityTasks {
  return !!userBeatAllCityTasks_;
}
- (void) setUserBeatAllCityTasks:(BOOL) value {
  userBeatAllCityTasks_ = !!value;
}
- (BOOL) hasIsEvent {
  return !!hasIsEvent_;
}
- (void) setHasIsEvent:(BOOL) value {
  hasIsEvent_ = !!value;
}
- (BOOL) isEvent {
  return !!isEvent_;
}
- (void) setIsEvent:(BOOL) value {
  isEvent_ = !!value;
}
- (BOOL) hasPersistentEventId {
  return !!hasPersistentEventId_;
}
- (void) setHasPersistentEventId:(BOOL) value {
  hasPersistentEventId_ = !!value;
}
@synthesize persistentEventId;
- (BOOL) hasGemsSpent {
  return !!hasGemsSpent_;
}
- (void) setHasGemsSpent:(BOOL) value {
  hasGemsSpent_ = !!value;
}
@synthesize gemsSpent;
@synthesize mutableQuestIdsList;
- (BOOL) hasElem {
  return !!hasElem_;
}
- (void) setHasElem:(BOOL) value {
  hasElem_ = !!value;
}
@synthesize elem;
- (BOOL) hasForceEnemyElem {
  return !!hasForceEnemyElem_;
}
- (void) setHasForceEnemyElem:(BOOL) value {
  hasForceEnemyElem_ = !!value;
}
- (BOOL) forceEnemyElem {
  return !!forceEnemyElem_;
}
- (void) setForceEnemyElem:(BOOL) value {
  forceEnemyElem_ = !!value;
}
- (void) dealloc {
  self.sender = nil;
  self.mutableQuestIdsList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.clientTime = 0L;
    self.taskId = 0;
    self.userBeatAllCityTasks = NO;
    self.isEvent = NO;
    self.persistentEventId = 0;
    self.gemsSpent = 0;
    self.elem = ElementNoElement;
    self.forceEnemyElem = NO;
  }
  return self;
}
static BeginDungeonRequestProto* defaultBeginDungeonRequestProtoInstance = nil;
+ (void) initialize {
  if (self == [BeginDungeonRequestProto class]) {
    defaultBeginDungeonRequestProtoInstance = [[BeginDungeonRequestProto alloc] init];
  }
}
+ (BeginDungeonRequestProto*) defaultInstance {
  return defaultBeginDungeonRequestProtoInstance;
}
- (BeginDungeonRequestProto*) defaultInstance {
  return defaultBeginDungeonRequestProtoInstance;
}
- (NSArray*) questIdsList {
  return mutableQuestIdsList;
}
- (int32_t) questIdsAtIndex:(int32_t) index {
  id value = [mutableQuestIdsList objectAtIndex:index];
  return [value intValue];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasClientTime) {
    [output writeInt64:2 value:self.clientTime];
  }
  if (self.hasTaskId) {
    [output writeInt32:3 value:self.taskId];
  }
  if (self.hasUserBeatAllCityTasks) {
    [output writeBool:4 value:self.userBeatAllCityTasks];
  }
  if (self.hasIsEvent) {
    [output writeBool:5 value:self.isEvent];
  }
  if (self.hasPersistentEventId) {
    [output writeInt32:6 value:self.persistentEventId];
  }
  if (self.hasGemsSpent) {
    [output writeInt32:7 value:self.gemsSpent];
  }
  for (NSNumber* value in self.mutableQuestIdsList) {
    [output writeInt32:8 value:[value intValue]];
  }
  if (self.hasElem) {
    [output writeEnum:9 value:self.elem];
  }
  if (self.hasForceEnemyElem) {
    [output writeBool:10 value:self.forceEnemyElem];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSender) {
    size += computeMessageSize(1, self.sender);
  }
  if (self.hasClientTime) {
    size += computeInt64Size(2, self.clientTime);
  }
  if (self.hasTaskId) {
    size += computeInt32Size(3, self.taskId);
  }
  if (self.hasUserBeatAllCityTasks) {
    size += computeBoolSize(4, self.userBeatAllCityTasks);
  }
  if (self.hasIsEvent) {
    size += computeBoolSize(5, self.isEvent);
  }
  if (self.hasPersistentEventId) {
    size += computeInt32Size(6, self.persistentEventId);
  }
  if (self.hasGemsSpent) {
    size += computeInt32Size(7, self.gemsSpent);
  }
  {
    int32_t dataSize = 0;
    for (NSNumber* value in self.mutableQuestIdsList) {
      dataSize += computeInt32SizeNoTag([value intValue]);
    }
    size += dataSize;
    size += 1 * self.mutableQuestIdsList.count;
  }
  if (self.hasElem) {
    size += computeEnumSize(9, self.elem);
  }
  if (self.hasForceEnemyElem) {
    size += computeBoolSize(10, self.forceEnemyElem);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (BeginDungeonRequestProto*) parseFromData:(NSData*) data {
  return (BeginDungeonRequestProto*)[[[BeginDungeonRequestProto builder] mergeFromData:data] build];
}
+ (BeginDungeonRequestProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BeginDungeonRequestProto*)[[[BeginDungeonRequestProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (BeginDungeonRequestProto*) parseFromInputStream:(NSInputStream*) input {
  return (BeginDungeonRequestProto*)[[[BeginDungeonRequestProto builder] mergeFromInputStream:input] build];
}
+ (BeginDungeonRequestProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BeginDungeonRequestProto*)[[[BeginDungeonRequestProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BeginDungeonRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (BeginDungeonRequestProto*)[[[BeginDungeonRequestProto builder] mergeFromCodedInputStream:input] build];
}
+ (BeginDungeonRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BeginDungeonRequestProto*)[[[BeginDungeonRequestProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BeginDungeonRequestProto_Builder*) builder {
  return [[[BeginDungeonRequestProto_Builder alloc] init] autorelease];
}
+ (BeginDungeonRequestProto_Builder*) builderWithPrototype:(BeginDungeonRequestProto*) prototype {
  return [[BeginDungeonRequestProto builder] mergeFrom:prototype];
}
- (BeginDungeonRequestProto_Builder*) builder {
  return [BeginDungeonRequestProto builder];
}
@end

@interface BeginDungeonRequestProto_Builder()
@property (retain) BeginDungeonRequestProto* result;
@end

@implementation BeginDungeonRequestProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[BeginDungeonRequestProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (BeginDungeonRequestProto_Builder*) clear {
  self.result = [[[BeginDungeonRequestProto alloc] init] autorelease];
  return self;
}
- (BeginDungeonRequestProto_Builder*) clone {
  return [BeginDungeonRequestProto builderWithPrototype:result];
}
- (BeginDungeonRequestProto*) defaultInstance {
  return [BeginDungeonRequestProto defaultInstance];
}
- (BeginDungeonRequestProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (BeginDungeonRequestProto*) buildPartial {
  BeginDungeonRequestProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (BeginDungeonRequestProto_Builder*) mergeFrom:(BeginDungeonRequestProto*) other {
  if (other == [BeginDungeonRequestProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasClientTime) {
    [self setClientTime:other.clientTime];
  }
  if (other.hasTaskId) {
    [self setTaskId:other.taskId];
  }
  if (other.hasUserBeatAllCityTasks) {
    [self setUserBeatAllCityTasks:other.userBeatAllCityTasks];
  }
  if (other.hasIsEvent) {
    [self setIsEvent:other.isEvent];
  }
  if (other.hasPersistentEventId) {
    [self setPersistentEventId:other.persistentEventId];
  }
  if (other.hasGemsSpent) {
    [self setGemsSpent:other.gemsSpent];
  }
  if (other.mutableQuestIdsList.count > 0) {
    if (result.mutableQuestIdsList == nil) {
      result.mutableQuestIdsList = [NSMutableArray array];
    }
    [result.mutableQuestIdsList addObjectsFromArray:other.mutableQuestIdsList];
  }
  if (other.hasElem) {
    [self setElem:other.elem];
  }
  if (other.hasForceEnemyElem) {
    [self setForceEnemyElem:other.forceEnemyElem];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (BeginDungeonRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (BeginDungeonRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setClientTime:[input readInt64]];
        break;
      }
      case 24: {
        [self setTaskId:[input readInt32]];
        break;
      }
      case 32: {
        [self setUserBeatAllCityTasks:[input readBool]];
        break;
      }
      case 40: {
        [self setIsEvent:[input readBool]];
        break;
      }
      case 48: {
        [self setPersistentEventId:[input readInt32]];
        break;
      }
      case 56: {
        [self setGemsSpent:[input readInt32]];
        break;
      }
      case 64: {
        [self addQuestIds:[input readInt32]];
        break;
      }
      case 72: {
        int32_t value = [input readEnum];
        if (ElementIsValidValue(value)) {
          [self setElem:value];
        } else {
          [unknownFields mergeVarintField:9 value:value];
        }
        break;
      }
      case 80: {
        [self setForceEnemyElem:[input readBool]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (BeginDungeonRequestProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (BeginDungeonRequestProto_Builder*) setSenderBuilder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (BeginDungeonRequestProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (BeginDungeonRequestProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasClientTime {
  return result.hasClientTime;
}
- (int64_t) clientTime {
  return result.clientTime;
}
- (BeginDungeonRequestProto_Builder*) setClientTime:(int64_t) value {
  result.hasClientTime = YES;
  result.clientTime = value;
  return self;
}
- (BeginDungeonRequestProto_Builder*) clearClientTime {
  result.hasClientTime = NO;
  result.clientTime = 0L;
  return self;
}
- (BOOL) hasTaskId {
  return result.hasTaskId;
}
- (int32_t) taskId {
  return result.taskId;
}
- (BeginDungeonRequestProto_Builder*) setTaskId:(int32_t) value {
  result.hasTaskId = YES;
  result.taskId = value;
  return self;
}
- (BeginDungeonRequestProto_Builder*) clearTaskId {
  result.hasTaskId = NO;
  result.taskId = 0;
  return self;
}
- (BOOL) hasUserBeatAllCityTasks {
  return result.hasUserBeatAllCityTasks;
}
- (BOOL) userBeatAllCityTasks {
  return result.userBeatAllCityTasks;
}
- (BeginDungeonRequestProto_Builder*) setUserBeatAllCityTasks:(BOOL) value {
  result.hasUserBeatAllCityTasks = YES;
  result.userBeatAllCityTasks = value;
  return self;
}
- (BeginDungeonRequestProto_Builder*) clearUserBeatAllCityTasks {
  result.hasUserBeatAllCityTasks = NO;
  result.userBeatAllCityTasks = NO;
  return self;
}
- (BOOL) hasIsEvent {
  return result.hasIsEvent;
}
- (BOOL) isEvent {
  return result.isEvent;
}
- (BeginDungeonRequestProto_Builder*) setIsEvent:(BOOL) value {
  result.hasIsEvent = YES;
  result.isEvent = value;
  return self;
}
- (BeginDungeonRequestProto_Builder*) clearIsEvent {
  result.hasIsEvent = NO;
  result.isEvent = NO;
  return self;
}
- (BOOL) hasPersistentEventId {
  return result.hasPersistentEventId;
}
- (int32_t) persistentEventId {
  return result.persistentEventId;
}
- (BeginDungeonRequestProto_Builder*) setPersistentEventId:(int32_t) value {
  result.hasPersistentEventId = YES;
  result.persistentEventId = value;
  return self;
}
- (BeginDungeonRequestProto_Builder*) clearPersistentEventId {
  result.hasPersistentEventId = NO;
  result.persistentEventId = 0;
  return self;
}
- (BOOL) hasGemsSpent {
  return result.hasGemsSpent;
}
- (int32_t) gemsSpent {
  return result.gemsSpent;
}
- (BeginDungeonRequestProto_Builder*) setGemsSpent:(int32_t) value {
  result.hasGemsSpent = YES;
  result.gemsSpent = value;
  return self;
}
- (BeginDungeonRequestProto_Builder*) clearGemsSpent {
  result.hasGemsSpent = NO;
  result.gemsSpent = 0;
  return self;
}
- (NSArray*) questIdsList {
  if (result.mutableQuestIdsList == nil) {
    return [NSArray array];
  }
  return result.mutableQuestIdsList;
}
- (int32_t) questIdsAtIndex:(int32_t) index {
  return [result questIdsAtIndex:index];
}
- (BeginDungeonRequestProto_Builder*) replaceQuestIdsAtIndex:(int32_t) index with:(int32_t) value {
  [result.mutableQuestIdsList replaceObjectAtIndex:index withObject:[NSNumber numberWithInt:value]];
  return self;
}
- (BeginDungeonRequestProto_Builder*) addQuestIds:(int32_t) value {
  if (result.mutableQuestIdsList == nil) {
    result.mutableQuestIdsList = [NSMutableArray array];
  }
  [result.mutableQuestIdsList addObject:[NSNumber numberWithInt:value]];
  return self;
}
- (BeginDungeonRequestProto_Builder*) addAllQuestIds:(NSArray*) values {
  if (result.mutableQuestIdsList == nil) {
    result.mutableQuestIdsList = [NSMutableArray array];
  }
  [result.mutableQuestIdsList addObjectsFromArray:values];
  return self;
}
- (BeginDungeonRequestProto_Builder*) clearQuestIdsList {
  result.mutableQuestIdsList = nil;
  return self;
}
- (BOOL) hasElem {
  return result.hasElem;
}
- (Element) elem {
  return result.elem;
}
- (BeginDungeonRequestProto_Builder*) setElem:(Element) value {
  result.hasElem = YES;
  result.elem = value;
  return self;
}
- (BeginDungeonRequestProto_Builder*) clearElem {
  result.hasElem = NO;
  result.elem = ElementNoElement;
  return self;
}
- (BOOL) hasForceEnemyElem {
  return result.hasForceEnemyElem;
}
- (BOOL) forceEnemyElem {
  return result.forceEnemyElem;
}
- (BeginDungeonRequestProto_Builder*) setForceEnemyElem:(BOOL) value {
  result.hasForceEnemyElem = YES;
  result.forceEnemyElem = value;
  return self;
}
- (BeginDungeonRequestProto_Builder*) clearForceEnemyElem {
  result.hasForceEnemyElem = NO;
  result.forceEnemyElem = NO;
  return self;
}
@end

@interface BeginDungeonResponseProto ()
@property (retain) MinimumUserProto* sender;
@property (retain) NSMutableArray* mutableTspList;
@property int64_t userTaskId;
@property int32_t taskId;
@property BeginDungeonResponseProto_BeginDungeonStatus status;
@end

@implementation BeginDungeonResponseProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value {
  hasSender_ = !!value;
}
@synthesize sender;
@synthesize mutableTspList;
- (BOOL) hasUserTaskId {
  return !!hasUserTaskId_;
}
- (void) setHasUserTaskId:(BOOL) value {
  hasUserTaskId_ = !!value;
}
@synthesize userTaskId;
- (BOOL) hasTaskId {
  return !!hasTaskId_;
}
- (void) setHasTaskId:(BOOL) value {
  hasTaskId_ = !!value;
}
@synthesize taskId;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value {
  hasStatus_ = !!value;
}
@synthesize status;
- (void) dealloc {
  self.sender = nil;
  self.mutableTspList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.userTaskId = 0L;
    self.taskId = 0;
    self.status = BeginDungeonResponseProto_BeginDungeonStatusSuccess;
  }
  return self;
}
static BeginDungeonResponseProto* defaultBeginDungeonResponseProtoInstance = nil;
+ (void) initialize {
  if (self == [BeginDungeonResponseProto class]) {
    defaultBeginDungeonResponseProtoInstance = [[BeginDungeonResponseProto alloc] init];
  }
}
+ (BeginDungeonResponseProto*) defaultInstance {
  return defaultBeginDungeonResponseProtoInstance;
}
- (BeginDungeonResponseProto*) defaultInstance {
  return defaultBeginDungeonResponseProtoInstance;
}
- (NSArray*) tspList {
  return mutableTspList;
}
- (TaskStageProto*) tspAtIndex:(int32_t) index {
  id value = [mutableTspList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  for (TaskStageProto* element in self.tspList) {
    [output writeMessage:2 value:element];
  }
  if (self.hasUserTaskId) {
    [output writeInt64:3 value:self.userTaskId];
  }
  if (self.hasTaskId) {
    [output writeInt32:4 value:self.taskId];
  }
  if (self.hasStatus) {
    [output writeEnum:5 value:self.status];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSender) {
    size += computeMessageSize(1, self.sender);
  }
  for (TaskStageProto* element in self.tspList) {
    size += computeMessageSize(2, element);
  }
  if (self.hasUserTaskId) {
    size += computeInt64Size(3, self.userTaskId);
  }
  if (self.hasTaskId) {
    size += computeInt32Size(4, self.taskId);
  }
  if (self.hasStatus) {
    size += computeEnumSize(5, self.status);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (BeginDungeonResponseProto*) parseFromData:(NSData*) data {
  return (BeginDungeonResponseProto*)[[[BeginDungeonResponseProto builder] mergeFromData:data] build];
}
+ (BeginDungeonResponseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BeginDungeonResponseProto*)[[[BeginDungeonResponseProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (BeginDungeonResponseProto*) parseFromInputStream:(NSInputStream*) input {
  return (BeginDungeonResponseProto*)[[[BeginDungeonResponseProto builder] mergeFromInputStream:input] build];
}
+ (BeginDungeonResponseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BeginDungeonResponseProto*)[[[BeginDungeonResponseProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BeginDungeonResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (BeginDungeonResponseProto*)[[[BeginDungeonResponseProto builder] mergeFromCodedInputStream:input] build];
}
+ (BeginDungeonResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BeginDungeonResponseProto*)[[[BeginDungeonResponseProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BeginDungeonResponseProto_Builder*) builder {
  return [[[BeginDungeonResponseProto_Builder alloc] init] autorelease];
}
+ (BeginDungeonResponseProto_Builder*) builderWithPrototype:(BeginDungeonResponseProto*) prototype {
  return [[BeginDungeonResponseProto builder] mergeFrom:prototype];
}
- (BeginDungeonResponseProto_Builder*) builder {
  return [BeginDungeonResponseProto builder];
}
@end

BOOL BeginDungeonResponseProto_BeginDungeonStatusIsValidValue(BeginDungeonResponseProto_BeginDungeonStatus value) {
  switch (value) {
    case BeginDungeonResponseProto_BeginDungeonStatusSuccess:
    case BeginDungeonResponseProto_BeginDungeonStatusFailOther:
      return YES;
    default:
      return NO;
  }
}
@interface BeginDungeonResponseProto_Builder()
@property (retain) BeginDungeonResponseProto* result;
@end

@implementation BeginDungeonResponseProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[BeginDungeonResponseProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (BeginDungeonResponseProto_Builder*) clear {
  self.result = [[[BeginDungeonResponseProto alloc] init] autorelease];
  return self;
}
- (BeginDungeonResponseProto_Builder*) clone {
  return [BeginDungeonResponseProto builderWithPrototype:result];
}
- (BeginDungeonResponseProto*) defaultInstance {
  return [BeginDungeonResponseProto defaultInstance];
}
- (BeginDungeonResponseProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (BeginDungeonResponseProto*) buildPartial {
  BeginDungeonResponseProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (BeginDungeonResponseProto_Builder*) mergeFrom:(BeginDungeonResponseProto*) other {
  if (other == [BeginDungeonResponseProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.mutableTspList.count > 0) {
    if (result.mutableTspList == nil) {
      result.mutableTspList = [NSMutableArray array];
    }
    [result.mutableTspList addObjectsFromArray:other.mutableTspList];
  }
  if (other.hasUserTaskId) {
    [self setUserTaskId:other.userTaskId];
  }
  if (other.hasTaskId) {
    [self setTaskId:other.taskId];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (BeginDungeonResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (BeginDungeonResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        TaskStageProto_Builder* subBuilder = [TaskStageProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addTsp:[subBuilder buildPartial]];
        break;
      }
      case 24: {
        [self setUserTaskId:[input readInt64]];
        break;
      }
      case 32: {
        [self setTaskId:[input readInt32]];
        break;
      }
      case 40: {
        int32_t value = [input readEnum];
        if (BeginDungeonResponseProto_BeginDungeonStatusIsValidValue(value)) {
          [self setStatus:value];
        } else {
          [unknownFields mergeVarintField:5 value:value];
        }
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (BeginDungeonResponseProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (BeginDungeonResponseProto_Builder*) setSenderBuilder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (BeginDungeonResponseProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (BeginDungeonResponseProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (NSArray*) tspList {
  if (result.mutableTspList == nil) { return [NSArray array]; }
  return result.mutableTspList;
}
- (TaskStageProto*) tspAtIndex:(int32_t) index {
  return [result tspAtIndex:index];
}
- (BeginDungeonResponseProto_Builder*) replaceTspAtIndex:(int32_t) index with:(TaskStageProto*) value {
  [result.mutableTspList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (BeginDungeonResponseProto_Builder*) addAllTsp:(NSArray*) values {
  if (result.mutableTspList == nil) {
    result.mutableTspList = [NSMutableArray array];
  }
  [result.mutableTspList addObjectsFromArray:values];
  return self;
}
- (BeginDungeonResponseProto_Builder*) clearTspList {
  result.mutableTspList = nil;
  return self;
}
- (BeginDungeonResponseProto_Builder*) addTsp:(TaskStageProto*) value {
  if (result.mutableTspList == nil) {
    result.mutableTspList = [NSMutableArray array];
  }
  [result.mutableTspList addObject:value];
  return self;
}
- (BOOL) hasUserTaskId {
  return result.hasUserTaskId;
}
- (int64_t) userTaskId {
  return result.userTaskId;
}
- (BeginDungeonResponseProto_Builder*) setUserTaskId:(int64_t) value {
  result.hasUserTaskId = YES;
  result.userTaskId = value;
  return self;
}
- (BeginDungeonResponseProto_Builder*) clearUserTaskId {
  result.hasUserTaskId = NO;
  result.userTaskId = 0L;
  return self;
}
- (BOOL) hasTaskId {
  return result.hasTaskId;
}
- (int32_t) taskId {
  return result.taskId;
}
- (BeginDungeonResponseProto_Builder*) setTaskId:(int32_t) value {
  result.hasTaskId = YES;
  result.taskId = value;
  return self;
}
- (BeginDungeonResponseProto_Builder*) clearTaskId {
  result.hasTaskId = NO;
  result.taskId = 0;
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (BeginDungeonResponseProto_BeginDungeonStatus) status {
  return result.status;
}
- (BeginDungeonResponseProto_Builder*) setStatus:(BeginDungeonResponseProto_BeginDungeonStatus) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (BeginDungeonResponseProto_Builder*) clearStatus {
  result.hasStatus = NO;
  result.status = BeginDungeonResponseProto_BeginDungeonStatusSuccess;
  return self;
}
@end

@interface EndDungeonRequestProto ()
@property (retain) MinimumUserProtoWithMaxResources* sender;
@property int64_t userTaskId;
@property BOOL userWon;
@property int64_t clientTime;
@property BOOL firstTimeUserWonTask;
@property BOOL userBeatAllCityTasks;
@end

@implementation EndDungeonRequestProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value {
  hasSender_ = !!value;
}
@synthesize sender;
- (BOOL) hasUserTaskId {
  return !!hasUserTaskId_;
}
- (void) setHasUserTaskId:(BOOL) value {
  hasUserTaskId_ = !!value;
}
@synthesize userTaskId;
- (BOOL) hasUserWon {
  return !!hasUserWon_;
}
- (void) setHasUserWon:(BOOL) value {
  hasUserWon_ = !!value;
}
- (BOOL) userWon {
  return !!userWon_;
}
- (void) setUserWon:(BOOL) value {
  userWon_ = !!value;
}
- (BOOL) hasClientTime {
  return !!hasClientTime_;
}
- (void) setHasClientTime:(BOOL) value {
  hasClientTime_ = !!value;
}
@synthesize clientTime;
- (BOOL) hasFirstTimeUserWonTask {
  return !!hasFirstTimeUserWonTask_;
}
- (void) setHasFirstTimeUserWonTask:(BOOL) value {
  hasFirstTimeUserWonTask_ = !!value;
}
- (BOOL) firstTimeUserWonTask {
  return !!firstTimeUserWonTask_;
}
- (void) setFirstTimeUserWonTask:(BOOL) value {
  firstTimeUserWonTask_ = !!value;
}
- (BOOL) hasUserBeatAllCityTasks {
  return !!hasUserBeatAllCityTasks_;
}
- (void) setHasUserBeatAllCityTasks:(BOOL) value {
  hasUserBeatAllCityTasks_ = !!value;
}
- (BOOL) userBeatAllCityTasks {
  return !!userBeatAllCityTasks_;
}
- (void) setUserBeatAllCityTasks:(BOOL) value {
  userBeatAllCityTasks_ = !!value;
}
- (void) dealloc {
  self.sender = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProtoWithMaxResources defaultInstance];
    self.userTaskId = 0L;
    self.userWon = NO;
    self.clientTime = 0L;
    self.firstTimeUserWonTask = NO;
    self.userBeatAllCityTasks = NO;
  }
  return self;
}
static EndDungeonRequestProto* defaultEndDungeonRequestProtoInstance = nil;
+ (void) initialize {
  if (self == [EndDungeonRequestProto class]) {
    defaultEndDungeonRequestProtoInstance = [[EndDungeonRequestProto alloc] init];
  }
}
+ (EndDungeonRequestProto*) defaultInstance {
  return defaultEndDungeonRequestProtoInstance;
}
- (EndDungeonRequestProto*) defaultInstance {
  return defaultEndDungeonRequestProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasUserTaskId) {
    [output writeInt64:2 value:self.userTaskId];
  }
  if (self.hasUserWon) {
    [output writeBool:3 value:self.userWon];
  }
  if (self.hasClientTime) {
    [output writeInt64:4 value:self.clientTime];
  }
  if (self.hasFirstTimeUserWonTask) {
    [output writeBool:5 value:self.firstTimeUserWonTask];
  }
  if (self.hasUserBeatAllCityTasks) {
    [output writeBool:6 value:self.userBeatAllCityTasks];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSender) {
    size += computeMessageSize(1, self.sender);
  }
  if (self.hasUserTaskId) {
    size += computeInt64Size(2, self.userTaskId);
  }
  if (self.hasUserWon) {
    size += computeBoolSize(3, self.userWon);
  }
  if (self.hasClientTime) {
    size += computeInt64Size(4, self.clientTime);
  }
  if (self.hasFirstTimeUserWonTask) {
    size += computeBoolSize(5, self.firstTimeUserWonTask);
  }
  if (self.hasUserBeatAllCityTasks) {
    size += computeBoolSize(6, self.userBeatAllCityTasks);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (EndDungeonRequestProto*) parseFromData:(NSData*) data {
  return (EndDungeonRequestProto*)[[[EndDungeonRequestProto builder] mergeFromData:data] build];
}
+ (EndDungeonRequestProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (EndDungeonRequestProto*)[[[EndDungeonRequestProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (EndDungeonRequestProto*) parseFromInputStream:(NSInputStream*) input {
  return (EndDungeonRequestProto*)[[[EndDungeonRequestProto builder] mergeFromInputStream:input] build];
}
+ (EndDungeonRequestProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (EndDungeonRequestProto*)[[[EndDungeonRequestProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (EndDungeonRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (EndDungeonRequestProto*)[[[EndDungeonRequestProto builder] mergeFromCodedInputStream:input] build];
}
+ (EndDungeonRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (EndDungeonRequestProto*)[[[EndDungeonRequestProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (EndDungeonRequestProto_Builder*) builder {
  return [[[EndDungeonRequestProto_Builder alloc] init] autorelease];
}
+ (EndDungeonRequestProto_Builder*) builderWithPrototype:(EndDungeonRequestProto*) prototype {
  return [[EndDungeonRequestProto builder] mergeFrom:prototype];
}
- (EndDungeonRequestProto_Builder*) builder {
  return [EndDungeonRequestProto builder];
}
@end

@interface EndDungeonRequestProto_Builder()
@property (retain) EndDungeonRequestProto* result;
@end

@implementation EndDungeonRequestProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[EndDungeonRequestProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (EndDungeonRequestProto_Builder*) clear {
  self.result = [[[EndDungeonRequestProto alloc] init] autorelease];
  return self;
}
- (EndDungeonRequestProto_Builder*) clone {
  return [EndDungeonRequestProto builderWithPrototype:result];
}
- (EndDungeonRequestProto*) defaultInstance {
  return [EndDungeonRequestProto defaultInstance];
}
- (EndDungeonRequestProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (EndDungeonRequestProto*) buildPartial {
  EndDungeonRequestProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (EndDungeonRequestProto_Builder*) mergeFrom:(EndDungeonRequestProto*) other {
  if (other == [EndDungeonRequestProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasUserTaskId) {
    [self setUserTaskId:other.userTaskId];
  }
  if (other.hasUserWon) {
    [self setUserWon:other.userWon];
  }
  if (other.hasClientTime) {
    [self setClientTime:other.clientTime];
  }
  if (other.hasFirstTimeUserWonTask) {
    [self setFirstTimeUserWonTask:other.firstTimeUserWonTask];
  }
  if (other.hasUserBeatAllCityTasks) {
    [self setUserBeatAllCityTasks:other.userBeatAllCityTasks];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (EndDungeonRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (EndDungeonRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProtoWithMaxResources_Builder* subBuilder = [MinimumUserProtoWithMaxResources builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setUserTaskId:[input readInt64]];
        break;
      }
      case 24: {
        [self setUserWon:[input readBool]];
        break;
      }
      case 32: {
        [self setClientTime:[input readInt64]];
        break;
      }
      case 40: {
        [self setFirstTimeUserWonTask:[input readBool]];
        break;
      }
      case 48: {
        [self setUserBeatAllCityTasks:[input readBool]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProtoWithMaxResources*) sender {
  return result.sender;
}
- (EndDungeonRequestProto_Builder*) setSender:(MinimumUserProtoWithMaxResources*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (EndDungeonRequestProto_Builder*) setSenderBuilder:(MinimumUserProtoWithMaxResources_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (EndDungeonRequestProto_Builder*) mergeSender:(MinimumUserProtoWithMaxResources*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProtoWithMaxResources defaultInstance]) {
    result.sender =
      [[[MinimumUserProtoWithMaxResources builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (EndDungeonRequestProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProtoWithMaxResources defaultInstance];
  return self;
}
- (BOOL) hasUserTaskId {
  return result.hasUserTaskId;
}
- (int64_t) userTaskId {
  return result.userTaskId;
}
- (EndDungeonRequestProto_Builder*) setUserTaskId:(int64_t) value {
  result.hasUserTaskId = YES;
  result.userTaskId = value;
  return self;
}
- (EndDungeonRequestProto_Builder*) clearUserTaskId {
  result.hasUserTaskId = NO;
  result.userTaskId = 0L;
  return self;
}
- (BOOL) hasUserWon {
  return result.hasUserWon;
}
- (BOOL) userWon {
  return result.userWon;
}
- (EndDungeonRequestProto_Builder*) setUserWon:(BOOL) value {
  result.hasUserWon = YES;
  result.userWon = value;
  return self;
}
- (EndDungeonRequestProto_Builder*) clearUserWon {
  result.hasUserWon = NO;
  result.userWon = NO;
  return self;
}
- (BOOL) hasClientTime {
  return result.hasClientTime;
}
- (int64_t) clientTime {
  return result.clientTime;
}
- (EndDungeonRequestProto_Builder*) setClientTime:(int64_t) value {
  result.hasClientTime = YES;
  result.clientTime = value;
  return self;
}
- (EndDungeonRequestProto_Builder*) clearClientTime {
  result.hasClientTime = NO;
  result.clientTime = 0L;
  return self;
}
- (BOOL) hasFirstTimeUserWonTask {
  return result.hasFirstTimeUserWonTask;
}
- (BOOL) firstTimeUserWonTask {
  return result.firstTimeUserWonTask;
}
- (EndDungeonRequestProto_Builder*) setFirstTimeUserWonTask:(BOOL) value {
  result.hasFirstTimeUserWonTask = YES;
  result.firstTimeUserWonTask = value;
  return self;
}
- (EndDungeonRequestProto_Builder*) clearFirstTimeUserWonTask {
  result.hasFirstTimeUserWonTask = NO;
  result.firstTimeUserWonTask = NO;
  return self;
}
- (BOOL) hasUserBeatAllCityTasks {
  return result.hasUserBeatAllCityTasks;
}
- (BOOL) userBeatAllCityTasks {
  return result.userBeatAllCityTasks;
}
- (EndDungeonRequestProto_Builder*) setUserBeatAllCityTasks:(BOOL) value {
  result.hasUserBeatAllCityTasks = YES;
  result.userBeatAllCityTasks = value;
  return self;
}
- (EndDungeonRequestProto_Builder*) clearUserBeatAllCityTasks {
  result.hasUserBeatAllCityTasks = NO;
  result.userBeatAllCityTasks = NO;
  return self;
}
@end

@interface EndDungeonResponseProto ()
@property (retain) MinimumUserProtoWithMaxResources* sender;
@property EndDungeonResponseProto_EndDungeonStatus status;
@property (retain) NSMutableArray* mutableUpdatedOrNewList;
@property int32_t taskId;
@property BOOL userWon;
@end

@implementation EndDungeonResponseProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value {
  hasSender_ = !!value;
}
@synthesize sender;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value {
  hasStatus_ = !!value;
}
@synthesize status;
@synthesize mutableUpdatedOrNewList;
- (BOOL) hasTaskId {
  return !!hasTaskId_;
}
- (void) setHasTaskId:(BOOL) value {
  hasTaskId_ = !!value;
}
@synthesize taskId;
- (BOOL) hasUserWon {
  return !!hasUserWon_;
}
- (void) setHasUserWon:(BOOL) value {
  hasUserWon_ = !!value;
}
- (BOOL) userWon {
  return !!userWon_;
}
- (void) setUserWon:(BOOL) value {
  userWon_ = !!value;
}
- (void) dealloc {
  self.sender = nil;
  self.mutableUpdatedOrNewList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProtoWithMaxResources defaultInstance];
    self.status = EndDungeonResponseProto_EndDungeonStatusSuccess;
    self.taskId = 0;
    self.userWon = NO;
  }
  return self;
}
static EndDungeonResponseProto* defaultEndDungeonResponseProtoInstance = nil;
+ (void) initialize {
  if (self == [EndDungeonResponseProto class]) {
    defaultEndDungeonResponseProtoInstance = [[EndDungeonResponseProto alloc] init];
  }
}
+ (EndDungeonResponseProto*) defaultInstance {
  return defaultEndDungeonResponseProtoInstance;
}
- (EndDungeonResponseProto*) defaultInstance {
  return defaultEndDungeonResponseProtoInstance;
}
- (NSArray*) updatedOrNewList {
  return mutableUpdatedOrNewList;
}
- (FullUserMonsterProto*) updatedOrNewAtIndex:(int32_t) index {
  id value = [mutableUpdatedOrNewList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasStatus) {
    [output writeEnum:2 value:self.status];
  }
  for (FullUserMonsterProto* element in self.updatedOrNewList) {
    [output writeMessage:3 value:element];
  }
  if (self.hasTaskId) {
    [output writeInt32:4 value:self.taskId];
  }
  if (self.hasUserWon) {
    [output writeBool:5 value:self.userWon];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSender) {
    size += computeMessageSize(1, self.sender);
  }
  if (self.hasStatus) {
    size += computeEnumSize(2, self.status);
  }
  for (FullUserMonsterProto* element in self.updatedOrNewList) {
    size += computeMessageSize(3, element);
  }
  if (self.hasTaskId) {
    size += computeInt32Size(4, self.taskId);
  }
  if (self.hasUserWon) {
    size += computeBoolSize(5, self.userWon);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (EndDungeonResponseProto*) parseFromData:(NSData*) data {
  return (EndDungeonResponseProto*)[[[EndDungeonResponseProto builder] mergeFromData:data] build];
}
+ (EndDungeonResponseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (EndDungeonResponseProto*)[[[EndDungeonResponseProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (EndDungeonResponseProto*) parseFromInputStream:(NSInputStream*) input {
  return (EndDungeonResponseProto*)[[[EndDungeonResponseProto builder] mergeFromInputStream:input] build];
}
+ (EndDungeonResponseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (EndDungeonResponseProto*)[[[EndDungeonResponseProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (EndDungeonResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (EndDungeonResponseProto*)[[[EndDungeonResponseProto builder] mergeFromCodedInputStream:input] build];
}
+ (EndDungeonResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (EndDungeonResponseProto*)[[[EndDungeonResponseProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (EndDungeonResponseProto_Builder*) builder {
  return [[[EndDungeonResponseProto_Builder alloc] init] autorelease];
}
+ (EndDungeonResponseProto_Builder*) builderWithPrototype:(EndDungeonResponseProto*) prototype {
  return [[EndDungeonResponseProto builder] mergeFrom:prototype];
}
- (EndDungeonResponseProto_Builder*) builder {
  return [EndDungeonResponseProto builder];
}
@end

BOOL EndDungeonResponseProto_EndDungeonStatusIsValidValue(EndDungeonResponseProto_EndDungeonStatus value) {
  switch (value) {
    case EndDungeonResponseProto_EndDungeonStatusSuccess:
    case EndDungeonResponseProto_EndDungeonStatusFailOther:
      return YES;
    default:
      return NO;
  }
}
@interface EndDungeonResponseProto_Builder()
@property (retain) EndDungeonResponseProto* result;
@end

@implementation EndDungeonResponseProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[EndDungeonResponseProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (EndDungeonResponseProto_Builder*) clear {
  self.result = [[[EndDungeonResponseProto alloc] init] autorelease];
  return self;
}
- (EndDungeonResponseProto_Builder*) clone {
  return [EndDungeonResponseProto builderWithPrototype:result];
}
- (EndDungeonResponseProto*) defaultInstance {
  return [EndDungeonResponseProto defaultInstance];
}
- (EndDungeonResponseProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (EndDungeonResponseProto*) buildPartial {
  EndDungeonResponseProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (EndDungeonResponseProto_Builder*) mergeFrom:(EndDungeonResponseProto*) other {
  if (other == [EndDungeonResponseProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  if (other.mutableUpdatedOrNewList.count > 0) {
    if (result.mutableUpdatedOrNewList == nil) {
      result.mutableUpdatedOrNewList = [NSMutableArray array];
    }
    [result.mutableUpdatedOrNewList addObjectsFromArray:other.mutableUpdatedOrNewList];
  }
  if (other.hasTaskId) {
    [self setTaskId:other.taskId];
  }
  if (other.hasUserWon) {
    [self setUserWon:other.userWon];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (EndDungeonResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (EndDungeonResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProtoWithMaxResources_Builder* subBuilder = [MinimumUserProtoWithMaxResources builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        int32_t value = [input readEnum];
        if (EndDungeonResponseProto_EndDungeonStatusIsValidValue(value)) {
          [self setStatus:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
      case 26: {
        FullUserMonsterProto_Builder* subBuilder = [FullUserMonsterProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addUpdatedOrNew:[subBuilder buildPartial]];
        break;
      }
      case 32: {
        [self setTaskId:[input readInt32]];
        break;
      }
      case 40: {
        [self setUserWon:[input readBool]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProtoWithMaxResources*) sender {
  return result.sender;
}
- (EndDungeonResponseProto_Builder*) setSender:(MinimumUserProtoWithMaxResources*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (EndDungeonResponseProto_Builder*) setSenderBuilder:(MinimumUserProtoWithMaxResources_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (EndDungeonResponseProto_Builder*) mergeSender:(MinimumUserProtoWithMaxResources*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProtoWithMaxResources defaultInstance]) {
    result.sender =
      [[[MinimumUserProtoWithMaxResources builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (EndDungeonResponseProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProtoWithMaxResources defaultInstance];
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (EndDungeonResponseProto_EndDungeonStatus) status {
  return result.status;
}
- (EndDungeonResponseProto_Builder*) setStatus:(EndDungeonResponseProto_EndDungeonStatus) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (EndDungeonResponseProto_Builder*) clearStatus {
  result.hasStatus = NO;
  result.status = EndDungeonResponseProto_EndDungeonStatusSuccess;
  return self;
}
- (NSArray*) updatedOrNewList {
  if (result.mutableUpdatedOrNewList == nil) { return [NSArray array]; }
  return result.mutableUpdatedOrNewList;
}
- (FullUserMonsterProto*) updatedOrNewAtIndex:(int32_t) index {
  return [result updatedOrNewAtIndex:index];
}
- (EndDungeonResponseProto_Builder*) replaceUpdatedOrNewAtIndex:(int32_t) index with:(FullUserMonsterProto*) value {
  [result.mutableUpdatedOrNewList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (EndDungeonResponseProto_Builder*) addAllUpdatedOrNew:(NSArray*) values {
  if (result.mutableUpdatedOrNewList == nil) {
    result.mutableUpdatedOrNewList = [NSMutableArray array];
  }
  [result.mutableUpdatedOrNewList addObjectsFromArray:values];
  return self;
}
- (EndDungeonResponseProto_Builder*) clearUpdatedOrNewList {
  result.mutableUpdatedOrNewList = nil;
  return self;
}
- (EndDungeonResponseProto_Builder*) addUpdatedOrNew:(FullUserMonsterProto*) value {
  if (result.mutableUpdatedOrNewList == nil) {
    result.mutableUpdatedOrNewList = [NSMutableArray array];
  }
  [result.mutableUpdatedOrNewList addObject:value];
  return self;
}
- (BOOL) hasTaskId {
  return result.hasTaskId;
}
- (int32_t) taskId {
  return result.taskId;
}
- (EndDungeonResponseProto_Builder*) setTaskId:(int32_t) value {
  result.hasTaskId = YES;
  result.taskId = value;
  return self;
}
- (EndDungeonResponseProto_Builder*) clearTaskId {
  result.hasTaskId = NO;
  result.taskId = 0;
  return self;
}
- (BOOL) hasUserWon {
  return result.hasUserWon;
}
- (BOOL) userWon {
  return result.userWon;
}
- (EndDungeonResponseProto_Builder*) setUserWon:(BOOL) value {
  result.hasUserWon = YES;
  result.userWon = value;
  return self;
}
- (EndDungeonResponseProto_Builder*) clearUserWon {
  result.hasUserWon = NO;
  result.userWon = NO;
  return self;
}
@end

@interface ReviveInDungeonRequestProto ()
@property (retain) MinimumUserProto* sender;
@property int64_t userTaskId;
@property int64_t clientTime;
@property (retain) NSMutableArray* mutableReviveMeList;
@property int32_t gemsSpent;
@end

@implementation ReviveInDungeonRequestProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value {
  hasSender_ = !!value;
}
@synthesize sender;
- (BOOL) hasUserTaskId {
  return !!hasUserTaskId_;
}
- (void) setHasUserTaskId:(BOOL) value {
  hasUserTaskId_ = !!value;
}
@synthesize userTaskId;
- (BOOL) hasClientTime {
  return !!hasClientTime_;
}
- (void) setHasClientTime:(BOOL) value {
  hasClientTime_ = !!value;
}
@synthesize clientTime;
@synthesize mutableReviveMeList;
- (BOOL) hasGemsSpent {
  return !!hasGemsSpent_;
}
- (void) setHasGemsSpent:(BOOL) value {
  hasGemsSpent_ = !!value;
}
@synthesize gemsSpent;
- (void) dealloc {
  self.sender = nil;
  self.mutableReviveMeList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.userTaskId = 0L;
    self.clientTime = 0L;
    self.gemsSpent = 0;
  }
  return self;
}
static ReviveInDungeonRequestProto* defaultReviveInDungeonRequestProtoInstance = nil;
+ (void) initialize {
  if (self == [ReviveInDungeonRequestProto class]) {
    defaultReviveInDungeonRequestProtoInstance = [[ReviveInDungeonRequestProto alloc] init];
  }
}
+ (ReviveInDungeonRequestProto*) defaultInstance {
  return defaultReviveInDungeonRequestProtoInstance;
}
- (ReviveInDungeonRequestProto*) defaultInstance {
  return defaultReviveInDungeonRequestProtoInstance;
}
- (NSArray*) reviveMeList {
  return mutableReviveMeList;
}
- (UserMonsterCurrentHealthProto*) reviveMeAtIndex:(int32_t) index {
  id value = [mutableReviveMeList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasUserTaskId) {
    [output writeInt64:2 value:self.userTaskId];
  }
  if (self.hasClientTime) {
    [output writeInt64:3 value:self.clientTime];
  }
  for (UserMonsterCurrentHealthProto* element in self.reviveMeList) {
    [output writeMessage:4 value:element];
  }
  if (self.hasGemsSpent) {
    [output writeInt32:5 value:self.gemsSpent];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSender) {
    size += computeMessageSize(1, self.sender);
  }
  if (self.hasUserTaskId) {
    size += computeInt64Size(2, self.userTaskId);
  }
  if (self.hasClientTime) {
    size += computeInt64Size(3, self.clientTime);
  }
  for (UserMonsterCurrentHealthProto* element in self.reviveMeList) {
    size += computeMessageSize(4, element);
  }
  if (self.hasGemsSpent) {
    size += computeInt32Size(5, self.gemsSpent);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (ReviveInDungeonRequestProto*) parseFromData:(NSData*) data {
  return (ReviveInDungeonRequestProto*)[[[ReviveInDungeonRequestProto builder] mergeFromData:data] build];
}
+ (ReviveInDungeonRequestProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ReviveInDungeonRequestProto*)[[[ReviveInDungeonRequestProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ReviveInDungeonRequestProto*) parseFromInputStream:(NSInputStream*) input {
  return (ReviveInDungeonRequestProto*)[[[ReviveInDungeonRequestProto builder] mergeFromInputStream:input] build];
}
+ (ReviveInDungeonRequestProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ReviveInDungeonRequestProto*)[[[ReviveInDungeonRequestProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ReviveInDungeonRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ReviveInDungeonRequestProto*)[[[ReviveInDungeonRequestProto builder] mergeFromCodedInputStream:input] build];
}
+ (ReviveInDungeonRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ReviveInDungeonRequestProto*)[[[ReviveInDungeonRequestProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ReviveInDungeonRequestProto_Builder*) builder {
  return [[[ReviveInDungeonRequestProto_Builder alloc] init] autorelease];
}
+ (ReviveInDungeonRequestProto_Builder*) builderWithPrototype:(ReviveInDungeonRequestProto*) prototype {
  return [[ReviveInDungeonRequestProto builder] mergeFrom:prototype];
}
- (ReviveInDungeonRequestProto_Builder*) builder {
  return [ReviveInDungeonRequestProto builder];
}
@end

@interface ReviveInDungeonRequestProto_Builder()
@property (retain) ReviveInDungeonRequestProto* result;
@end

@implementation ReviveInDungeonRequestProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[ReviveInDungeonRequestProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (ReviveInDungeonRequestProto_Builder*) clear {
  self.result = [[[ReviveInDungeonRequestProto alloc] init] autorelease];
  return self;
}
- (ReviveInDungeonRequestProto_Builder*) clone {
  return [ReviveInDungeonRequestProto builderWithPrototype:result];
}
- (ReviveInDungeonRequestProto*) defaultInstance {
  return [ReviveInDungeonRequestProto defaultInstance];
}
- (ReviveInDungeonRequestProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ReviveInDungeonRequestProto*) buildPartial {
  ReviveInDungeonRequestProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (ReviveInDungeonRequestProto_Builder*) mergeFrom:(ReviveInDungeonRequestProto*) other {
  if (other == [ReviveInDungeonRequestProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasUserTaskId) {
    [self setUserTaskId:other.userTaskId];
  }
  if (other.hasClientTime) {
    [self setClientTime:other.clientTime];
  }
  if (other.mutableReviveMeList.count > 0) {
    if (result.mutableReviveMeList == nil) {
      result.mutableReviveMeList = [NSMutableArray array];
    }
    [result.mutableReviveMeList addObjectsFromArray:other.mutableReviveMeList];
  }
  if (other.hasGemsSpent) {
    [self setGemsSpent:other.gemsSpent];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ReviveInDungeonRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ReviveInDungeonRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setUserTaskId:[input readInt64]];
        break;
      }
      case 24: {
        [self setClientTime:[input readInt64]];
        break;
      }
      case 34: {
        UserMonsterCurrentHealthProto_Builder* subBuilder = [UserMonsterCurrentHealthProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addReviveMe:[subBuilder buildPartial]];
        break;
      }
      case 40: {
        [self setGemsSpent:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (ReviveInDungeonRequestProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (ReviveInDungeonRequestProto_Builder*) setSenderBuilder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (ReviveInDungeonRequestProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (ReviveInDungeonRequestProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasUserTaskId {
  return result.hasUserTaskId;
}
- (int64_t) userTaskId {
  return result.userTaskId;
}
- (ReviveInDungeonRequestProto_Builder*) setUserTaskId:(int64_t) value {
  result.hasUserTaskId = YES;
  result.userTaskId = value;
  return self;
}
- (ReviveInDungeonRequestProto_Builder*) clearUserTaskId {
  result.hasUserTaskId = NO;
  result.userTaskId = 0L;
  return self;
}
- (BOOL) hasClientTime {
  return result.hasClientTime;
}
- (int64_t) clientTime {
  return result.clientTime;
}
- (ReviveInDungeonRequestProto_Builder*) setClientTime:(int64_t) value {
  result.hasClientTime = YES;
  result.clientTime = value;
  return self;
}
- (ReviveInDungeonRequestProto_Builder*) clearClientTime {
  result.hasClientTime = NO;
  result.clientTime = 0L;
  return self;
}
- (NSArray*) reviveMeList {
  if (result.mutableReviveMeList == nil) { return [NSArray array]; }
  return result.mutableReviveMeList;
}
- (UserMonsterCurrentHealthProto*) reviveMeAtIndex:(int32_t) index {
  return [result reviveMeAtIndex:index];
}
- (ReviveInDungeonRequestProto_Builder*) replaceReviveMeAtIndex:(int32_t) index with:(UserMonsterCurrentHealthProto*) value {
  [result.mutableReviveMeList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (ReviveInDungeonRequestProto_Builder*) addAllReviveMe:(NSArray*) values {
  if (result.mutableReviveMeList == nil) {
    result.mutableReviveMeList = [NSMutableArray array];
  }
  [result.mutableReviveMeList addObjectsFromArray:values];
  return self;
}
- (ReviveInDungeonRequestProto_Builder*) clearReviveMeList {
  result.mutableReviveMeList = nil;
  return self;
}
- (ReviveInDungeonRequestProto_Builder*) addReviveMe:(UserMonsterCurrentHealthProto*) value {
  if (result.mutableReviveMeList == nil) {
    result.mutableReviveMeList = [NSMutableArray array];
  }
  [result.mutableReviveMeList addObject:value];
  return self;
}
- (BOOL) hasGemsSpent {
  return result.hasGemsSpent;
}
- (int32_t) gemsSpent {
  return result.gemsSpent;
}
- (ReviveInDungeonRequestProto_Builder*) setGemsSpent:(int32_t) value {
  result.hasGemsSpent = YES;
  result.gemsSpent = value;
  return self;
}
- (ReviveInDungeonRequestProto_Builder*) clearGemsSpent {
  result.hasGemsSpent = NO;
  result.gemsSpent = 0;
  return self;
}
@end

@interface ReviveInDungeonResponseProto ()
@property (retain) MinimumUserProto* sender;
@property ReviveInDungeonResponseProto_ReviveInDungeonStatus status;
@end

@implementation ReviveInDungeonResponseProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value {
  hasSender_ = !!value;
}
@synthesize sender;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value {
  hasStatus_ = !!value;
}
@synthesize status;
- (void) dealloc {
  self.sender = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.status = ReviveInDungeonResponseProto_ReviveInDungeonStatusSuccess;
  }
  return self;
}
static ReviveInDungeonResponseProto* defaultReviveInDungeonResponseProtoInstance = nil;
+ (void) initialize {
  if (self == [ReviveInDungeonResponseProto class]) {
    defaultReviveInDungeonResponseProtoInstance = [[ReviveInDungeonResponseProto alloc] init];
  }
}
+ (ReviveInDungeonResponseProto*) defaultInstance {
  return defaultReviveInDungeonResponseProtoInstance;
}
- (ReviveInDungeonResponseProto*) defaultInstance {
  return defaultReviveInDungeonResponseProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasStatus) {
    [output writeEnum:2 value:self.status];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSender) {
    size += computeMessageSize(1, self.sender);
  }
  if (self.hasStatus) {
    size += computeEnumSize(2, self.status);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (ReviveInDungeonResponseProto*) parseFromData:(NSData*) data {
  return (ReviveInDungeonResponseProto*)[[[ReviveInDungeonResponseProto builder] mergeFromData:data] build];
}
+ (ReviveInDungeonResponseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ReviveInDungeonResponseProto*)[[[ReviveInDungeonResponseProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ReviveInDungeonResponseProto*) parseFromInputStream:(NSInputStream*) input {
  return (ReviveInDungeonResponseProto*)[[[ReviveInDungeonResponseProto builder] mergeFromInputStream:input] build];
}
+ (ReviveInDungeonResponseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ReviveInDungeonResponseProto*)[[[ReviveInDungeonResponseProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ReviveInDungeonResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ReviveInDungeonResponseProto*)[[[ReviveInDungeonResponseProto builder] mergeFromCodedInputStream:input] build];
}
+ (ReviveInDungeonResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ReviveInDungeonResponseProto*)[[[ReviveInDungeonResponseProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ReviveInDungeonResponseProto_Builder*) builder {
  return [[[ReviveInDungeonResponseProto_Builder alloc] init] autorelease];
}
+ (ReviveInDungeonResponseProto_Builder*) builderWithPrototype:(ReviveInDungeonResponseProto*) prototype {
  return [[ReviveInDungeonResponseProto builder] mergeFrom:prototype];
}
- (ReviveInDungeonResponseProto_Builder*) builder {
  return [ReviveInDungeonResponseProto builder];
}
@end

BOOL ReviveInDungeonResponseProto_ReviveInDungeonStatusIsValidValue(ReviveInDungeonResponseProto_ReviveInDungeonStatus value) {
  switch (value) {
    case ReviveInDungeonResponseProto_ReviveInDungeonStatusSuccess:
    case ReviveInDungeonResponseProto_ReviveInDungeonStatusFailInsufficientFunds:
    case ReviveInDungeonResponseProto_ReviveInDungeonStatusFailOther:
      return YES;
    default:
      return NO;
  }
}
@interface ReviveInDungeonResponseProto_Builder()
@property (retain) ReviveInDungeonResponseProto* result;
@end

@implementation ReviveInDungeonResponseProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[ReviveInDungeonResponseProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (ReviveInDungeonResponseProto_Builder*) clear {
  self.result = [[[ReviveInDungeonResponseProto alloc] init] autorelease];
  return self;
}
- (ReviveInDungeonResponseProto_Builder*) clone {
  return [ReviveInDungeonResponseProto builderWithPrototype:result];
}
- (ReviveInDungeonResponseProto*) defaultInstance {
  return [ReviveInDungeonResponseProto defaultInstance];
}
- (ReviveInDungeonResponseProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ReviveInDungeonResponseProto*) buildPartial {
  ReviveInDungeonResponseProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (ReviveInDungeonResponseProto_Builder*) mergeFrom:(ReviveInDungeonResponseProto*) other {
  if (other == [ReviveInDungeonResponseProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ReviveInDungeonResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ReviveInDungeonResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        int32_t value = [input readEnum];
        if (ReviveInDungeonResponseProto_ReviveInDungeonStatusIsValidValue(value)) {
          [self setStatus:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (ReviveInDungeonResponseProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (ReviveInDungeonResponseProto_Builder*) setSenderBuilder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (ReviveInDungeonResponseProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (ReviveInDungeonResponseProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (ReviveInDungeonResponseProto_ReviveInDungeonStatus) status {
  return result.status;
}
- (ReviveInDungeonResponseProto_Builder*) setStatus:(ReviveInDungeonResponseProto_ReviveInDungeonStatus) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (ReviveInDungeonResponseProto_Builder*) clearStatus {
  result.hasStatus = NO;
  result.status = ReviveInDungeonResponseProto_ReviveInDungeonStatusSuccess;
  return self;
}
@end


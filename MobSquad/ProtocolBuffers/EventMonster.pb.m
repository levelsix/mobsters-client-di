// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "EventMonster.pb.h"

@implementation EventMonsterRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [EventMonsterRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    [MonsterStuffRoot registerAllExtensions:registry];
    [UserRoot registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface EvolveMonsterRequestProto ()
@property (retain) MinimumUserProto* sender;
@property (retain) UserMonsterEvolutionProto* evolution;
@property int32_t gemsSpent;
@property int32_t oilChange;
@end

@implementation EvolveMonsterRequestProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value {
  hasSender_ = !!value;
}
@synthesize sender;
- (BOOL) hasEvolution {
  return !!hasEvolution_;
}
- (void) setHasEvolution:(BOOL) value {
  hasEvolution_ = !!value;
}
@synthesize evolution;
- (BOOL) hasGemsSpent {
  return !!hasGemsSpent_;
}
- (void) setHasGemsSpent:(BOOL) value {
  hasGemsSpent_ = !!value;
}
@synthesize gemsSpent;
- (BOOL) hasOilChange {
  return !!hasOilChange_;
}
- (void) setHasOilChange:(BOOL) value {
  hasOilChange_ = !!value;
}
@synthesize oilChange;
- (void) dealloc {
  self.sender = nil;
  self.evolution = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.evolution = [UserMonsterEvolutionProto defaultInstance];
    self.gemsSpent = 0;
    self.oilChange = 0;
  }
  return self;
}
static EvolveMonsterRequestProto* defaultEvolveMonsterRequestProtoInstance = nil;
+ (void) initialize {
  if (self == [EvolveMonsterRequestProto class]) {
    defaultEvolveMonsterRequestProtoInstance = [[EvolveMonsterRequestProto alloc] init];
  }
}
+ (EvolveMonsterRequestProto*) defaultInstance {
  return defaultEvolveMonsterRequestProtoInstance;
}
- (EvolveMonsterRequestProto*) defaultInstance {
  return defaultEvolveMonsterRequestProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasEvolution) {
    [output writeMessage:2 value:self.evolution];
  }
  if (self.hasGemsSpent) {
    [output writeInt32:3 value:self.gemsSpent];
  }
  if (self.hasOilChange) {
    [output writeSInt32:4 value:self.oilChange];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSender) {
    size += computeMessageSize(1, self.sender);
  }
  if (self.hasEvolution) {
    size += computeMessageSize(2, self.evolution);
  }
  if (self.hasGemsSpent) {
    size += computeInt32Size(3, self.gemsSpent);
  }
  if (self.hasOilChange) {
    size += computeSInt32Size(4, self.oilChange);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (EvolveMonsterRequestProto*) parseFromData:(NSData*) data {
  return (EvolveMonsterRequestProto*)[[[EvolveMonsterRequestProto builder] mergeFromData:data] build];
}
+ (EvolveMonsterRequestProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (EvolveMonsterRequestProto*)[[[EvolveMonsterRequestProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (EvolveMonsterRequestProto*) parseFromInputStream:(NSInputStream*) input {
  return (EvolveMonsterRequestProto*)[[[EvolveMonsterRequestProto builder] mergeFromInputStream:input] build];
}
+ (EvolveMonsterRequestProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (EvolveMonsterRequestProto*)[[[EvolveMonsterRequestProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (EvolveMonsterRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (EvolveMonsterRequestProto*)[[[EvolveMonsterRequestProto builder] mergeFromCodedInputStream:input] build];
}
+ (EvolveMonsterRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (EvolveMonsterRequestProto*)[[[EvolveMonsterRequestProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (EvolveMonsterRequestProto_Builder*) builder {
  return [[[EvolveMonsterRequestProto_Builder alloc] init] autorelease];
}
+ (EvolveMonsterRequestProto_Builder*) builderWithPrototype:(EvolveMonsterRequestProto*) prototype {
  return [[EvolveMonsterRequestProto builder] mergeFrom:prototype];
}
- (EvolveMonsterRequestProto_Builder*) builder {
  return [EvolveMonsterRequestProto builder];
}
@end

@interface EvolveMonsterRequestProto_Builder()
@property (retain) EvolveMonsterRequestProto* result;
@end

@implementation EvolveMonsterRequestProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[EvolveMonsterRequestProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (EvolveMonsterRequestProto_Builder*) clear {
  self.result = [[[EvolveMonsterRequestProto alloc] init] autorelease];
  return self;
}
- (EvolveMonsterRequestProto_Builder*) clone {
  return [EvolveMonsterRequestProto builderWithPrototype:result];
}
- (EvolveMonsterRequestProto*) defaultInstance {
  return [EvolveMonsterRequestProto defaultInstance];
}
- (EvolveMonsterRequestProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (EvolveMonsterRequestProto*) buildPartial {
  EvolveMonsterRequestProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (EvolveMonsterRequestProto_Builder*) mergeFrom:(EvolveMonsterRequestProto*) other {
  if (other == [EvolveMonsterRequestProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasEvolution) {
    [self mergeEvolution:other.evolution];
  }
  if (other.hasGemsSpent) {
    [self setGemsSpent:other.gemsSpent];
  }
  if (other.hasOilChange) {
    [self setOilChange:other.oilChange];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (EvolveMonsterRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (EvolveMonsterRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        UserMonsterEvolutionProto_Builder* subBuilder = [UserMonsterEvolutionProto builder];
        if (self.hasEvolution) {
          [subBuilder mergeFrom:self.evolution];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setEvolution:[subBuilder buildPartial]];
        break;
      }
      case 24: {
        [self setGemsSpent:[input readInt32]];
        break;
      }
      case 32: {
        [self setOilChange:[input readSInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (EvolveMonsterRequestProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (EvolveMonsterRequestProto_Builder*) setSenderBuilder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (EvolveMonsterRequestProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (EvolveMonsterRequestProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasEvolution {
  return result.hasEvolution;
}
- (UserMonsterEvolutionProto*) evolution {
  return result.evolution;
}
- (EvolveMonsterRequestProto_Builder*) setEvolution:(UserMonsterEvolutionProto*) value {
  result.hasEvolution = YES;
  result.evolution = value;
  return self;
}
- (EvolveMonsterRequestProto_Builder*) setEvolutionBuilder:(UserMonsterEvolutionProto_Builder*) builderForValue {
  return [self setEvolution:[builderForValue build]];
}
- (EvolveMonsterRequestProto_Builder*) mergeEvolution:(UserMonsterEvolutionProto*) value {
  if (result.hasEvolution &&
      result.evolution != [UserMonsterEvolutionProto defaultInstance]) {
    result.evolution =
      [[[UserMonsterEvolutionProto builderWithPrototype:result.evolution] mergeFrom:value] buildPartial];
  } else {
    result.evolution = value;
  }
  result.hasEvolution = YES;
  return self;
}
- (EvolveMonsterRequestProto_Builder*) clearEvolution {
  result.hasEvolution = NO;
  result.evolution = [UserMonsterEvolutionProto defaultInstance];
  return self;
}
- (BOOL) hasGemsSpent {
  return result.hasGemsSpent;
}
- (int32_t) gemsSpent {
  return result.gemsSpent;
}
- (EvolveMonsterRequestProto_Builder*) setGemsSpent:(int32_t) value {
  result.hasGemsSpent = YES;
  result.gemsSpent = value;
  return self;
}
- (EvolveMonsterRequestProto_Builder*) clearGemsSpent {
  result.hasGemsSpent = NO;
  result.gemsSpent = 0;
  return self;
}
- (BOOL) hasOilChange {
  return result.hasOilChange;
}
- (int32_t) oilChange {
  return result.oilChange;
}
- (EvolveMonsterRequestProto_Builder*) setOilChange:(int32_t) value {
  result.hasOilChange = YES;
  result.oilChange = value;
  return self;
}
- (EvolveMonsterRequestProto_Builder*) clearOilChange {
  result.hasOilChange = NO;
  result.oilChange = 0;
  return self;
}
@end

@interface EvolveMonsterResponseProto ()
@property (retain) MinimumUserProto* sender;
@property EvolveMonsterResponseProto_EvolveMonsterStatus status;
@end

@implementation EvolveMonsterResponseProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value {
  hasSender_ = !!value;
}
@synthesize sender;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value {
  hasStatus_ = !!value;
}
@synthesize status;
- (void) dealloc {
  self.sender = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.status = EvolveMonsterResponseProto_EvolveMonsterStatusSuccess;
  }
  return self;
}
static EvolveMonsterResponseProto* defaultEvolveMonsterResponseProtoInstance = nil;
+ (void) initialize {
  if (self == [EvolveMonsterResponseProto class]) {
    defaultEvolveMonsterResponseProtoInstance = [[EvolveMonsterResponseProto alloc] init];
  }
}
+ (EvolveMonsterResponseProto*) defaultInstance {
  return defaultEvolveMonsterResponseProtoInstance;
}
- (EvolveMonsterResponseProto*) defaultInstance {
  return defaultEvolveMonsterResponseProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasStatus) {
    [output writeEnum:2 value:self.status];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSender) {
    size += computeMessageSize(1, self.sender);
  }
  if (self.hasStatus) {
    size += computeEnumSize(2, self.status);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (EvolveMonsterResponseProto*) parseFromData:(NSData*) data {
  return (EvolveMonsterResponseProto*)[[[EvolveMonsterResponseProto builder] mergeFromData:data] build];
}
+ (EvolveMonsterResponseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (EvolveMonsterResponseProto*)[[[EvolveMonsterResponseProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (EvolveMonsterResponseProto*) parseFromInputStream:(NSInputStream*) input {
  return (EvolveMonsterResponseProto*)[[[EvolveMonsterResponseProto builder] mergeFromInputStream:input] build];
}
+ (EvolveMonsterResponseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (EvolveMonsterResponseProto*)[[[EvolveMonsterResponseProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (EvolveMonsterResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (EvolveMonsterResponseProto*)[[[EvolveMonsterResponseProto builder] mergeFromCodedInputStream:input] build];
}
+ (EvolveMonsterResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (EvolveMonsterResponseProto*)[[[EvolveMonsterResponseProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (EvolveMonsterResponseProto_Builder*) builder {
  return [[[EvolveMonsterResponseProto_Builder alloc] init] autorelease];
}
+ (EvolveMonsterResponseProto_Builder*) builderWithPrototype:(EvolveMonsterResponseProto*) prototype {
  return [[EvolveMonsterResponseProto builder] mergeFrom:prototype];
}
- (EvolveMonsterResponseProto_Builder*) builder {
  return [EvolveMonsterResponseProto builder];
}
@end

BOOL EvolveMonsterResponseProto_EvolveMonsterStatusIsValidValue(EvolveMonsterResponseProto_EvolveMonsterStatus value) {
  switch (value) {
    case EvolveMonsterResponseProto_EvolveMonsterStatusSuccess:
    case EvolveMonsterResponseProto_EvolveMonsterStatusFailInsufficientGems:
    case EvolveMonsterResponseProto_EvolveMonsterStatusFailInsufficientResources:
    case EvolveMonsterResponseProto_EvolveMonsterStatusFailMonsterReachedEvolvingLimit:
    case EvolveMonsterResponseProto_EvolveMonsterStatusFailMaxNumEvolutionsReached:
    case EvolveMonsterResponseProto_EvolveMonsterStatusFailNonexistentMonsters:
    case EvolveMonsterResponseProto_EvolveMonsterStatusFailOther:
      return YES;
    default:
      return NO;
  }
}
@interface EvolveMonsterResponseProto_Builder()
@property (retain) EvolveMonsterResponseProto* result;
@end

@implementation EvolveMonsterResponseProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[EvolveMonsterResponseProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (EvolveMonsterResponseProto_Builder*) clear {
  self.result = [[[EvolveMonsterResponseProto alloc] init] autorelease];
  return self;
}
- (EvolveMonsterResponseProto_Builder*) clone {
  return [EvolveMonsterResponseProto builderWithPrototype:result];
}
- (EvolveMonsterResponseProto*) defaultInstance {
  return [EvolveMonsterResponseProto defaultInstance];
}
- (EvolveMonsterResponseProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (EvolveMonsterResponseProto*) buildPartial {
  EvolveMonsterResponseProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (EvolveMonsterResponseProto_Builder*) mergeFrom:(EvolveMonsterResponseProto*) other {
  if (other == [EvolveMonsterResponseProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (EvolveMonsterResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (EvolveMonsterResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        int32_t value = [input readEnum];
        if (EvolveMonsterResponseProto_EvolveMonsterStatusIsValidValue(value)) {
          [self setStatus:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (EvolveMonsterResponseProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (EvolveMonsterResponseProto_Builder*) setSenderBuilder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (EvolveMonsterResponseProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (EvolveMonsterResponseProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (EvolveMonsterResponseProto_EvolveMonsterStatus) status {
  return result.status;
}
- (EvolveMonsterResponseProto_Builder*) setStatus:(EvolveMonsterResponseProto_EvolveMonsterStatus) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (EvolveMonsterResponseProto_Builder*) clearStatus {
  result.hasStatus = NO;
  result.status = EvolveMonsterResponseProto_EvolveMonsterStatusSuccess;
  return self;
}
@end

@interface EvolutionFinishedRequestProto ()
@property (retain) MinimumUserProto* sender;
@property int32_t gemsSpent;
@end

@implementation EvolutionFinishedRequestProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value {
  hasSender_ = !!value;
}
@synthesize sender;
- (BOOL) hasGemsSpent {
  return !!hasGemsSpent_;
}
- (void) setHasGemsSpent:(BOOL) value {
  hasGemsSpent_ = !!value;
}
@synthesize gemsSpent;
- (void) dealloc {
  self.sender = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.gemsSpent = 0;
  }
  return self;
}
static EvolutionFinishedRequestProto* defaultEvolutionFinishedRequestProtoInstance = nil;
+ (void) initialize {
  if (self == [EvolutionFinishedRequestProto class]) {
    defaultEvolutionFinishedRequestProtoInstance = [[EvolutionFinishedRequestProto alloc] init];
  }
}
+ (EvolutionFinishedRequestProto*) defaultInstance {
  return defaultEvolutionFinishedRequestProtoInstance;
}
- (EvolutionFinishedRequestProto*) defaultInstance {
  return defaultEvolutionFinishedRequestProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasGemsSpent) {
    [output writeInt32:2 value:self.gemsSpent];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSender) {
    size += computeMessageSize(1, self.sender);
  }
  if (self.hasGemsSpent) {
    size += computeInt32Size(2, self.gemsSpent);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (EvolutionFinishedRequestProto*) parseFromData:(NSData*) data {
  return (EvolutionFinishedRequestProto*)[[[EvolutionFinishedRequestProto builder] mergeFromData:data] build];
}
+ (EvolutionFinishedRequestProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (EvolutionFinishedRequestProto*)[[[EvolutionFinishedRequestProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (EvolutionFinishedRequestProto*) parseFromInputStream:(NSInputStream*) input {
  return (EvolutionFinishedRequestProto*)[[[EvolutionFinishedRequestProto builder] mergeFromInputStream:input] build];
}
+ (EvolutionFinishedRequestProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (EvolutionFinishedRequestProto*)[[[EvolutionFinishedRequestProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (EvolutionFinishedRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (EvolutionFinishedRequestProto*)[[[EvolutionFinishedRequestProto builder] mergeFromCodedInputStream:input] build];
}
+ (EvolutionFinishedRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (EvolutionFinishedRequestProto*)[[[EvolutionFinishedRequestProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (EvolutionFinishedRequestProto_Builder*) builder {
  return [[[EvolutionFinishedRequestProto_Builder alloc] init] autorelease];
}
+ (EvolutionFinishedRequestProto_Builder*) builderWithPrototype:(EvolutionFinishedRequestProto*) prototype {
  return [[EvolutionFinishedRequestProto builder] mergeFrom:prototype];
}
- (EvolutionFinishedRequestProto_Builder*) builder {
  return [EvolutionFinishedRequestProto builder];
}
@end

@interface EvolutionFinishedRequestProto_Builder()
@property (retain) EvolutionFinishedRequestProto* result;
@end

@implementation EvolutionFinishedRequestProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[EvolutionFinishedRequestProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (EvolutionFinishedRequestProto_Builder*) clear {
  self.result = [[[EvolutionFinishedRequestProto alloc] init] autorelease];
  return self;
}
- (EvolutionFinishedRequestProto_Builder*) clone {
  return [EvolutionFinishedRequestProto builderWithPrototype:result];
}
- (EvolutionFinishedRequestProto*) defaultInstance {
  return [EvolutionFinishedRequestProto defaultInstance];
}
- (EvolutionFinishedRequestProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (EvolutionFinishedRequestProto*) buildPartial {
  EvolutionFinishedRequestProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (EvolutionFinishedRequestProto_Builder*) mergeFrom:(EvolutionFinishedRequestProto*) other {
  if (other == [EvolutionFinishedRequestProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasGemsSpent) {
    [self setGemsSpent:other.gemsSpent];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (EvolutionFinishedRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (EvolutionFinishedRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setGemsSpent:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (EvolutionFinishedRequestProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (EvolutionFinishedRequestProto_Builder*) setSenderBuilder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (EvolutionFinishedRequestProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (EvolutionFinishedRequestProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasGemsSpent {
  return result.hasGemsSpent;
}
- (int32_t) gemsSpent {
  return result.gemsSpent;
}
- (EvolutionFinishedRequestProto_Builder*) setGemsSpent:(int32_t) value {
  result.hasGemsSpent = YES;
  result.gemsSpent = value;
  return self;
}
- (EvolutionFinishedRequestProto_Builder*) clearGemsSpent {
  result.hasGemsSpent = NO;
  result.gemsSpent = 0;
  return self;
}
@end

@interface EvolutionFinishedResponseProto ()
@property (retain) MinimumUserProto* sender;
@property (retain) FullUserMonsterProto* evolvedMonster;
@property EvolutionFinishedResponseProto_EvolutionFinishedStatus status;
@end

@implementation EvolutionFinishedResponseProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value {
  hasSender_ = !!value;
}
@synthesize sender;
- (BOOL) hasEvolvedMonster {
  return !!hasEvolvedMonster_;
}
- (void) setHasEvolvedMonster:(BOOL) value {
  hasEvolvedMonster_ = !!value;
}
@synthesize evolvedMonster;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value {
  hasStatus_ = !!value;
}
@synthesize status;
- (void) dealloc {
  self.sender = nil;
  self.evolvedMonster = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.evolvedMonster = [FullUserMonsterProto defaultInstance];
    self.status = EvolutionFinishedResponseProto_EvolutionFinishedStatusSuccess;
  }
  return self;
}
static EvolutionFinishedResponseProto* defaultEvolutionFinishedResponseProtoInstance = nil;
+ (void) initialize {
  if (self == [EvolutionFinishedResponseProto class]) {
    defaultEvolutionFinishedResponseProtoInstance = [[EvolutionFinishedResponseProto alloc] init];
  }
}
+ (EvolutionFinishedResponseProto*) defaultInstance {
  return defaultEvolutionFinishedResponseProtoInstance;
}
- (EvolutionFinishedResponseProto*) defaultInstance {
  return defaultEvolutionFinishedResponseProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasEvolvedMonster) {
    [output writeMessage:2 value:self.evolvedMonster];
  }
  if (self.hasStatus) {
    [output writeEnum:3 value:self.status];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSender) {
    size += computeMessageSize(1, self.sender);
  }
  if (self.hasEvolvedMonster) {
    size += computeMessageSize(2, self.evolvedMonster);
  }
  if (self.hasStatus) {
    size += computeEnumSize(3, self.status);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (EvolutionFinishedResponseProto*) parseFromData:(NSData*) data {
  return (EvolutionFinishedResponseProto*)[[[EvolutionFinishedResponseProto builder] mergeFromData:data] build];
}
+ (EvolutionFinishedResponseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (EvolutionFinishedResponseProto*)[[[EvolutionFinishedResponseProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (EvolutionFinishedResponseProto*) parseFromInputStream:(NSInputStream*) input {
  return (EvolutionFinishedResponseProto*)[[[EvolutionFinishedResponseProto builder] mergeFromInputStream:input] build];
}
+ (EvolutionFinishedResponseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (EvolutionFinishedResponseProto*)[[[EvolutionFinishedResponseProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (EvolutionFinishedResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (EvolutionFinishedResponseProto*)[[[EvolutionFinishedResponseProto builder] mergeFromCodedInputStream:input] build];
}
+ (EvolutionFinishedResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (EvolutionFinishedResponseProto*)[[[EvolutionFinishedResponseProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (EvolutionFinishedResponseProto_Builder*) builder {
  return [[[EvolutionFinishedResponseProto_Builder alloc] init] autorelease];
}
+ (EvolutionFinishedResponseProto_Builder*) builderWithPrototype:(EvolutionFinishedResponseProto*) prototype {
  return [[EvolutionFinishedResponseProto builder] mergeFrom:prototype];
}
- (EvolutionFinishedResponseProto_Builder*) builder {
  return [EvolutionFinishedResponseProto builder];
}
@end

BOOL EvolutionFinishedResponseProto_EvolutionFinishedStatusIsValidValue(EvolutionFinishedResponseProto_EvolutionFinishedStatus value) {
  switch (value) {
    case EvolutionFinishedResponseProto_EvolutionFinishedStatusSuccess:
    case EvolutionFinishedResponseProto_EvolutionFinishedStatusFailInsufficientGems:
    case EvolutionFinishedResponseProto_EvolutionFinishedStatusFailOther:
      return YES;
    default:
      return NO;
  }
}
@interface EvolutionFinishedResponseProto_Builder()
@property (retain) EvolutionFinishedResponseProto* result;
@end

@implementation EvolutionFinishedResponseProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[EvolutionFinishedResponseProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (EvolutionFinishedResponseProto_Builder*) clear {
  self.result = [[[EvolutionFinishedResponseProto alloc] init] autorelease];
  return self;
}
- (EvolutionFinishedResponseProto_Builder*) clone {
  return [EvolutionFinishedResponseProto builderWithPrototype:result];
}
- (EvolutionFinishedResponseProto*) defaultInstance {
  return [EvolutionFinishedResponseProto defaultInstance];
}
- (EvolutionFinishedResponseProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (EvolutionFinishedResponseProto*) buildPartial {
  EvolutionFinishedResponseProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (EvolutionFinishedResponseProto_Builder*) mergeFrom:(EvolutionFinishedResponseProto*) other {
  if (other == [EvolutionFinishedResponseProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasEvolvedMonster) {
    [self mergeEvolvedMonster:other.evolvedMonster];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (EvolutionFinishedResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (EvolutionFinishedResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        FullUserMonsterProto_Builder* subBuilder = [FullUserMonsterProto builder];
        if (self.hasEvolvedMonster) {
          [subBuilder mergeFrom:self.evolvedMonster];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setEvolvedMonster:[subBuilder buildPartial]];
        break;
      }
      case 24: {
        int32_t value = [input readEnum];
        if (EvolutionFinishedResponseProto_EvolutionFinishedStatusIsValidValue(value)) {
          [self setStatus:value];
        } else {
          [unknownFields mergeVarintField:3 value:value];
        }
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (EvolutionFinishedResponseProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (EvolutionFinishedResponseProto_Builder*) setSenderBuilder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (EvolutionFinishedResponseProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (EvolutionFinishedResponseProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasEvolvedMonster {
  return result.hasEvolvedMonster;
}
- (FullUserMonsterProto*) evolvedMonster {
  return result.evolvedMonster;
}
- (EvolutionFinishedResponseProto_Builder*) setEvolvedMonster:(FullUserMonsterProto*) value {
  result.hasEvolvedMonster = YES;
  result.evolvedMonster = value;
  return self;
}
- (EvolutionFinishedResponseProto_Builder*) setEvolvedMonsterBuilder:(FullUserMonsterProto_Builder*) builderForValue {
  return [self setEvolvedMonster:[builderForValue build]];
}
- (EvolutionFinishedResponseProto_Builder*) mergeEvolvedMonster:(FullUserMonsterProto*) value {
  if (result.hasEvolvedMonster &&
      result.evolvedMonster != [FullUserMonsterProto defaultInstance]) {
    result.evolvedMonster =
      [[[FullUserMonsterProto builderWithPrototype:result.evolvedMonster] mergeFrom:value] buildPartial];
  } else {
    result.evolvedMonster = value;
  }
  result.hasEvolvedMonster = YES;
  return self;
}
- (EvolutionFinishedResponseProto_Builder*) clearEvolvedMonster {
  result.hasEvolvedMonster = NO;
  result.evolvedMonster = [FullUserMonsterProto defaultInstance];
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (EvolutionFinishedResponseProto_EvolutionFinishedStatus) status {
  return result.status;
}
- (EvolutionFinishedResponseProto_Builder*) setStatus:(EvolutionFinishedResponseProto_EvolutionFinishedStatus) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (EvolutionFinishedResponseProto_Builder*) clearStatus {
  result.hasStatus = NO;
  result.status = EvolutionFinishedResponseProto_EvolutionFinishedStatusSuccess;
  return self;
}
@end

@interface SubmitMonsterEnhancementRequestProto ()
@property (retain) MinimumUserProtoWithMaxResources* sender;
@property (retain) NSMutableArray* mutableUeipDeleteList;
@property (retain) NSMutableArray* mutableUeipUpdateList;
@property (retain) NSMutableArray* mutableUeipNewList;
@property int32_t gemsSpent;
@property int32_t oilChange;
@end

@implementation SubmitMonsterEnhancementRequestProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value {
  hasSender_ = !!value;
}
@synthesize sender;
@synthesize mutableUeipDeleteList;
@synthesize mutableUeipUpdateList;
@synthesize mutableUeipNewList;
- (BOOL) hasGemsSpent {
  return !!hasGemsSpent_;
}
- (void) setHasGemsSpent:(BOOL) value {
  hasGemsSpent_ = !!value;
}
@synthesize gemsSpent;
- (BOOL) hasOilChange {
  return !!hasOilChange_;
}
- (void) setHasOilChange:(BOOL) value {
  hasOilChange_ = !!value;
}
@synthesize oilChange;
- (void) dealloc {
  self.sender = nil;
  self.mutableUeipDeleteList = nil;
  self.mutableUeipUpdateList = nil;
  self.mutableUeipNewList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProtoWithMaxResources defaultInstance];
    self.gemsSpent = 0;
    self.oilChange = 0;
  }
  return self;
}
static SubmitMonsterEnhancementRequestProto* defaultSubmitMonsterEnhancementRequestProtoInstance = nil;
+ (void) initialize {
  if (self == [SubmitMonsterEnhancementRequestProto class]) {
    defaultSubmitMonsterEnhancementRequestProtoInstance = [[SubmitMonsterEnhancementRequestProto alloc] init];
  }
}
+ (SubmitMonsterEnhancementRequestProto*) defaultInstance {
  return defaultSubmitMonsterEnhancementRequestProtoInstance;
}
- (SubmitMonsterEnhancementRequestProto*) defaultInstance {
  return defaultSubmitMonsterEnhancementRequestProtoInstance;
}
- (NSArray*) ueipDeleteList {
  return mutableUeipDeleteList;
}
- (UserEnhancementItemProto*) ueipDeleteAtIndex:(int32_t) index {
  id value = [mutableUeipDeleteList objectAtIndex:index];
  return value;
}
- (NSArray*) ueipUpdateList {
  return mutableUeipUpdateList;
}
- (UserEnhancementItemProto*) ueipUpdateAtIndex:(int32_t) index {
  id value = [mutableUeipUpdateList objectAtIndex:index];
  return value;
}
- (NSArray*) ueipNewList {
  return mutableUeipNewList;
}
- (UserEnhancementItemProto*) ueipNewAtIndex:(int32_t) index {
  id value = [mutableUeipNewList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  for (UserEnhancementItemProto* element in self.ueipDeleteList) {
    [output writeMessage:2 value:element];
  }
  for (UserEnhancementItemProto* element in self.ueipUpdateList) {
    [output writeMessage:3 value:element];
  }
  for (UserEnhancementItemProto* element in self.ueipNewList) {
    [output writeMessage:4 value:element];
  }
  if (self.hasGemsSpent) {
    [output writeInt32:5 value:self.gemsSpent];
  }
  if (self.hasOilChange) {
    [output writeSInt32:6 value:self.oilChange];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSender) {
    size += computeMessageSize(1, self.sender);
  }
  for (UserEnhancementItemProto* element in self.ueipDeleteList) {
    size += computeMessageSize(2, element);
  }
  for (UserEnhancementItemProto* element in self.ueipUpdateList) {
    size += computeMessageSize(3, element);
  }
  for (UserEnhancementItemProto* element in self.ueipNewList) {
    size += computeMessageSize(4, element);
  }
  if (self.hasGemsSpent) {
    size += computeInt32Size(5, self.gemsSpent);
  }
  if (self.hasOilChange) {
    size += computeSInt32Size(6, self.oilChange);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (SubmitMonsterEnhancementRequestProto*) parseFromData:(NSData*) data {
  return (SubmitMonsterEnhancementRequestProto*)[[[SubmitMonsterEnhancementRequestProto builder] mergeFromData:data] build];
}
+ (SubmitMonsterEnhancementRequestProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SubmitMonsterEnhancementRequestProto*)[[[SubmitMonsterEnhancementRequestProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (SubmitMonsterEnhancementRequestProto*) parseFromInputStream:(NSInputStream*) input {
  return (SubmitMonsterEnhancementRequestProto*)[[[SubmitMonsterEnhancementRequestProto builder] mergeFromInputStream:input] build];
}
+ (SubmitMonsterEnhancementRequestProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SubmitMonsterEnhancementRequestProto*)[[[SubmitMonsterEnhancementRequestProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SubmitMonsterEnhancementRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (SubmitMonsterEnhancementRequestProto*)[[[SubmitMonsterEnhancementRequestProto builder] mergeFromCodedInputStream:input] build];
}
+ (SubmitMonsterEnhancementRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SubmitMonsterEnhancementRequestProto*)[[[SubmitMonsterEnhancementRequestProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SubmitMonsterEnhancementRequestProto_Builder*) builder {
  return [[[SubmitMonsterEnhancementRequestProto_Builder alloc] init] autorelease];
}
+ (SubmitMonsterEnhancementRequestProto_Builder*) builderWithPrototype:(SubmitMonsterEnhancementRequestProto*) prototype {
  return [[SubmitMonsterEnhancementRequestProto builder] mergeFrom:prototype];
}
- (SubmitMonsterEnhancementRequestProto_Builder*) builder {
  return [SubmitMonsterEnhancementRequestProto builder];
}
@end

@interface SubmitMonsterEnhancementRequestProto_Builder()
@property (retain) SubmitMonsterEnhancementRequestProto* result;
@end

@implementation SubmitMonsterEnhancementRequestProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[SubmitMonsterEnhancementRequestProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (SubmitMonsterEnhancementRequestProto_Builder*) clear {
  self.result = [[[SubmitMonsterEnhancementRequestProto alloc] init] autorelease];
  return self;
}
- (SubmitMonsterEnhancementRequestProto_Builder*) clone {
  return [SubmitMonsterEnhancementRequestProto builderWithPrototype:result];
}
- (SubmitMonsterEnhancementRequestProto*) defaultInstance {
  return [SubmitMonsterEnhancementRequestProto defaultInstance];
}
- (SubmitMonsterEnhancementRequestProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (SubmitMonsterEnhancementRequestProto*) buildPartial {
  SubmitMonsterEnhancementRequestProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (SubmitMonsterEnhancementRequestProto_Builder*) mergeFrom:(SubmitMonsterEnhancementRequestProto*) other {
  if (other == [SubmitMonsterEnhancementRequestProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.mutableUeipDeleteList.count > 0) {
    if (result.mutableUeipDeleteList == nil) {
      result.mutableUeipDeleteList = [NSMutableArray array];
    }
    [result.mutableUeipDeleteList addObjectsFromArray:other.mutableUeipDeleteList];
  }
  if (other.mutableUeipUpdateList.count > 0) {
    if (result.mutableUeipUpdateList == nil) {
      result.mutableUeipUpdateList = [NSMutableArray array];
    }
    [result.mutableUeipUpdateList addObjectsFromArray:other.mutableUeipUpdateList];
  }
  if (other.mutableUeipNewList.count > 0) {
    if (result.mutableUeipNewList == nil) {
      result.mutableUeipNewList = [NSMutableArray array];
    }
    [result.mutableUeipNewList addObjectsFromArray:other.mutableUeipNewList];
  }
  if (other.hasGemsSpent) {
    [self setGemsSpent:other.gemsSpent];
  }
  if (other.hasOilChange) {
    [self setOilChange:other.oilChange];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (SubmitMonsterEnhancementRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (SubmitMonsterEnhancementRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProtoWithMaxResources_Builder* subBuilder = [MinimumUserProtoWithMaxResources builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        UserEnhancementItemProto_Builder* subBuilder = [UserEnhancementItemProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addUeipDelete:[subBuilder buildPartial]];
        break;
      }
      case 26: {
        UserEnhancementItemProto_Builder* subBuilder = [UserEnhancementItemProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addUeipUpdate:[subBuilder buildPartial]];
        break;
      }
      case 34: {
        UserEnhancementItemProto_Builder* subBuilder = [UserEnhancementItemProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addUeipNew:[subBuilder buildPartial]];
        break;
      }
      case 40: {
        [self setGemsSpent:[input readInt32]];
        break;
      }
      case 48: {
        [self setOilChange:[input readSInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProtoWithMaxResources*) sender {
  return result.sender;
}
- (SubmitMonsterEnhancementRequestProto_Builder*) setSender:(MinimumUserProtoWithMaxResources*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (SubmitMonsterEnhancementRequestProto_Builder*) setSenderBuilder:(MinimumUserProtoWithMaxResources_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (SubmitMonsterEnhancementRequestProto_Builder*) mergeSender:(MinimumUserProtoWithMaxResources*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProtoWithMaxResources defaultInstance]) {
    result.sender =
      [[[MinimumUserProtoWithMaxResources builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (SubmitMonsterEnhancementRequestProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProtoWithMaxResources defaultInstance];
  return self;
}
- (NSArray*) ueipDeleteList {
  if (result.mutableUeipDeleteList == nil) { return [NSArray array]; }
  return result.mutableUeipDeleteList;
}
- (UserEnhancementItemProto*) ueipDeleteAtIndex:(int32_t) index {
  return [result ueipDeleteAtIndex:index];
}
- (SubmitMonsterEnhancementRequestProto_Builder*) replaceUeipDeleteAtIndex:(int32_t) index with:(UserEnhancementItemProto*) value {
  [result.mutableUeipDeleteList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (SubmitMonsterEnhancementRequestProto_Builder*) addAllUeipDelete:(NSArray*) values {
  if (result.mutableUeipDeleteList == nil) {
    result.mutableUeipDeleteList = [NSMutableArray array];
  }
  [result.mutableUeipDeleteList addObjectsFromArray:values];
  return self;
}
- (SubmitMonsterEnhancementRequestProto_Builder*) clearUeipDeleteList {
  result.mutableUeipDeleteList = nil;
  return self;
}
- (SubmitMonsterEnhancementRequestProto_Builder*) addUeipDelete:(UserEnhancementItemProto*) value {
  if (result.mutableUeipDeleteList == nil) {
    result.mutableUeipDeleteList = [NSMutableArray array];
  }
  [result.mutableUeipDeleteList addObject:value];
  return self;
}
- (NSArray*) ueipUpdateList {
  if (result.mutableUeipUpdateList == nil) { return [NSArray array]; }
  return result.mutableUeipUpdateList;
}
- (UserEnhancementItemProto*) ueipUpdateAtIndex:(int32_t) index {
  return [result ueipUpdateAtIndex:index];
}
- (SubmitMonsterEnhancementRequestProto_Builder*) replaceUeipUpdateAtIndex:(int32_t) index with:(UserEnhancementItemProto*) value {
  [result.mutableUeipUpdateList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (SubmitMonsterEnhancementRequestProto_Builder*) addAllUeipUpdate:(NSArray*) values {
  if (result.mutableUeipUpdateList == nil) {
    result.mutableUeipUpdateList = [NSMutableArray array];
  }
  [result.mutableUeipUpdateList addObjectsFromArray:values];
  return self;
}
- (SubmitMonsterEnhancementRequestProto_Builder*) clearUeipUpdateList {
  result.mutableUeipUpdateList = nil;
  return self;
}
- (SubmitMonsterEnhancementRequestProto_Builder*) addUeipUpdate:(UserEnhancementItemProto*) value {
  if (result.mutableUeipUpdateList == nil) {
    result.mutableUeipUpdateList = [NSMutableArray array];
  }
  [result.mutableUeipUpdateList addObject:value];
  return self;
}
- (NSArray*) ueipNewList {
  if (result.mutableUeipNewList == nil) { return [NSArray array]; }
  return result.mutableUeipNewList;
}
- (UserEnhancementItemProto*) ueipNewAtIndex:(int32_t) index {
  return [result ueipNewAtIndex:index];
}
- (SubmitMonsterEnhancementRequestProto_Builder*) replaceUeipNewAtIndex:(int32_t) index with:(UserEnhancementItemProto*) value {
  [result.mutableUeipNewList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (SubmitMonsterEnhancementRequestProto_Builder*) addAllUeipNew:(NSArray*) values {
  if (result.mutableUeipNewList == nil) {
    result.mutableUeipNewList = [NSMutableArray array];
  }
  [result.mutableUeipNewList addObjectsFromArray:values];
  return self;
}
- (SubmitMonsterEnhancementRequestProto_Builder*) clearUeipNewList {
  result.mutableUeipNewList = nil;
  return self;
}
- (SubmitMonsterEnhancementRequestProto_Builder*) addUeipNew:(UserEnhancementItemProto*) value {
  if (result.mutableUeipNewList == nil) {
    result.mutableUeipNewList = [NSMutableArray array];
  }
  [result.mutableUeipNewList addObject:value];
  return self;
}
- (BOOL) hasGemsSpent {
  return result.hasGemsSpent;
}
- (int32_t) gemsSpent {
  return result.gemsSpent;
}
- (SubmitMonsterEnhancementRequestProto_Builder*) setGemsSpent:(int32_t) value {
  result.hasGemsSpent = YES;
  result.gemsSpent = value;
  return self;
}
- (SubmitMonsterEnhancementRequestProto_Builder*) clearGemsSpent {
  result.hasGemsSpent = NO;
  result.gemsSpent = 0;
  return self;
}
- (BOOL) hasOilChange {
  return result.hasOilChange;
}
- (int32_t) oilChange {
  return result.oilChange;
}
- (SubmitMonsterEnhancementRequestProto_Builder*) setOilChange:(int32_t) value {
  result.hasOilChange = YES;
  result.oilChange = value;
  return self;
}
- (SubmitMonsterEnhancementRequestProto_Builder*) clearOilChange {
  result.hasOilChange = NO;
  result.oilChange = 0;
  return self;
}
@end

@interface SubmitMonsterEnhancementResponseProto ()
@property (retain) MinimumUserProtoWithMaxResources* sender;
@property SubmitMonsterEnhancementResponseProto_SubmitMonsterEnhancementStatus status;
@end

@implementation SubmitMonsterEnhancementResponseProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value {
  hasSender_ = !!value;
}
@synthesize sender;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value {
  hasStatus_ = !!value;
}
@synthesize status;
- (void) dealloc {
  self.sender = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProtoWithMaxResources defaultInstance];
    self.status = SubmitMonsterEnhancementResponseProto_SubmitMonsterEnhancementStatusSuccess;
  }
  return self;
}
static SubmitMonsterEnhancementResponseProto* defaultSubmitMonsterEnhancementResponseProtoInstance = nil;
+ (void) initialize {
  if (self == [SubmitMonsterEnhancementResponseProto class]) {
    defaultSubmitMonsterEnhancementResponseProtoInstance = [[SubmitMonsterEnhancementResponseProto alloc] init];
  }
}
+ (SubmitMonsterEnhancementResponseProto*) defaultInstance {
  return defaultSubmitMonsterEnhancementResponseProtoInstance;
}
- (SubmitMonsterEnhancementResponseProto*) defaultInstance {
  return defaultSubmitMonsterEnhancementResponseProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasStatus) {
    [output writeEnum:2 value:self.status];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSender) {
    size += computeMessageSize(1, self.sender);
  }
  if (self.hasStatus) {
    size += computeEnumSize(2, self.status);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (SubmitMonsterEnhancementResponseProto*) parseFromData:(NSData*) data {
  return (SubmitMonsterEnhancementResponseProto*)[[[SubmitMonsterEnhancementResponseProto builder] mergeFromData:data] build];
}
+ (SubmitMonsterEnhancementResponseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SubmitMonsterEnhancementResponseProto*)[[[SubmitMonsterEnhancementResponseProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (SubmitMonsterEnhancementResponseProto*) parseFromInputStream:(NSInputStream*) input {
  return (SubmitMonsterEnhancementResponseProto*)[[[SubmitMonsterEnhancementResponseProto builder] mergeFromInputStream:input] build];
}
+ (SubmitMonsterEnhancementResponseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SubmitMonsterEnhancementResponseProto*)[[[SubmitMonsterEnhancementResponseProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SubmitMonsterEnhancementResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (SubmitMonsterEnhancementResponseProto*)[[[SubmitMonsterEnhancementResponseProto builder] mergeFromCodedInputStream:input] build];
}
+ (SubmitMonsterEnhancementResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SubmitMonsterEnhancementResponseProto*)[[[SubmitMonsterEnhancementResponseProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SubmitMonsterEnhancementResponseProto_Builder*) builder {
  return [[[SubmitMonsterEnhancementResponseProto_Builder alloc] init] autorelease];
}
+ (SubmitMonsterEnhancementResponseProto_Builder*) builderWithPrototype:(SubmitMonsterEnhancementResponseProto*) prototype {
  return [[SubmitMonsterEnhancementResponseProto builder] mergeFrom:prototype];
}
- (SubmitMonsterEnhancementResponseProto_Builder*) builder {
  return [SubmitMonsterEnhancementResponseProto builder];
}
@end

BOOL SubmitMonsterEnhancementResponseProto_SubmitMonsterEnhancementStatusIsValidValue(SubmitMonsterEnhancementResponseProto_SubmitMonsterEnhancementStatus value) {
  switch (value) {
    case SubmitMonsterEnhancementResponseProto_SubmitMonsterEnhancementStatusSuccess:
    case SubmitMonsterEnhancementResponseProto_SubmitMonsterEnhancementStatusFailInsufficientGems:
    case SubmitMonsterEnhancementResponseProto_SubmitMonsterEnhancementStatusFailInsufficientOil:
    case SubmitMonsterEnhancementResponseProto_SubmitMonsterEnhancementStatusFailOther:
      return YES;
    default:
      return NO;
  }
}
@interface SubmitMonsterEnhancementResponseProto_Builder()
@property (retain) SubmitMonsterEnhancementResponseProto* result;
@end

@implementation SubmitMonsterEnhancementResponseProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[SubmitMonsterEnhancementResponseProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (SubmitMonsterEnhancementResponseProto_Builder*) clear {
  self.result = [[[SubmitMonsterEnhancementResponseProto alloc] init] autorelease];
  return self;
}
- (SubmitMonsterEnhancementResponseProto_Builder*) clone {
  return [SubmitMonsterEnhancementResponseProto builderWithPrototype:result];
}
- (SubmitMonsterEnhancementResponseProto*) defaultInstance {
  return [SubmitMonsterEnhancementResponseProto defaultInstance];
}
- (SubmitMonsterEnhancementResponseProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (SubmitMonsterEnhancementResponseProto*) buildPartial {
  SubmitMonsterEnhancementResponseProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (SubmitMonsterEnhancementResponseProto_Builder*) mergeFrom:(SubmitMonsterEnhancementResponseProto*) other {
  if (other == [SubmitMonsterEnhancementResponseProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (SubmitMonsterEnhancementResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (SubmitMonsterEnhancementResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProtoWithMaxResources_Builder* subBuilder = [MinimumUserProtoWithMaxResources builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        int32_t value = [input readEnum];
        if (SubmitMonsterEnhancementResponseProto_SubmitMonsterEnhancementStatusIsValidValue(value)) {
          [self setStatus:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProtoWithMaxResources*) sender {
  return result.sender;
}
- (SubmitMonsterEnhancementResponseProto_Builder*) setSender:(MinimumUserProtoWithMaxResources*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (SubmitMonsterEnhancementResponseProto_Builder*) setSenderBuilder:(MinimumUserProtoWithMaxResources_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (SubmitMonsterEnhancementResponseProto_Builder*) mergeSender:(MinimumUserProtoWithMaxResources*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProtoWithMaxResources defaultInstance]) {
    result.sender =
      [[[MinimumUserProtoWithMaxResources builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (SubmitMonsterEnhancementResponseProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProtoWithMaxResources defaultInstance];
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (SubmitMonsterEnhancementResponseProto_SubmitMonsterEnhancementStatus) status {
  return result.status;
}
- (SubmitMonsterEnhancementResponseProto_Builder*) setStatus:(SubmitMonsterEnhancementResponseProto_SubmitMonsterEnhancementStatus) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (SubmitMonsterEnhancementResponseProto_Builder*) clearStatus {
  result.hasStatus = NO;
  result.status = SubmitMonsterEnhancementResponseProto_SubmitMonsterEnhancementStatusSuccess;
  return self;
}
@end

@interface EnhancementWaitTimeCompleteRequestProto ()
@property (retain) MinimumUserProto* sender;
@property BOOL isSpeedup;
@property int32_t gemsForSpeedup;
@property (retain) UserMonsterCurrentExpProto* umcep;
@property (retain) NSMutableArray* mutableUserMonsterIdsList;
@end

@implementation EnhancementWaitTimeCompleteRequestProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value {
  hasSender_ = !!value;
}
@synthesize sender;
- (BOOL) hasIsSpeedup {
  return !!hasIsSpeedup_;
}
- (void) setHasIsSpeedup:(BOOL) value {
  hasIsSpeedup_ = !!value;
}
- (BOOL) isSpeedup {
  return !!isSpeedup_;
}
- (void) setIsSpeedup:(BOOL) value {
  isSpeedup_ = !!value;
}
- (BOOL) hasGemsForSpeedup {
  return !!hasGemsForSpeedup_;
}
- (void) setHasGemsForSpeedup:(BOOL) value {
  hasGemsForSpeedup_ = !!value;
}
@synthesize gemsForSpeedup;
- (BOOL) hasUmcep {
  return !!hasUmcep_;
}
- (void) setHasUmcep:(BOOL) value {
  hasUmcep_ = !!value;
}
@synthesize umcep;
@synthesize mutableUserMonsterIdsList;
- (void) dealloc {
  self.sender = nil;
  self.umcep = nil;
  self.mutableUserMonsterIdsList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.isSpeedup = NO;
    self.gemsForSpeedup = 0;
    self.umcep = [UserMonsterCurrentExpProto defaultInstance];
  }
  return self;
}
static EnhancementWaitTimeCompleteRequestProto* defaultEnhancementWaitTimeCompleteRequestProtoInstance = nil;
+ (void) initialize {
  if (self == [EnhancementWaitTimeCompleteRequestProto class]) {
    defaultEnhancementWaitTimeCompleteRequestProtoInstance = [[EnhancementWaitTimeCompleteRequestProto alloc] init];
  }
}
+ (EnhancementWaitTimeCompleteRequestProto*) defaultInstance {
  return defaultEnhancementWaitTimeCompleteRequestProtoInstance;
}
- (EnhancementWaitTimeCompleteRequestProto*) defaultInstance {
  return defaultEnhancementWaitTimeCompleteRequestProtoInstance;
}
- (NSArray*) userMonsterIdsList {
  return mutableUserMonsterIdsList;
}
- (int64_t) userMonsterIdsAtIndex:(int32_t) index {
  id value = [mutableUserMonsterIdsList objectAtIndex:index];
  return [value longLongValue];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasIsSpeedup) {
    [output writeBool:2 value:self.isSpeedup];
  }
  if (self.hasGemsForSpeedup) {
    [output writeInt32:3 value:self.gemsForSpeedup];
  }
  if (self.hasUmcep) {
    [output writeMessage:4 value:self.umcep];
  }
  for (NSNumber* value in self.mutableUserMonsterIdsList) {
    [output writeInt64:5 value:[value longLongValue]];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSender) {
    size += computeMessageSize(1, self.sender);
  }
  if (self.hasIsSpeedup) {
    size += computeBoolSize(2, self.isSpeedup);
  }
  if (self.hasGemsForSpeedup) {
    size += computeInt32Size(3, self.gemsForSpeedup);
  }
  if (self.hasUmcep) {
    size += computeMessageSize(4, self.umcep);
  }
  {
    int32_t dataSize = 0;
    for (NSNumber* value in self.mutableUserMonsterIdsList) {
      dataSize += computeInt64SizeNoTag([value longLongValue]);
    }
    size += dataSize;
    size += 1 * self.mutableUserMonsterIdsList.count;
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (EnhancementWaitTimeCompleteRequestProto*) parseFromData:(NSData*) data {
  return (EnhancementWaitTimeCompleteRequestProto*)[[[EnhancementWaitTimeCompleteRequestProto builder] mergeFromData:data] build];
}
+ (EnhancementWaitTimeCompleteRequestProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (EnhancementWaitTimeCompleteRequestProto*)[[[EnhancementWaitTimeCompleteRequestProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (EnhancementWaitTimeCompleteRequestProto*) parseFromInputStream:(NSInputStream*) input {
  return (EnhancementWaitTimeCompleteRequestProto*)[[[EnhancementWaitTimeCompleteRequestProto builder] mergeFromInputStream:input] build];
}
+ (EnhancementWaitTimeCompleteRequestProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (EnhancementWaitTimeCompleteRequestProto*)[[[EnhancementWaitTimeCompleteRequestProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (EnhancementWaitTimeCompleteRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (EnhancementWaitTimeCompleteRequestProto*)[[[EnhancementWaitTimeCompleteRequestProto builder] mergeFromCodedInputStream:input] build];
}
+ (EnhancementWaitTimeCompleteRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (EnhancementWaitTimeCompleteRequestProto*)[[[EnhancementWaitTimeCompleteRequestProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (EnhancementWaitTimeCompleteRequestProto_Builder*) builder {
  return [[[EnhancementWaitTimeCompleteRequestProto_Builder alloc] init] autorelease];
}
+ (EnhancementWaitTimeCompleteRequestProto_Builder*) builderWithPrototype:(EnhancementWaitTimeCompleteRequestProto*) prototype {
  return [[EnhancementWaitTimeCompleteRequestProto builder] mergeFrom:prototype];
}
- (EnhancementWaitTimeCompleteRequestProto_Builder*) builder {
  return [EnhancementWaitTimeCompleteRequestProto builder];
}
@end

@interface EnhancementWaitTimeCompleteRequestProto_Builder()
@property (retain) EnhancementWaitTimeCompleteRequestProto* result;
@end

@implementation EnhancementWaitTimeCompleteRequestProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[EnhancementWaitTimeCompleteRequestProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (EnhancementWaitTimeCompleteRequestProto_Builder*) clear {
  self.result = [[[EnhancementWaitTimeCompleteRequestProto alloc] init] autorelease];
  return self;
}
- (EnhancementWaitTimeCompleteRequestProto_Builder*) clone {
  return [EnhancementWaitTimeCompleteRequestProto builderWithPrototype:result];
}
- (EnhancementWaitTimeCompleteRequestProto*) defaultInstance {
  return [EnhancementWaitTimeCompleteRequestProto defaultInstance];
}
- (EnhancementWaitTimeCompleteRequestProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (EnhancementWaitTimeCompleteRequestProto*) buildPartial {
  EnhancementWaitTimeCompleteRequestProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (EnhancementWaitTimeCompleteRequestProto_Builder*) mergeFrom:(EnhancementWaitTimeCompleteRequestProto*) other {
  if (other == [EnhancementWaitTimeCompleteRequestProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasIsSpeedup) {
    [self setIsSpeedup:other.isSpeedup];
  }
  if (other.hasGemsForSpeedup) {
    [self setGemsForSpeedup:other.gemsForSpeedup];
  }
  if (other.hasUmcep) {
    [self mergeUmcep:other.umcep];
  }
  if (other.mutableUserMonsterIdsList.count > 0) {
    if (result.mutableUserMonsterIdsList == nil) {
      result.mutableUserMonsterIdsList = [NSMutableArray array];
    }
    [result.mutableUserMonsterIdsList addObjectsFromArray:other.mutableUserMonsterIdsList];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (EnhancementWaitTimeCompleteRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (EnhancementWaitTimeCompleteRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setIsSpeedup:[input readBool]];
        break;
      }
      case 24: {
        [self setGemsForSpeedup:[input readInt32]];
        break;
      }
      case 34: {
        UserMonsterCurrentExpProto_Builder* subBuilder = [UserMonsterCurrentExpProto builder];
        if (self.hasUmcep) {
          [subBuilder mergeFrom:self.umcep];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setUmcep:[subBuilder buildPartial]];
        break;
      }
      case 40: {
        [self addUserMonsterIds:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (EnhancementWaitTimeCompleteRequestProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (EnhancementWaitTimeCompleteRequestProto_Builder*) setSenderBuilder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (EnhancementWaitTimeCompleteRequestProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (EnhancementWaitTimeCompleteRequestProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasIsSpeedup {
  return result.hasIsSpeedup;
}
- (BOOL) isSpeedup {
  return result.isSpeedup;
}
- (EnhancementWaitTimeCompleteRequestProto_Builder*) setIsSpeedup:(BOOL) value {
  result.hasIsSpeedup = YES;
  result.isSpeedup = value;
  return self;
}
- (EnhancementWaitTimeCompleteRequestProto_Builder*) clearIsSpeedup {
  result.hasIsSpeedup = NO;
  result.isSpeedup = NO;
  return self;
}
- (BOOL) hasGemsForSpeedup {
  return result.hasGemsForSpeedup;
}
- (int32_t) gemsForSpeedup {
  return result.gemsForSpeedup;
}
- (EnhancementWaitTimeCompleteRequestProto_Builder*) setGemsForSpeedup:(int32_t) value {
  result.hasGemsForSpeedup = YES;
  result.gemsForSpeedup = value;
  return self;
}
- (EnhancementWaitTimeCompleteRequestProto_Builder*) clearGemsForSpeedup {
  result.hasGemsForSpeedup = NO;
  result.gemsForSpeedup = 0;
  return self;
}
- (BOOL) hasUmcep {
  return result.hasUmcep;
}
- (UserMonsterCurrentExpProto*) umcep {
  return result.umcep;
}
- (EnhancementWaitTimeCompleteRequestProto_Builder*) setUmcep:(UserMonsterCurrentExpProto*) value {
  result.hasUmcep = YES;
  result.umcep = value;
  return self;
}
- (EnhancementWaitTimeCompleteRequestProto_Builder*) setUmcepBuilder:(UserMonsterCurrentExpProto_Builder*) builderForValue {
  return [self setUmcep:[builderForValue build]];
}
- (EnhancementWaitTimeCompleteRequestProto_Builder*) mergeUmcep:(UserMonsterCurrentExpProto*) value {
  if (result.hasUmcep &&
      result.umcep != [UserMonsterCurrentExpProto defaultInstance]) {
    result.umcep =
      [[[UserMonsterCurrentExpProto builderWithPrototype:result.umcep] mergeFrom:value] buildPartial];
  } else {
    result.umcep = value;
  }
  result.hasUmcep = YES;
  return self;
}
- (EnhancementWaitTimeCompleteRequestProto_Builder*) clearUmcep {
  result.hasUmcep = NO;
  result.umcep = [UserMonsterCurrentExpProto defaultInstance];
  return self;
}
- (NSArray*) userMonsterIdsList {
  if (result.mutableUserMonsterIdsList == nil) {
    return [NSArray array];
  }
  return result.mutableUserMonsterIdsList;
}
- (int64_t) userMonsterIdsAtIndex:(int32_t) index {
  return [result userMonsterIdsAtIndex:index];
}
- (EnhancementWaitTimeCompleteRequestProto_Builder*) replaceUserMonsterIdsAtIndex:(int32_t) index with:(int64_t) value {
  [result.mutableUserMonsterIdsList replaceObjectAtIndex:index withObject:[NSNumber numberWithLongLong:value]];
  return self;
}
- (EnhancementWaitTimeCompleteRequestProto_Builder*) addUserMonsterIds:(int64_t) value {
  if (result.mutableUserMonsterIdsList == nil) {
    result.mutableUserMonsterIdsList = [NSMutableArray array];
  }
  [result.mutableUserMonsterIdsList addObject:[NSNumber numberWithLongLong:value]];
  return self;
}
- (EnhancementWaitTimeCompleteRequestProto_Builder*) addAllUserMonsterIds:(NSArray*) values {
  if (result.mutableUserMonsterIdsList == nil) {
    result.mutableUserMonsterIdsList = [NSMutableArray array];
  }
  [result.mutableUserMonsterIdsList addObjectsFromArray:values];
  return self;
}
- (EnhancementWaitTimeCompleteRequestProto_Builder*) clearUserMonsterIdsList {
  result.mutableUserMonsterIdsList = nil;
  return self;
}
@end

@interface EnhancementWaitTimeCompleteResponseProto ()
@property (retain) MinimumUserProto* sender;
@property EnhancementWaitTimeCompleteResponseProto_EnhancementWaitTimeCompleteStatus status;
@end

@implementation EnhancementWaitTimeCompleteResponseProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value {
  hasSender_ = !!value;
}
@synthesize sender;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value {
  hasStatus_ = !!value;
}
@synthesize status;
- (void) dealloc {
  self.sender = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.status = EnhancementWaitTimeCompleteResponseProto_EnhancementWaitTimeCompleteStatusSuccess;
  }
  return self;
}
static EnhancementWaitTimeCompleteResponseProto* defaultEnhancementWaitTimeCompleteResponseProtoInstance = nil;
+ (void) initialize {
  if (self == [EnhancementWaitTimeCompleteResponseProto class]) {
    defaultEnhancementWaitTimeCompleteResponseProtoInstance = [[EnhancementWaitTimeCompleteResponseProto alloc] init];
  }
}
+ (EnhancementWaitTimeCompleteResponseProto*) defaultInstance {
  return defaultEnhancementWaitTimeCompleteResponseProtoInstance;
}
- (EnhancementWaitTimeCompleteResponseProto*) defaultInstance {
  return defaultEnhancementWaitTimeCompleteResponseProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasStatus) {
    [output writeEnum:2 value:self.status];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSender) {
    size += computeMessageSize(1, self.sender);
  }
  if (self.hasStatus) {
    size += computeEnumSize(2, self.status);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (EnhancementWaitTimeCompleteResponseProto*) parseFromData:(NSData*) data {
  return (EnhancementWaitTimeCompleteResponseProto*)[[[EnhancementWaitTimeCompleteResponseProto builder] mergeFromData:data] build];
}
+ (EnhancementWaitTimeCompleteResponseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (EnhancementWaitTimeCompleteResponseProto*)[[[EnhancementWaitTimeCompleteResponseProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (EnhancementWaitTimeCompleteResponseProto*) parseFromInputStream:(NSInputStream*) input {
  return (EnhancementWaitTimeCompleteResponseProto*)[[[EnhancementWaitTimeCompleteResponseProto builder] mergeFromInputStream:input] build];
}
+ (EnhancementWaitTimeCompleteResponseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (EnhancementWaitTimeCompleteResponseProto*)[[[EnhancementWaitTimeCompleteResponseProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (EnhancementWaitTimeCompleteResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (EnhancementWaitTimeCompleteResponseProto*)[[[EnhancementWaitTimeCompleteResponseProto builder] mergeFromCodedInputStream:input] build];
}
+ (EnhancementWaitTimeCompleteResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (EnhancementWaitTimeCompleteResponseProto*)[[[EnhancementWaitTimeCompleteResponseProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (EnhancementWaitTimeCompleteResponseProto_Builder*) builder {
  return [[[EnhancementWaitTimeCompleteResponseProto_Builder alloc] init] autorelease];
}
+ (EnhancementWaitTimeCompleteResponseProto_Builder*) builderWithPrototype:(EnhancementWaitTimeCompleteResponseProto*) prototype {
  return [[EnhancementWaitTimeCompleteResponseProto builder] mergeFrom:prototype];
}
- (EnhancementWaitTimeCompleteResponseProto_Builder*) builder {
  return [EnhancementWaitTimeCompleteResponseProto builder];
}
@end

BOOL EnhancementWaitTimeCompleteResponseProto_EnhancementWaitTimeCompleteStatusIsValidValue(EnhancementWaitTimeCompleteResponseProto_EnhancementWaitTimeCompleteStatus value) {
  switch (value) {
    case EnhancementWaitTimeCompleteResponseProto_EnhancementWaitTimeCompleteStatusSuccess:
    case EnhancementWaitTimeCompleteResponseProto_EnhancementWaitTimeCompleteStatusFailHealingNotComplete:
    case EnhancementWaitTimeCompleteResponseProto_EnhancementWaitTimeCompleteStatusFailInsufficientFunds:
    case EnhancementWaitTimeCompleteResponseProto_EnhancementWaitTimeCompleteStatusFailOther:
      return YES;
    default:
      return NO;
  }
}
@interface EnhancementWaitTimeCompleteResponseProto_Builder()
@property (retain) EnhancementWaitTimeCompleteResponseProto* result;
@end

@implementation EnhancementWaitTimeCompleteResponseProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[EnhancementWaitTimeCompleteResponseProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (EnhancementWaitTimeCompleteResponseProto_Builder*) clear {
  self.result = [[[EnhancementWaitTimeCompleteResponseProto alloc] init] autorelease];
  return self;
}
- (EnhancementWaitTimeCompleteResponseProto_Builder*) clone {
  return [EnhancementWaitTimeCompleteResponseProto builderWithPrototype:result];
}
- (EnhancementWaitTimeCompleteResponseProto*) defaultInstance {
  return [EnhancementWaitTimeCompleteResponseProto defaultInstance];
}
- (EnhancementWaitTimeCompleteResponseProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (EnhancementWaitTimeCompleteResponseProto*) buildPartial {
  EnhancementWaitTimeCompleteResponseProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (EnhancementWaitTimeCompleteResponseProto_Builder*) mergeFrom:(EnhancementWaitTimeCompleteResponseProto*) other {
  if (other == [EnhancementWaitTimeCompleteResponseProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (EnhancementWaitTimeCompleteResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (EnhancementWaitTimeCompleteResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        int32_t value = [input readEnum];
        if (EnhancementWaitTimeCompleteResponseProto_EnhancementWaitTimeCompleteStatusIsValidValue(value)) {
          [self setStatus:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (EnhancementWaitTimeCompleteResponseProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (EnhancementWaitTimeCompleteResponseProto_Builder*) setSenderBuilder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (EnhancementWaitTimeCompleteResponseProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (EnhancementWaitTimeCompleteResponseProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (EnhancementWaitTimeCompleteResponseProto_EnhancementWaitTimeCompleteStatus) status {
  return result.status;
}
- (EnhancementWaitTimeCompleteResponseProto_Builder*) setStatus:(EnhancementWaitTimeCompleteResponseProto_EnhancementWaitTimeCompleteStatus) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (EnhancementWaitTimeCompleteResponseProto_Builder*) clearStatus {
  result.hasStatus = NO;
  result.status = EnhancementWaitTimeCompleteResponseProto_EnhancementWaitTimeCompleteStatusSuccess;
  return self;
}
@end

@interface UpdateMonsterHealthRequestProto ()
@property (retain) MinimumUserProto* sender;
@property (retain) NSMutableArray* mutableUmchpList;
@property int64_t clientTime;
@property int64_t userTaskId;
@property BOOL isUpdateTaskStageForUser;
@property int32_t nuTaskStageId;
@end

@implementation UpdateMonsterHealthRequestProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value {
  hasSender_ = !!value;
}
@synthesize sender;
@synthesize mutableUmchpList;
- (BOOL) hasClientTime {
  return !!hasClientTime_;
}
- (void) setHasClientTime:(BOOL) value {
  hasClientTime_ = !!value;
}
@synthesize clientTime;
- (BOOL) hasUserTaskId {
  return !!hasUserTaskId_;
}
- (void) setHasUserTaskId:(BOOL) value {
  hasUserTaskId_ = !!value;
}
@synthesize userTaskId;
- (BOOL) hasIsUpdateTaskStageForUser {
  return !!hasIsUpdateTaskStageForUser_;
}
- (void) setHasIsUpdateTaskStageForUser:(BOOL) value {
  hasIsUpdateTaskStageForUser_ = !!value;
}
- (BOOL) isUpdateTaskStageForUser {
  return !!isUpdateTaskStageForUser_;
}
- (void) setIsUpdateTaskStageForUser:(BOOL) value {
  isUpdateTaskStageForUser_ = !!value;
}
- (BOOL) hasNuTaskStageId {
  return !!hasNuTaskStageId_;
}
- (void) setHasNuTaskStageId:(BOOL) value {
  hasNuTaskStageId_ = !!value;
}
@synthesize nuTaskStageId;
- (void) dealloc {
  self.sender = nil;
  self.mutableUmchpList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.clientTime = 0L;
    self.userTaskId = 0L;
    self.isUpdateTaskStageForUser = NO;
    self.nuTaskStageId = 0;
  }
  return self;
}
static UpdateMonsterHealthRequestProto* defaultUpdateMonsterHealthRequestProtoInstance = nil;
+ (void) initialize {
  if (self == [UpdateMonsterHealthRequestProto class]) {
    defaultUpdateMonsterHealthRequestProtoInstance = [[UpdateMonsterHealthRequestProto alloc] init];
  }
}
+ (UpdateMonsterHealthRequestProto*) defaultInstance {
  return defaultUpdateMonsterHealthRequestProtoInstance;
}
- (UpdateMonsterHealthRequestProto*) defaultInstance {
  return defaultUpdateMonsterHealthRequestProtoInstance;
}
- (NSArray*) umchpList {
  return mutableUmchpList;
}
- (UserMonsterCurrentHealthProto*) umchpAtIndex:(int32_t) index {
  id value = [mutableUmchpList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  for (UserMonsterCurrentHealthProto* element in self.umchpList) {
    [output writeMessage:2 value:element];
  }
  if (self.hasClientTime) {
    [output writeInt64:3 value:self.clientTime];
  }
  if (self.hasUserTaskId) {
    [output writeInt64:4 value:self.userTaskId];
  }
  if (self.hasIsUpdateTaskStageForUser) {
    [output writeBool:5 value:self.isUpdateTaskStageForUser];
  }
  if (self.hasNuTaskStageId) {
    [output writeInt32:6 value:self.nuTaskStageId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSender) {
    size += computeMessageSize(1, self.sender);
  }
  for (UserMonsterCurrentHealthProto* element in self.umchpList) {
    size += computeMessageSize(2, element);
  }
  if (self.hasClientTime) {
    size += computeInt64Size(3, self.clientTime);
  }
  if (self.hasUserTaskId) {
    size += computeInt64Size(4, self.userTaskId);
  }
  if (self.hasIsUpdateTaskStageForUser) {
    size += computeBoolSize(5, self.isUpdateTaskStageForUser);
  }
  if (self.hasNuTaskStageId) {
    size += computeInt32Size(6, self.nuTaskStageId);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (UpdateMonsterHealthRequestProto*) parseFromData:(NSData*) data {
  return (UpdateMonsterHealthRequestProto*)[[[UpdateMonsterHealthRequestProto builder] mergeFromData:data] build];
}
+ (UpdateMonsterHealthRequestProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UpdateMonsterHealthRequestProto*)[[[UpdateMonsterHealthRequestProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (UpdateMonsterHealthRequestProto*) parseFromInputStream:(NSInputStream*) input {
  return (UpdateMonsterHealthRequestProto*)[[[UpdateMonsterHealthRequestProto builder] mergeFromInputStream:input] build];
}
+ (UpdateMonsterHealthRequestProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UpdateMonsterHealthRequestProto*)[[[UpdateMonsterHealthRequestProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (UpdateMonsterHealthRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (UpdateMonsterHealthRequestProto*)[[[UpdateMonsterHealthRequestProto builder] mergeFromCodedInputStream:input] build];
}
+ (UpdateMonsterHealthRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UpdateMonsterHealthRequestProto*)[[[UpdateMonsterHealthRequestProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (UpdateMonsterHealthRequestProto_Builder*) builder {
  return [[[UpdateMonsterHealthRequestProto_Builder alloc] init] autorelease];
}
+ (UpdateMonsterHealthRequestProto_Builder*) builderWithPrototype:(UpdateMonsterHealthRequestProto*) prototype {
  return [[UpdateMonsterHealthRequestProto builder] mergeFrom:prototype];
}
- (UpdateMonsterHealthRequestProto_Builder*) builder {
  return [UpdateMonsterHealthRequestProto builder];
}
@end

@interface UpdateMonsterHealthRequestProto_Builder()
@property (retain) UpdateMonsterHealthRequestProto* result;
@end

@implementation UpdateMonsterHealthRequestProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[UpdateMonsterHealthRequestProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (UpdateMonsterHealthRequestProto_Builder*) clear {
  self.result = [[[UpdateMonsterHealthRequestProto alloc] init] autorelease];
  return self;
}
- (UpdateMonsterHealthRequestProto_Builder*) clone {
  return [UpdateMonsterHealthRequestProto builderWithPrototype:result];
}
- (UpdateMonsterHealthRequestProto*) defaultInstance {
  return [UpdateMonsterHealthRequestProto defaultInstance];
}
- (UpdateMonsterHealthRequestProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (UpdateMonsterHealthRequestProto*) buildPartial {
  UpdateMonsterHealthRequestProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (UpdateMonsterHealthRequestProto_Builder*) mergeFrom:(UpdateMonsterHealthRequestProto*) other {
  if (other == [UpdateMonsterHealthRequestProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.mutableUmchpList.count > 0) {
    if (result.mutableUmchpList == nil) {
      result.mutableUmchpList = [NSMutableArray array];
    }
    [result.mutableUmchpList addObjectsFromArray:other.mutableUmchpList];
  }
  if (other.hasClientTime) {
    [self setClientTime:other.clientTime];
  }
  if (other.hasUserTaskId) {
    [self setUserTaskId:other.userTaskId];
  }
  if (other.hasIsUpdateTaskStageForUser) {
    [self setIsUpdateTaskStageForUser:other.isUpdateTaskStageForUser];
  }
  if (other.hasNuTaskStageId) {
    [self setNuTaskStageId:other.nuTaskStageId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (UpdateMonsterHealthRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (UpdateMonsterHealthRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        UserMonsterCurrentHealthProto_Builder* subBuilder = [UserMonsterCurrentHealthProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addUmchp:[subBuilder buildPartial]];
        break;
      }
      case 24: {
        [self setClientTime:[input readInt64]];
        break;
      }
      case 32: {
        [self setUserTaskId:[input readInt64]];
        break;
      }
      case 40: {
        [self setIsUpdateTaskStageForUser:[input readBool]];
        break;
      }
      case 48: {
        [self setNuTaskStageId:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (UpdateMonsterHealthRequestProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (UpdateMonsterHealthRequestProto_Builder*) setSenderBuilder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (UpdateMonsterHealthRequestProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (UpdateMonsterHealthRequestProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (NSArray*) umchpList {
  if (result.mutableUmchpList == nil) { return [NSArray array]; }
  return result.mutableUmchpList;
}
- (UserMonsterCurrentHealthProto*) umchpAtIndex:(int32_t) index {
  return [result umchpAtIndex:index];
}
- (UpdateMonsterHealthRequestProto_Builder*) replaceUmchpAtIndex:(int32_t) index with:(UserMonsterCurrentHealthProto*) value {
  [result.mutableUmchpList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (UpdateMonsterHealthRequestProto_Builder*) addAllUmchp:(NSArray*) values {
  if (result.mutableUmchpList == nil) {
    result.mutableUmchpList = [NSMutableArray array];
  }
  [result.mutableUmchpList addObjectsFromArray:values];
  return self;
}
- (UpdateMonsterHealthRequestProto_Builder*) clearUmchpList {
  result.mutableUmchpList = nil;
  return self;
}
- (UpdateMonsterHealthRequestProto_Builder*) addUmchp:(UserMonsterCurrentHealthProto*) value {
  if (result.mutableUmchpList == nil) {
    result.mutableUmchpList = [NSMutableArray array];
  }
  [result.mutableUmchpList addObject:value];
  return self;
}
- (BOOL) hasClientTime {
  return result.hasClientTime;
}
- (int64_t) clientTime {
  return result.clientTime;
}
- (UpdateMonsterHealthRequestProto_Builder*) setClientTime:(int64_t) value {
  result.hasClientTime = YES;
  result.clientTime = value;
  return self;
}
- (UpdateMonsterHealthRequestProto_Builder*) clearClientTime {
  result.hasClientTime = NO;
  result.clientTime = 0L;
  return self;
}
- (BOOL) hasUserTaskId {
  return result.hasUserTaskId;
}
- (int64_t) userTaskId {
  return result.userTaskId;
}
- (UpdateMonsterHealthRequestProto_Builder*) setUserTaskId:(int64_t) value {
  result.hasUserTaskId = YES;
  result.userTaskId = value;
  return self;
}
- (UpdateMonsterHealthRequestProto_Builder*) clearUserTaskId {
  result.hasUserTaskId = NO;
  result.userTaskId = 0L;
  return self;
}
- (BOOL) hasIsUpdateTaskStageForUser {
  return result.hasIsUpdateTaskStageForUser;
}
- (BOOL) isUpdateTaskStageForUser {
  return result.isUpdateTaskStageForUser;
}
- (UpdateMonsterHealthRequestProto_Builder*) setIsUpdateTaskStageForUser:(BOOL) value {
  result.hasIsUpdateTaskStageForUser = YES;
  result.isUpdateTaskStageForUser = value;
  return self;
}
- (UpdateMonsterHealthRequestProto_Builder*) clearIsUpdateTaskStageForUser {
  result.hasIsUpdateTaskStageForUser = NO;
  result.isUpdateTaskStageForUser = NO;
  return self;
}
- (BOOL) hasNuTaskStageId {
  return result.hasNuTaskStageId;
}
- (int32_t) nuTaskStageId {
  return result.nuTaskStageId;
}
- (UpdateMonsterHealthRequestProto_Builder*) setNuTaskStageId:(int32_t) value {
  result.hasNuTaskStageId = YES;
  result.nuTaskStageId = value;
  return self;
}
- (UpdateMonsterHealthRequestProto_Builder*) clearNuTaskStageId {
  result.hasNuTaskStageId = NO;
  result.nuTaskStageId = 0;
  return self;
}
@end

@interface UpdateMonsterHealthResponseProto ()
@property (retain) MinimumUserProto* sender;
@property UpdateMonsterHealthResponseProto_UpdateMonsterHealthStatus status;
@end

@implementation UpdateMonsterHealthResponseProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value {
  hasSender_ = !!value;
}
@synthesize sender;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value {
  hasStatus_ = !!value;
}
@synthesize status;
- (void) dealloc {
  self.sender = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.status = UpdateMonsterHealthResponseProto_UpdateMonsterHealthStatusSuccess;
  }
  return self;
}
static UpdateMonsterHealthResponseProto* defaultUpdateMonsterHealthResponseProtoInstance = nil;
+ (void) initialize {
  if (self == [UpdateMonsterHealthResponseProto class]) {
    defaultUpdateMonsterHealthResponseProtoInstance = [[UpdateMonsterHealthResponseProto alloc] init];
  }
}
+ (UpdateMonsterHealthResponseProto*) defaultInstance {
  return defaultUpdateMonsterHealthResponseProtoInstance;
}
- (UpdateMonsterHealthResponseProto*) defaultInstance {
  return defaultUpdateMonsterHealthResponseProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasStatus) {
    [output writeEnum:2 value:self.status];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSender) {
    size += computeMessageSize(1, self.sender);
  }
  if (self.hasStatus) {
    size += computeEnumSize(2, self.status);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (UpdateMonsterHealthResponseProto*) parseFromData:(NSData*) data {
  return (UpdateMonsterHealthResponseProto*)[[[UpdateMonsterHealthResponseProto builder] mergeFromData:data] build];
}
+ (UpdateMonsterHealthResponseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UpdateMonsterHealthResponseProto*)[[[UpdateMonsterHealthResponseProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (UpdateMonsterHealthResponseProto*) parseFromInputStream:(NSInputStream*) input {
  return (UpdateMonsterHealthResponseProto*)[[[UpdateMonsterHealthResponseProto builder] mergeFromInputStream:input] build];
}
+ (UpdateMonsterHealthResponseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UpdateMonsterHealthResponseProto*)[[[UpdateMonsterHealthResponseProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (UpdateMonsterHealthResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (UpdateMonsterHealthResponseProto*)[[[UpdateMonsterHealthResponseProto builder] mergeFromCodedInputStream:input] build];
}
+ (UpdateMonsterHealthResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UpdateMonsterHealthResponseProto*)[[[UpdateMonsterHealthResponseProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (UpdateMonsterHealthResponseProto_Builder*) builder {
  return [[[UpdateMonsterHealthResponseProto_Builder alloc] init] autorelease];
}
+ (UpdateMonsterHealthResponseProto_Builder*) builderWithPrototype:(UpdateMonsterHealthResponseProto*) prototype {
  return [[UpdateMonsterHealthResponseProto builder] mergeFrom:prototype];
}
- (UpdateMonsterHealthResponseProto_Builder*) builder {
  return [UpdateMonsterHealthResponseProto builder];
}
@end

BOOL UpdateMonsterHealthResponseProto_UpdateMonsterHealthStatusIsValidValue(UpdateMonsterHealthResponseProto_UpdateMonsterHealthStatus value) {
  switch (value) {
    case UpdateMonsterHealthResponseProto_UpdateMonsterHealthStatusSuccess:
    case UpdateMonsterHealthResponseProto_UpdateMonsterHealthStatusFailInsufficientFunds:
    case UpdateMonsterHealthResponseProto_UpdateMonsterHealthStatusFailOther:
      return YES;
    default:
      return NO;
  }
}
@interface UpdateMonsterHealthResponseProto_Builder()
@property (retain) UpdateMonsterHealthResponseProto* result;
@end

@implementation UpdateMonsterHealthResponseProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[UpdateMonsterHealthResponseProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (UpdateMonsterHealthResponseProto_Builder*) clear {
  self.result = [[[UpdateMonsterHealthResponseProto alloc] init] autorelease];
  return self;
}
- (UpdateMonsterHealthResponseProto_Builder*) clone {
  return [UpdateMonsterHealthResponseProto builderWithPrototype:result];
}
- (UpdateMonsterHealthResponseProto*) defaultInstance {
  return [UpdateMonsterHealthResponseProto defaultInstance];
}
- (UpdateMonsterHealthResponseProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (UpdateMonsterHealthResponseProto*) buildPartial {
  UpdateMonsterHealthResponseProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (UpdateMonsterHealthResponseProto_Builder*) mergeFrom:(UpdateMonsterHealthResponseProto*) other {
  if (other == [UpdateMonsterHealthResponseProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (UpdateMonsterHealthResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (UpdateMonsterHealthResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        int32_t value = [input readEnum];
        if (UpdateMonsterHealthResponseProto_UpdateMonsterHealthStatusIsValidValue(value)) {
          [self setStatus:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (UpdateMonsterHealthResponseProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (UpdateMonsterHealthResponseProto_Builder*) setSenderBuilder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (UpdateMonsterHealthResponseProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (UpdateMonsterHealthResponseProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (UpdateMonsterHealthResponseProto_UpdateMonsterHealthStatus) status {
  return result.status;
}
- (UpdateMonsterHealthResponseProto_Builder*) setStatus:(UpdateMonsterHealthResponseProto_UpdateMonsterHealthStatus) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (UpdateMonsterHealthResponseProto_Builder*) clearStatus {
  result.hasStatus = NO;
  result.status = UpdateMonsterHealthResponseProto_UpdateMonsterHealthStatusSuccess;
  return self;
}
@end

@interface HealMonsterRequestProto ()
@property (retain) MinimumUserProtoWithMaxResources* sender;
@property (retain) NSMutableArray* mutableUmhDeleteList;
@property (retain) NSMutableArray* mutableUmhUpdateList;
@property (retain) NSMutableArray* mutableUmhNewList;
@property int32_t cashChange;
@property int32_t gemCostForHealing;
@property BOOL isSpeedup;
@property int32_t gemsForSpeedup;
@property (retain) NSMutableArray* mutableUmchpList;
@end

@implementation HealMonsterRequestProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value {
  hasSender_ = !!value;
}
@synthesize sender;
@synthesize mutableUmhDeleteList;
@synthesize mutableUmhUpdateList;
@synthesize mutableUmhNewList;
- (BOOL) hasCashChange {
  return !!hasCashChange_;
}
- (void) setHasCashChange:(BOOL) value {
  hasCashChange_ = !!value;
}
@synthesize cashChange;
- (BOOL) hasGemCostForHealing {
  return !!hasGemCostForHealing_;
}
- (void) setHasGemCostForHealing:(BOOL) value {
  hasGemCostForHealing_ = !!value;
}
@synthesize gemCostForHealing;
- (BOOL) hasIsSpeedup {
  return !!hasIsSpeedup_;
}
- (void) setHasIsSpeedup:(BOOL) value {
  hasIsSpeedup_ = !!value;
}
- (BOOL) isSpeedup {
  return !!isSpeedup_;
}
- (void) setIsSpeedup:(BOOL) value {
  isSpeedup_ = !!value;
}
- (BOOL) hasGemsForSpeedup {
  return !!hasGemsForSpeedup_;
}
- (void) setHasGemsForSpeedup:(BOOL) value {
  hasGemsForSpeedup_ = !!value;
}
@synthesize gemsForSpeedup;
@synthesize mutableUmchpList;
- (void) dealloc {
  self.sender = nil;
  self.mutableUmhDeleteList = nil;
  self.mutableUmhUpdateList = nil;
  self.mutableUmhNewList = nil;
  self.mutableUmchpList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProtoWithMaxResources defaultInstance];
    self.cashChange = 0;
    self.gemCostForHealing = 0;
    self.isSpeedup = NO;
    self.gemsForSpeedup = 0;
  }
  return self;
}
static HealMonsterRequestProto* defaultHealMonsterRequestProtoInstance = nil;
+ (void) initialize {
  if (self == [HealMonsterRequestProto class]) {
    defaultHealMonsterRequestProtoInstance = [[HealMonsterRequestProto alloc] init];
  }
}
+ (HealMonsterRequestProto*) defaultInstance {
  return defaultHealMonsterRequestProtoInstance;
}
- (HealMonsterRequestProto*) defaultInstance {
  return defaultHealMonsterRequestProtoInstance;
}
- (NSArray*) umhDeleteList {
  return mutableUmhDeleteList;
}
- (UserMonsterHealingProto*) umhDeleteAtIndex:(int32_t) index {
  id value = [mutableUmhDeleteList objectAtIndex:index];
  return value;
}
- (NSArray*) umhUpdateList {
  return mutableUmhUpdateList;
}
- (UserMonsterHealingProto*) umhUpdateAtIndex:(int32_t) index {
  id value = [mutableUmhUpdateList objectAtIndex:index];
  return value;
}
- (NSArray*) umhNewList {
  return mutableUmhNewList;
}
- (UserMonsterHealingProto*) umhNewAtIndex:(int32_t) index {
  id value = [mutableUmhNewList objectAtIndex:index];
  return value;
}
- (NSArray*) umchpList {
  return mutableUmchpList;
}
- (UserMonsterCurrentHealthProto*) umchpAtIndex:(int32_t) index {
  id value = [mutableUmchpList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  for (UserMonsterHealingProto* element in self.umhDeleteList) {
    [output writeMessage:2 value:element];
  }
  for (UserMonsterHealingProto* element in self.umhUpdateList) {
    [output writeMessage:3 value:element];
  }
  for (UserMonsterHealingProto* element in self.umhNewList) {
    [output writeMessage:4 value:element];
  }
  if (self.hasCashChange) {
    [output writeSInt32:5 value:self.cashChange];
  }
  if (self.hasGemCostForHealing) {
    [output writeInt32:6 value:self.gemCostForHealing];
  }
  if (self.hasIsSpeedup) {
    [output writeBool:7 value:self.isSpeedup];
  }
  if (self.hasGemsForSpeedup) {
    [output writeInt32:8 value:self.gemsForSpeedup];
  }
  for (UserMonsterCurrentHealthProto* element in self.umchpList) {
    [output writeMessage:9 value:element];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSender) {
    size += computeMessageSize(1, self.sender);
  }
  for (UserMonsterHealingProto* element in self.umhDeleteList) {
    size += computeMessageSize(2, element);
  }
  for (UserMonsterHealingProto* element in self.umhUpdateList) {
    size += computeMessageSize(3, element);
  }
  for (UserMonsterHealingProto* element in self.umhNewList) {
    size += computeMessageSize(4, element);
  }
  if (self.hasCashChange) {
    size += computeSInt32Size(5, self.cashChange);
  }
  if (self.hasGemCostForHealing) {
    size += computeInt32Size(6, self.gemCostForHealing);
  }
  if (self.hasIsSpeedup) {
    size += computeBoolSize(7, self.isSpeedup);
  }
  if (self.hasGemsForSpeedup) {
    size += computeInt32Size(8, self.gemsForSpeedup);
  }
  for (UserMonsterCurrentHealthProto* element in self.umchpList) {
    size += computeMessageSize(9, element);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (HealMonsterRequestProto*) parseFromData:(NSData*) data {
  return (HealMonsterRequestProto*)[[[HealMonsterRequestProto builder] mergeFromData:data] build];
}
+ (HealMonsterRequestProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (HealMonsterRequestProto*)[[[HealMonsterRequestProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (HealMonsterRequestProto*) parseFromInputStream:(NSInputStream*) input {
  return (HealMonsterRequestProto*)[[[HealMonsterRequestProto builder] mergeFromInputStream:input] build];
}
+ (HealMonsterRequestProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (HealMonsterRequestProto*)[[[HealMonsterRequestProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (HealMonsterRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (HealMonsterRequestProto*)[[[HealMonsterRequestProto builder] mergeFromCodedInputStream:input] build];
}
+ (HealMonsterRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (HealMonsterRequestProto*)[[[HealMonsterRequestProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (HealMonsterRequestProto_Builder*) builder {
  return [[[HealMonsterRequestProto_Builder alloc] init] autorelease];
}
+ (HealMonsterRequestProto_Builder*) builderWithPrototype:(HealMonsterRequestProto*) prototype {
  return [[HealMonsterRequestProto builder] mergeFrom:prototype];
}
- (HealMonsterRequestProto_Builder*) builder {
  return [HealMonsterRequestProto builder];
}
@end

@interface HealMonsterRequestProto_Builder()
@property (retain) HealMonsterRequestProto* result;
@end

@implementation HealMonsterRequestProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[HealMonsterRequestProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (HealMonsterRequestProto_Builder*) clear {
  self.result = [[[HealMonsterRequestProto alloc] init] autorelease];
  return self;
}
- (HealMonsterRequestProto_Builder*) clone {
  return [HealMonsterRequestProto builderWithPrototype:result];
}
- (HealMonsterRequestProto*) defaultInstance {
  return [HealMonsterRequestProto defaultInstance];
}
- (HealMonsterRequestProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (HealMonsterRequestProto*) buildPartial {
  HealMonsterRequestProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (HealMonsterRequestProto_Builder*) mergeFrom:(HealMonsterRequestProto*) other {
  if (other == [HealMonsterRequestProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.mutableUmhDeleteList.count > 0) {
    if (result.mutableUmhDeleteList == nil) {
      result.mutableUmhDeleteList = [NSMutableArray array];
    }
    [result.mutableUmhDeleteList addObjectsFromArray:other.mutableUmhDeleteList];
  }
  if (other.mutableUmhUpdateList.count > 0) {
    if (result.mutableUmhUpdateList == nil) {
      result.mutableUmhUpdateList = [NSMutableArray array];
    }
    [result.mutableUmhUpdateList addObjectsFromArray:other.mutableUmhUpdateList];
  }
  if (other.mutableUmhNewList.count > 0) {
    if (result.mutableUmhNewList == nil) {
      result.mutableUmhNewList = [NSMutableArray array];
    }
    [result.mutableUmhNewList addObjectsFromArray:other.mutableUmhNewList];
  }
  if (other.hasCashChange) {
    [self setCashChange:other.cashChange];
  }
  if (other.hasGemCostForHealing) {
    [self setGemCostForHealing:other.gemCostForHealing];
  }
  if (other.hasIsSpeedup) {
    [self setIsSpeedup:other.isSpeedup];
  }
  if (other.hasGemsForSpeedup) {
    [self setGemsForSpeedup:other.gemsForSpeedup];
  }
  if (other.mutableUmchpList.count > 0) {
    if (result.mutableUmchpList == nil) {
      result.mutableUmchpList = [NSMutableArray array];
    }
    [result.mutableUmchpList addObjectsFromArray:other.mutableUmchpList];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (HealMonsterRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (HealMonsterRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProtoWithMaxResources_Builder* subBuilder = [MinimumUserProtoWithMaxResources builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        UserMonsterHealingProto_Builder* subBuilder = [UserMonsterHealingProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addUmhDelete:[subBuilder buildPartial]];
        break;
      }
      case 26: {
        UserMonsterHealingProto_Builder* subBuilder = [UserMonsterHealingProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addUmhUpdate:[subBuilder buildPartial]];
        break;
      }
      case 34: {
        UserMonsterHealingProto_Builder* subBuilder = [UserMonsterHealingProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addUmhNew:[subBuilder buildPartial]];
        break;
      }
      case 40: {
        [self setCashChange:[input readSInt32]];
        break;
      }
      case 48: {
        [self setGemCostForHealing:[input readInt32]];
        break;
      }
      case 56: {
        [self setIsSpeedup:[input readBool]];
        break;
      }
      case 64: {
        [self setGemsForSpeedup:[input readInt32]];
        break;
      }
      case 74: {
        UserMonsterCurrentHealthProto_Builder* subBuilder = [UserMonsterCurrentHealthProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addUmchp:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProtoWithMaxResources*) sender {
  return result.sender;
}
- (HealMonsterRequestProto_Builder*) setSender:(MinimumUserProtoWithMaxResources*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (HealMonsterRequestProto_Builder*) setSenderBuilder:(MinimumUserProtoWithMaxResources_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (HealMonsterRequestProto_Builder*) mergeSender:(MinimumUserProtoWithMaxResources*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProtoWithMaxResources defaultInstance]) {
    result.sender =
      [[[MinimumUserProtoWithMaxResources builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (HealMonsterRequestProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProtoWithMaxResources defaultInstance];
  return self;
}
- (NSArray*) umhDeleteList {
  if (result.mutableUmhDeleteList == nil) { return [NSArray array]; }
  return result.mutableUmhDeleteList;
}
- (UserMonsterHealingProto*) umhDeleteAtIndex:(int32_t) index {
  return [result umhDeleteAtIndex:index];
}
- (HealMonsterRequestProto_Builder*) replaceUmhDeleteAtIndex:(int32_t) index with:(UserMonsterHealingProto*) value {
  [result.mutableUmhDeleteList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (HealMonsterRequestProto_Builder*) addAllUmhDelete:(NSArray*) values {
  if (result.mutableUmhDeleteList == nil) {
    result.mutableUmhDeleteList = [NSMutableArray array];
  }
  [result.mutableUmhDeleteList addObjectsFromArray:values];
  return self;
}
- (HealMonsterRequestProto_Builder*) clearUmhDeleteList {
  result.mutableUmhDeleteList = nil;
  return self;
}
- (HealMonsterRequestProto_Builder*) addUmhDelete:(UserMonsterHealingProto*) value {
  if (result.mutableUmhDeleteList == nil) {
    result.mutableUmhDeleteList = [NSMutableArray array];
  }
  [result.mutableUmhDeleteList addObject:value];
  return self;
}
- (NSArray*) umhUpdateList {
  if (result.mutableUmhUpdateList == nil) { return [NSArray array]; }
  return result.mutableUmhUpdateList;
}
- (UserMonsterHealingProto*) umhUpdateAtIndex:(int32_t) index {
  return [result umhUpdateAtIndex:index];
}
- (HealMonsterRequestProto_Builder*) replaceUmhUpdateAtIndex:(int32_t) index with:(UserMonsterHealingProto*) value {
  [result.mutableUmhUpdateList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (HealMonsterRequestProto_Builder*) addAllUmhUpdate:(NSArray*) values {
  if (result.mutableUmhUpdateList == nil) {
    result.mutableUmhUpdateList = [NSMutableArray array];
  }
  [result.mutableUmhUpdateList addObjectsFromArray:values];
  return self;
}
- (HealMonsterRequestProto_Builder*) clearUmhUpdateList {
  result.mutableUmhUpdateList = nil;
  return self;
}
- (HealMonsterRequestProto_Builder*) addUmhUpdate:(UserMonsterHealingProto*) value {
  if (result.mutableUmhUpdateList == nil) {
    result.mutableUmhUpdateList = [NSMutableArray array];
  }
  [result.mutableUmhUpdateList addObject:value];
  return self;
}
- (NSArray*) umhNewList {
  if (result.mutableUmhNewList == nil) { return [NSArray array]; }
  return result.mutableUmhNewList;
}
- (UserMonsterHealingProto*) umhNewAtIndex:(int32_t) index {
  return [result umhNewAtIndex:index];
}
- (HealMonsterRequestProto_Builder*) replaceUmhNewAtIndex:(int32_t) index with:(UserMonsterHealingProto*) value {
  [result.mutableUmhNewList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (HealMonsterRequestProto_Builder*) addAllUmhNew:(NSArray*) values {
  if (result.mutableUmhNewList == nil) {
    result.mutableUmhNewList = [NSMutableArray array];
  }
  [result.mutableUmhNewList addObjectsFromArray:values];
  return self;
}
- (HealMonsterRequestProto_Builder*) clearUmhNewList {
  result.mutableUmhNewList = nil;
  return self;
}
- (HealMonsterRequestProto_Builder*) addUmhNew:(UserMonsterHealingProto*) value {
  if (result.mutableUmhNewList == nil) {
    result.mutableUmhNewList = [NSMutableArray array];
  }
  [result.mutableUmhNewList addObject:value];
  return self;
}
- (BOOL) hasCashChange {
  return result.hasCashChange;
}
- (int32_t) cashChange {
  return result.cashChange;
}
- (HealMonsterRequestProto_Builder*) setCashChange:(int32_t) value {
  result.hasCashChange = YES;
  result.cashChange = value;
  return self;
}
- (HealMonsterRequestProto_Builder*) clearCashChange {
  result.hasCashChange = NO;
  result.cashChange = 0;
  return self;
}
- (BOOL) hasGemCostForHealing {
  return result.hasGemCostForHealing;
}
- (int32_t) gemCostForHealing {
  return result.gemCostForHealing;
}
- (HealMonsterRequestProto_Builder*) setGemCostForHealing:(int32_t) value {
  result.hasGemCostForHealing = YES;
  result.gemCostForHealing = value;
  return self;
}
- (HealMonsterRequestProto_Builder*) clearGemCostForHealing {
  result.hasGemCostForHealing = NO;
  result.gemCostForHealing = 0;
  return self;
}
- (BOOL) hasIsSpeedup {
  return result.hasIsSpeedup;
}
- (BOOL) isSpeedup {
  return result.isSpeedup;
}
- (HealMonsterRequestProto_Builder*) setIsSpeedup:(BOOL) value {
  result.hasIsSpeedup = YES;
  result.isSpeedup = value;
  return self;
}
- (HealMonsterRequestProto_Builder*) clearIsSpeedup {
  result.hasIsSpeedup = NO;
  result.isSpeedup = NO;
  return self;
}
- (BOOL) hasGemsForSpeedup {
  return result.hasGemsForSpeedup;
}
- (int32_t) gemsForSpeedup {
  return result.gemsForSpeedup;
}
- (HealMonsterRequestProto_Builder*) setGemsForSpeedup:(int32_t) value {
  result.hasGemsForSpeedup = YES;
  result.gemsForSpeedup = value;
  return self;
}
- (HealMonsterRequestProto_Builder*) clearGemsForSpeedup {
  result.hasGemsForSpeedup = NO;
  result.gemsForSpeedup = 0;
  return self;
}
- (NSArray*) umchpList {
  if (result.mutableUmchpList == nil) { return [NSArray array]; }
  return result.mutableUmchpList;
}
- (UserMonsterCurrentHealthProto*) umchpAtIndex:(int32_t) index {
  return [result umchpAtIndex:index];
}
- (HealMonsterRequestProto_Builder*) replaceUmchpAtIndex:(int32_t) index with:(UserMonsterCurrentHealthProto*) value {
  [result.mutableUmchpList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (HealMonsterRequestProto_Builder*) addAllUmchp:(NSArray*) values {
  if (result.mutableUmchpList == nil) {
    result.mutableUmchpList = [NSMutableArray array];
  }
  [result.mutableUmchpList addObjectsFromArray:values];
  return self;
}
- (HealMonsterRequestProto_Builder*) clearUmchpList {
  result.mutableUmchpList = nil;
  return self;
}
- (HealMonsterRequestProto_Builder*) addUmchp:(UserMonsterCurrentHealthProto*) value {
  if (result.mutableUmchpList == nil) {
    result.mutableUmchpList = [NSMutableArray array];
  }
  [result.mutableUmchpList addObject:value];
  return self;
}
@end

@interface HealMonsterResponseProto ()
@property (retain) MinimumUserProtoWithMaxResources* sender;
@property HealMonsterResponseProto_HealMonsterStatus status;
@end

@implementation HealMonsterResponseProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value {
  hasSender_ = !!value;
}
@synthesize sender;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value {
  hasStatus_ = !!value;
}
@synthesize status;
- (void) dealloc {
  self.sender = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProtoWithMaxResources defaultInstance];
    self.status = HealMonsterResponseProto_HealMonsterStatusSuccess;
  }
  return self;
}
static HealMonsterResponseProto* defaultHealMonsterResponseProtoInstance = nil;
+ (void) initialize {
  if (self == [HealMonsterResponseProto class]) {
    defaultHealMonsterResponseProtoInstance = [[HealMonsterResponseProto alloc] init];
  }
}
+ (HealMonsterResponseProto*) defaultInstance {
  return defaultHealMonsterResponseProtoInstance;
}
- (HealMonsterResponseProto*) defaultInstance {
  return defaultHealMonsterResponseProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasStatus) {
    [output writeEnum:2 value:self.status];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSender) {
    size += computeMessageSize(1, self.sender);
  }
  if (self.hasStatus) {
    size += computeEnumSize(2, self.status);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (HealMonsterResponseProto*) parseFromData:(NSData*) data {
  return (HealMonsterResponseProto*)[[[HealMonsterResponseProto builder] mergeFromData:data] build];
}
+ (HealMonsterResponseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (HealMonsterResponseProto*)[[[HealMonsterResponseProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (HealMonsterResponseProto*) parseFromInputStream:(NSInputStream*) input {
  return (HealMonsterResponseProto*)[[[HealMonsterResponseProto builder] mergeFromInputStream:input] build];
}
+ (HealMonsterResponseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (HealMonsterResponseProto*)[[[HealMonsterResponseProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (HealMonsterResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (HealMonsterResponseProto*)[[[HealMonsterResponseProto builder] mergeFromCodedInputStream:input] build];
}
+ (HealMonsterResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (HealMonsterResponseProto*)[[[HealMonsterResponseProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (HealMonsterResponseProto_Builder*) builder {
  return [[[HealMonsterResponseProto_Builder alloc] init] autorelease];
}
+ (HealMonsterResponseProto_Builder*) builderWithPrototype:(HealMonsterResponseProto*) prototype {
  return [[HealMonsterResponseProto builder] mergeFrom:prototype];
}
- (HealMonsterResponseProto_Builder*) builder {
  return [HealMonsterResponseProto builder];
}
@end

BOOL HealMonsterResponseProto_HealMonsterStatusIsValidValue(HealMonsterResponseProto_HealMonsterStatus value) {
  switch (value) {
    case HealMonsterResponseProto_HealMonsterStatusSuccess:
    case HealMonsterResponseProto_HealMonsterStatusFailInsufficientFunds:
    case HealMonsterResponseProto_HealMonsterStatusFailAllMonstersAlreadyHealing:
    case HealMonsterResponseProto_HealMonsterStatusFailAllMonstersNonexistent:
    case HealMonsterResponseProto_HealMonsterStatusFailOther:
    case HealMonsterResponseProto_HealMonsterStatusFailHealingNotComplete:
      return YES;
    default:
      return NO;
  }
}
@interface HealMonsterResponseProto_Builder()
@property (retain) HealMonsterResponseProto* result;
@end

@implementation HealMonsterResponseProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[HealMonsterResponseProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (HealMonsterResponseProto_Builder*) clear {
  self.result = [[[HealMonsterResponseProto alloc] init] autorelease];
  return self;
}
- (HealMonsterResponseProto_Builder*) clone {
  return [HealMonsterResponseProto builderWithPrototype:result];
}
- (HealMonsterResponseProto*) defaultInstance {
  return [HealMonsterResponseProto defaultInstance];
}
- (HealMonsterResponseProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (HealMonsterResponseProto*) buildPartial {
  HealMonsterResponseProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (HealMonsterResponseProto_Builder*) mergeFrom:(HealMonsterResponseProto*) other {
  if (other == [HealMonsterResponseProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (HealMonsterResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (HealMonsterResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProtoWithMaxResources_Builder* subBuilder = [MinimumUserProtoWithMaxResources builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        int32_t value = [input readEnum];
        if (HealMonsterResponseProto_HealMonsterStatusIsValidValue(value)) {
          [self setStatus:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProtoWithMaxResources*) sender {
  return result.sender;
}
- (HealMonsterResponseProto_Builder*) setSender:(MinimumUserProtoWithMaxResources*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (HealMonsterResponseProto_Builder*) setSenderBuilder:(MinimumUserProtoWithMaxResources_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (HealMonsterResponseProto_Builder*) mergeSender:(MinimumUserProtoWithMaxResources*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProtoWithMaxResources defaultInstance]) {
    result.sender =
      [[[MinimumUserProtoWithMaxResources builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (HealMonsterResponseProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProtoWithMaxResources defaultInstance];
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (HealMonsterResponseProto_HealMonsterStatus) status {
  return result.status;
}
- (HealMonsterResponseProto_Builder*) setStatus:(HealMonsterResponseProto_HealMonsterStatus) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (HealMonsterResponseProto_Builder*) clearStatus {
  result.hasStatus = NO;
  result.status = HealMonsterResponseProto_HealMonsterStatusSuccess;
  return self;
}
@end

@interface AddMonsterToBattleTeamRequestProto ()
@property (retain) MinimumUserProto* sender;
@property int32_t teamSlotNum;
@property int64_t userMonsterId;
@end

@implementation AddMonsterToBattleTeamRequestProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value {
  hasSender_ = !!value;
}
@synthesize sender;
- (BOOL) hasTeamSlotNum {
  return !!hasTeamSlotNum_;
}
- (void) setHasTeamSlotNum:(BOOL) value {
  hasTeamSlotNum_ = !!value;
}
@synthesize teamSlotNum;
- (BOOL) hasUserMonsterId {
  return !!hasUserMonsterId_;
}
- (void) setHasUserMonsterId:(BOOL) value {
  hasUserMonsterId_ = !!value;
}
@synthesize userMonsterId;
- (void) dealloc {
  self.sender = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.teamSlotNum = 0;
    self.userMonsterId = 0L;
  }
  return self;
}
static AddMonsterToBattleTeamRequestProto* defaultAddMonsterToBattleTeamRequestProtoInstance = nil;
+ (void) initialize {
  if (self == [AddMonsterToBattleTeamRequestProto class]) {
    defaultAddMonsterToBattleTeamRequestProtoInstance = [[AddMonsterToBattleTeamRequestProto alloc] init];
  }
}
+ (AddMonsterToBattleTeamRequestProto*) defaultInstance {
  return defaultAddMonsterToBattleTeamRequestProtoInstance;
}
- (AddMonsterToBattleTeamRequestProto*) defaultInstance {
  return defaultAddMonsterToBattleTeamRequestProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasTeamSlotNum) {
    [output writeInt32:2 value:self.teamSlotNum];
  }
  if (self.hasUserMonsterId) {
    [output writeInt64:3 value:self.userMonsterId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSender) {
    size += computeMessageSize(1, self.sender);
  }
  if (self.hasTeamSlotNum) {
    size += computeInt32Size(2, self.teamSlotNum);
  }
  if (self.hasUserMonsterId) {
    size += computeInt64Size(3, self.userMonsterId);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (AddMonsterToBattleTeamRequestProto*) parseFromData:(NSData*) data {
  return (AddMonsterToBattleTeamRequestProto*)[[[AddMonsterToBattleTeamRequestProto builder] mergeFromData:data] build];
}
+ (AddMonsterToBattleTeamRequestProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (AddMonsterToBattleTeamRequestProto*)[[[AddMonsterToBattleTeamRequestProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (AddMonsterToBattleTeamRequestProto*) parseFromInputStream:(NSInputStream*) input {
  return (AddMonsterToBattleTeamRequestProto*)[[[AddMonsterToBattleTeamRequestProto builder] mergeFromInputStream:input] build];
}
+ (AddMonsterToBattleTeamRequestProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (AddMonsterToBattleTeamRequestProto*)[[[AddMonsterToBattleTeamRequestProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (AddMonsterToBattleTeamRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (AddMonsterToBattleTeamRequestProto*)[[[AddMonsterToBattleTeamRequestProto builder] mergeFromCodedInputStream:input] build];
}
+ (AddMonsterToBattleTeamRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (AddMonsterToBattleTeamRequestProto*)[[[AddMonsterToBattleTeamRequestProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (AddMonsterToBattleTeamRequestProto_Builder*) builder {
  return [[[AddMonsterToBattleTeamRequestProto_Builder alloc] init] autorelease];
}
+ (AddMonsterToBattleTeamRequestProto_Builder*) builderWithPrototype:(AddMonsterToBattleTeamRequestProto*) prototype {
  return [[AddMonsterToBattleTeamRequestProto builder] mergeFrom:prototype];
}
- (AddMonsterToBattleTeamRequestProto_Builder*) builder {
  return [AddMonsterToBattleTeamRequestProto builder];
}
@end

@interface AddMonsterToBattleTeamRequestProto_Builder()
@property (retain) AddMonsterToBattleTeamRequestProto* result;
@end

@implementation AddMonsterToBattleTeamRequestProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[AddMonsterToBattleTeamRequestProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (AddMonsterToBattleTeamRequestProto_Builder*) clear {
  self.result = [[[AddMonsterToBattleTeamRequestProto alloc] init] autorelease];
  return self;
}
- (AddMonsterToBattleTeamRequestProto_Builder*) clone {
  return [AddMonsterToBattleTeamRequestProto builderWithPrototype:result];
}
- (AddMonsterToBattleTeamRequestProto*) defaultInstance {
  return [AddMonsterToBattleTeamRequestProto defaultInstance];
}
- (AddMonsterToBattleTeamRequestProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (AddMonsterToBattleTeamRequestProto*) buildPartial {
  AddMonsterToBattleTeamRequestProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (AddMonsterToBattleTeamRequestProto_Builder*) mergeFrom:(AddMonsterToBattleTeamRequestProto*) other {
  if (other == [AddMonsterToBattleTeamRequestProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasTeamSlotNum) {
    [self setTeamSlotNum:other.teamSlotNum];
  }
  if (other.hasUserMonsterId) {
    [self setUserMonsterId:other.userMonsterId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (AddMonsterToBattleTeamRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (AddMonsterToBattleTeamRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setTeamSlotNum:[input readInt32]];
        break;
      }
      case 24: {
        [self setUserMonsterId:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (AddMonsterToBattleTeamRequestProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (AddMonsterToBattleTeamRequestProto_Builder*) setSenderBuilder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (AddMonsterToBattleTeamRequestProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (AddMonsterToBattleTeamRequestProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasTeamSlotNum {
  return result.hasTeamSlotNum;
}
- (int32_t) teamSlotNum {
  return result.teamSlotNum;
}
- (AddMonsterToBattleTeamRequestProto_Builder*) setTeamSlotNum:(int32_t) value {
  result.hasTeamSlotNum = YES;
  result.teamSlotNum = value;
  return self;
}
- (AddMonsterToBattleTeamRequestProto_Builder*) clearTeamSlotNum {
  result.hasTeamSlotNum = NO;
  result.teamSlotNum = 0;
  return self;
}
- (BOOL) hasUserMonsterId {
  return result.hasUserMonsterId;
}
- (int64_t) userMonsterId {
  return result.userMonsterId;
}
- (AddMonsterToBattleTeamRequestProto_Builder*) setUserMonsterId:(int64_t) value {
  result.hasUserMonsterId = YES;
  result.userMonsterId = value;
  return self;
}
- (AddMonsterToBattleTeamRequestProto_Builder*) clearUserMonsterId {
  result.hasUserMonsterId = NO;
  result.userMonsterId = 0L;
  return self;
}
@end

@interface AddMonsterToBattleTeamResponseProto ()
@property (retain) MinimumUserProto* sender;
@property AddMonsterToBattleTeamResponseProto_AddMonsterToBattleTeamStatus status;
@end

@implementation AddMonsterToBattleTeamResponseProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value {
  hasSender_ = !!value;
}
@synthesize sender;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value {
  hasStatus_ = !!value;
}
@synthesize status;
- (void) dealloc {
  self.sender = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.status = AddMonsterToBattleTeamResponseProto_AddMonsterToBattleTeamStatusSuccess;
  }
  return self;
}
static AddMonsterToBattleTeamResponseProto* defaultAddMonsterToBattleTeamResponseProtoInstance = nil;
+ (void) initialize {
  if (self == [AddMonsterToBattleTeamResponseProto class]) {
    defaultAddMonsterToBattleTeamResponseProtoInstance = [[AddMonsterToBattleTeamResponseProto alloc] init];
  }
}
+ (AddMonsterToBattleTeamResponseProto*) defaultInstance {
  return defaultAddMonsterToBattleTeamResponseProtoInstance;
}
- (AddMonsterToBattleTeamResponseProto*) defaultInstance {
  return defaultAddMonsterToBattleTeamResponseProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasStatus) {
    [output writeEnum:2 value:self.status];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSender) {
    size += computeMessageSize(1, self.sender);
  }
  if (self.hasStatus) {
    size += computeEnumSize(2, self.status);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (AddMonsterToBattleTeamResponseProto*) parseFromData:(NSData*) data {
  return (AddMonsterToBattleTeamResponseProto*)[[[AddMonsterToBattleTeamResponseProto builder] mergeFromData:data] build];
}
+ (AddMonsterToBattleTeamResponseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (AddMonsterToBattleTeamResponseProto*)[[[AddMonsterToBattleTeamResponseProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (AddMonsterToBattleTeamResponseProto*) parseFromInputStream:(NSInputStream*) input {
  return (AddMonsterToBattleTeamResponseProto*)[[[AddMonsterToBattleTeamResponseProto builder] mergeFromInputStream:input] build];
}
+ (AddMonsterToBattleTeamResponseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (AddMonsterToBattleTeamResponseProto*)[[[AddMonsterToBattleTeamResponseProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (AddMonsterToBattleTeamResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (AddMonsterToBattleTeamResponseProto*)[[[AddMonsterToBattleTeamResponseProto builder] mergeFromCodedInputStream:input] build];
}
+ (AddMonsterToBattleTeamResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (AddMonsterToBattleTeamResponseProto*)[[[AddMonsterToBattleTeamResponseProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (AddMonsterToBattleTeamResponseProto_Builder*) builder {
  return [[[AddMonsterToBattleTeamResponseProto_Builder alloc] init] autorelease];
}
+ (AddMonsterToBattleTeamResponseProto_Builder*) builderWithPrototype:(AddMonsterToBattleTeamResponseProto*) prototype {
  return [[AddMonsterToBattleTeamResponseProto builder] mergeFrom:prototype];
}
- (AddMonsterToBattleTeamResponseProto_Builder*) builder {
  return [AddMonsterToBattleTeamResponseProto builder];
}
@end

BOOL AddMonsterToBattleTeamResponseProto_AddMonsterToBattleTeamStatusIsValidValue(AddMonsterToBattleTeamResponseProto_AddMonsterToBattleTeamStatus value) {
  switch (value) {
    case AddMonsterToBattleTeamResponseProto_AddMonsterToBattleTeamStatusSuccess:
    case AddMonsterToBattleTeamResponseProto_AddMonsterToBattleTeamStatusFailOther:
      return YES;
    default:
      return NO;
  }
}
@interface AddMonsterToBattleTeamResponseProto_Builder()
@property (retain) AddMonsterToBattleTeamResponseProto* result;
@end

@implementation AddMonsterToBattleTeamResponseProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[AddMonsterToBattleTeamResponseProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (AddMonsterToBattleTeamResponseProto_Builder*) clear {
  self.result = [[[AddMonsterToBattleTeamResponseProto alloc] init] autorelease];
  return self;
}
- (AddMonsterToBattleTeamResponseProto_Builder*) clone {
  return [AddMonsterToBattleTeamResponseProto builderWithPrototype:result];
}
- (AddMonsterToBattleTeamResponseProto*) defaultInstance {
  return [AddMonsterToBattleTeamResponseProto defaultInstance];
}
- (AddMonsterToBattleTeamResponseProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (AddMonsterToBattleTeamResponseProto*) buildPartial {
  AddMonsterToBattleTeamResponseProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (AddMonsterToBattleTeamResponseProto_Builder*) mergeFrom:(AddMonsterToBattleTeamResponseProto*) other {
  if (other == [AddMonsterToBattleTeamResponseProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (AddMonsterToBattleTeamResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (AddMonsterToBattleTeamResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        int32_t value = [input readEnum];
        if (AddMonsterToBattleTeamResponseProto_AddMonsterToBattleTeamStatusIsValidValue(value)) {
          [self setStatus:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (AddMonsterToBattleTeamResponseProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (AddMonsterToBattleTeamResponseProto_Builder*) setSenderBuilder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (AddMonsterToBattleTeamResponseProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (AddMonsterToBattleTeamResponseProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (AddMonsterToBattleTeamResponseProto_AddMonsterToBattleTeamStatus) status {
  return result.status;
}
- (AddMonsterToBattleTeamResponseProto_Builder*) setStatus:(AddMonsterToBattleTeamResponseProto_AddMonsterToBattleTeamStatus) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (AddMonsterToBattleTeamResponseProto_Builder*) clearStatus {
  result.hasStatus = NO;
  result.status = AddMonsterToBattleTeamResponseProto_AddMonsterToBattleTeamStatusSuccess;
  return self;
}
@end

@interface RemoveMonsterFromBattleTeamRequestProto ()
@property (retain) MinimumUserProto* sender;
@property int64_t userMonsterId;
@end

@implementation RemoveMonsterFromBattleTeamRequestProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value {
  hasSender_ = !!value;
}
@synthesize sender;
- (BOOL) hasUserMonsterId {
  return !!hasUserMonsterId_;
}
- (void) setHasUserMonsterId:(BOOL) value {
  hasUserMonsterId_ = !!value;
}
@synthesize userMonsterId;
- (void) dealloc {
  self.sender = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.userMonsterId = 0L;
  }
  return self;
}
static RemoveMonsterFromBattleTeamRequestProto* defaultRemoveMonsterFromBattleTeamRequestProtoInstance = nil;
+ (void) initialize {
  if (self == [RemoveMonsterFromBattleTeamRequestProto class]) {
    defaultRemoveMonsterFromBattleTeamRequestProtoInstance = [[RemoveMonsterFromBattleTeamRequestProto alloc] init];
  }
}
+ (RemoveMonsterFromBattleTeamRequestProto*) defaultInstance {
  return defaultRemoveMonsterFromBattleTeamRequestProtoInstance;
}
- (RemoveMonsterFromBattleTeamRequestProto*) defaultInstance {
  return defaultRemoveMonsterFromBattleTeamRequestProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasUserMonsterId) {
    [output writeInt64:3 value:self.userMonsterId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSender) {
    size += computeMessageSize(1, self.sender);
  }
  if (self.hasUserMonsterId) {
    size += computeInt64Size(3, self.userMonsterId);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (RemoveMonsterFromBattleTeamRequestProto*) parseFromData:(NSData*) data {
  return (RemoveMonsterFromBattleTeamRequestProto*)[[[RemoveMonsterFromBattleTeamRequestProto builder] mergeFromData:data] build];
}
+ (RemoveMonsterFromBattleTeamRequestProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RemoveMonsterFromBattleTeamRequestProto*)[[[RemoveMonsterFromBattleTeamRequestProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (RemoveMonsterFromBattleTeamRequestProto*) parseFromInputStream:(NSInputStream*) input {
  return (RemoveMonsterFromBattleTeamRequestProto*)[[[RemoveMonsterFromBattleTeamRequestProto builder] mergeFromInputStream:input] build];
}
+ (RemoveMonsterFromBattleTeamRequestProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RemoveMonsterFromBattleTeamRequestProto*)[[[RemoveMonsterFromBattleTeamRequestProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RemoveMonsterFromBattleTeamRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (RemoveMonsterFromBattleTeamRequestProto*)[[[RemoveMonsterFromBattleTeamRequestProto builder] mergeFromCodedInputStream:input] build];
}
+ (RemoveMonsterFromBattleTeamRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RemoveMonsterFromBattleTeamRequestProto*)[[[RemoveMonsterFromBattleTeamRequestProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RemoveMonsterFromBattleTeamRequestProto_Builder*) builder {
  return [[[RemoveMonsterFromBattleTeamRequestProto_Builder alloc] init] autorelease];
}
+ (RemoveMonsterFromBattleTeamRequestProto_Builder*) builderWithPrototype:(RemoveMonsterFromBattleTeamRequestProto*) prototype {
  return [[RemoveMonsterFromBattleTeamRequestProto builder] mergeFrom:prototype];
}
- (RemoveMonsterFromBattleTeamRequestProto_Builder*) builder {
  return [RemoveMonsterFromBattleTeamRequestProto builder];
}
@end

@interface RemoveMonsterFromBattleTeamRequestProto_Builder()
@property (retain) RemoveMonsterFromBattleTeamRequestProto* result;
@end

@implementation RemoveMonsterFromBattleTeamRequestProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[RemoveMonsterFromBattleTeamRequestProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (RemoveMonsterFromBattleTeamRequestProto_Builder*) clear {
  self.result = [[[RemoveMonsterFromBattleTeamRequestProto alloc] init] autorelease];
  return self;
}
- (RemoveMonsterFromBattleTeamRequestProto_Builder*) clone {
  return [RemoveMonsterFromBattleTeamRequestProto builderWithPrototype:result];
}
- (RemoveMonsterFromBattleTeamRequestProto*) defaultInstance {
  return [RemoveMonsterFromBattleTeamRequestProto defaultInstance];
}
- (RemoveMonsterFromBattleTeamRequestProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (RemoveMonsterFromBattleTeamRequestProto*) buildPartial {
  RemoveMonsterFromBattleTeamRequestProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (RemoveMonsterFromBattleTeamRequestProto_Builder*) mergeFrom:(RemoveMonsterFromBattleTeamRequestProto*) other {
  if (other == [RemoveMonsterFromBattleTeamRequestProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasUserMonsterId) {
    [self setUserMonsterId:other.userMonsterId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (RemoveMonsterFromBattleTeamRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (RemoveMonsterFromBattleTeamRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 24: {
        [self setUserMonsterId:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (RemoveMonsterFromBattleTeamRequestProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (RemoveMonsterFromBattleTeamRequestProto_Builder*) setSenderBuilder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (RemoveMonsterFromBattleTeamRequestProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (RemoveMonsterFromBattleTeamRequestProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasUserMonsterId {
  return result.hasUserMonsterId;
}
- (int64_t) userMonsterId {
  return result.userMonsterId;
}
- (RemoveMonsterFromBattleTeamRequestProto_Builder*) setUserMonsterId:(int64_t) value {
  result.hasUserMonsterId = YES;
  result.userMonsterId = value;
  return self;
}
- (RemoveMonsterFromBattleTeamRequestProto_Builder*) clearUserMonsterId {
  result.hasUserMonsterId = NO;
  result.userMonsterId = 0L;
  return self;
}
@end

@interface RemoveMonsterFromBattleTeamResponseProto ()
@property (retain) MinimumUserProto* sender;
@property RemoveMonsterFromBattleTeamResponseProto_RemoveMonsterFromBattleTeamStatus status;
@end

@implementation RemoveMonsterFromBattleTeamResponseProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value {
  hasSender_ = !!value;
}
@synthesize sender;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value {
  hasStatus_ = !!value;
}
@synthesize status;
- (void) dealloc {
  self.sender = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.status = RemoveMonsterFromBattleTeamResponseProto_RemoveMonsterFromBattleTeamStatusSuccess;
  }
  return self;
}
static RemoveMonsterFromBattleTeamResponseProto* defaultRemoveMonsterFromBattleTeamResponseProtoInstance = nil;
+ (void) initialize {
  if (self == [RemoveMonsterFromBattleTeamResponseProto class]) {
    defaultRemoveMonsterFromBattleTeamResponseProtoInstance = [[RemoveMonsterFromBattleTeamResponseProto alloc] init];
  }
}
+ (RemoveMonsterFromBattleTeamResponseProto*) defaultInstance {
  return defaultRemoveMonsterFromBattleTeamResponseProtoInstance;
}
- (RemoveMonsterFromBattleTeamResponseProto*) defaultInstance {
  return defaultRemoveMonsterFromBattleTeamResponseProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasStatus) {
    [output writeEnum:2 value:self.status];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSender) {
    size += computeMessageSize(1, self.sender);
  }
  if (self.hasStatus) {
    size += computeEnumSize(2, self.status);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (RemoveMonsterFromBattleTeamResponseProto*) parseFromData:(NSData*) data {
  return (RemoveMonsterFromBattleTeamResponseProto*)[[[RemoveMonsterFromBattleTeamResponseProto builder] mergeFromData:data] build];
}
+ (RemoveMonsterFromBattleTeamResponseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RemoveMonsterFromBattleTeamResponseProto*)[[[RemoveMonsterFromBattleTeamResponseProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (RemoveMonsterFromBattleTeamResponseProto*) parseFromInputStream:(NSInputStream*) input {
  return (RemoveMonsterFromBattleTeamResponseProto*)[[[RemoveMonsterFromBattleTeamResponseProto builder] mergeFromInputStream:input] build];
}
+ (RemoveMonsterFromBattleTeamResponseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RemoveMonsterFromBattleTeamResponseProto*)[[[RemoveMonsterFromBattleTeamResponseProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RemoveMonsterFromBattleTeamResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (RemoveMonsterFromBattleTeamResponseProto*)[[[RemoveMonsterFromBattleTeamResponseProto builder] mergeFromCodedInputStream:input] build];
}
+ (RemoveMonsterFromBattleTeamResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RemoveMonsterFromBattleTeamResponseProto*)[[[RemoveMonsterFromBattleTeamResponseProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RemoveMonsterFromBattleTeamResponseProto_Builder*) builder {
  return [[[RemoveMonsterFromBattleTeamResponseProto_Builder alloc] init] autorelease];
}
+ (RemoveMonsterFromBattleTeamResponseProto_Builder*) builderWithPrototype:(RemoveMonsterFromBattleTeamResponseProto*) prototype {
  return [[RemoveMonsterFromBattleTeamResponseProto builder] mergeFrom:prototype];
}
- (RemoveMonsterFromBattleTeamResponseProto_Builder*) builder {
  return [RemoveMonsterFromBattleTeamResponseProto builder];
}
@end

BOOL RemoveMonsterFromBattleTeamResponseProto_RemoveMonsterFromBattleTeamStatusIsValidValue(RemoveMonsterFromBattleTeamResponseProto_RemoveMonsterFromBattleTeamStatus value) {
  switch (value) {
    case RemoveMonsterFromBattleTeamResponseProto_RemoveMonsterFromBattleTeamStatusSuccess:
    case RemoveMonsterFromBattleTeamResponseProto_RemoveMonsterFromBattleTeamStatusFailOther:
      return YES;
    default:
      return NO;
  }
}
@interface RemoveMonsterFromBattleTeamResponseProto_Builder()
@property (retain) RemoveMonsterFromBattleTeamResponseProto* result;
@end

@implementation RemoveMonsterFromBattleTeamResponseProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[RemoveMonsterFromBattleTeamResponseProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (RemoveMonsterFromBattleTeamResponseProto_Builder*) clear {
  self.result = [[[RemoveMonsterFromBattleTeamResponseProto alloc] init] autorelease];
  return self;
}
- (RemoveMonsterFromBattleTeamResponseProto_Builder*) clone {
  return [RemoveMonsterFromBattleTeamResponseProto builderWithPrototype:result];
}
- (RemoveMonsterFromBattleTeamResponseProto*) defaultInstance {
  return [RemoveMonsterFromBattleTeamResponseProto defaultInstance];
}
- (RemoveMonsterFromBattleTeamResponseProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (RemoveMonsterFromBattleTeamResponseProto*) buildPartial {
  RemoveMonsterFromBattleTeamResponseProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (RemoveMonsterFromBattleTeamResponseProto_Builder*) mergeFrom:(RemoveMonsterFromBattleTeamResponseProto*) other {
  if (other == [RemoveMonsterFromBattleTeamResponseProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (RemoveMonsterFromBattleTeamResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (RemoveMonsterFromBattleTeamResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        int32_t value = [input readEnum];
        if (RemoveMonsterFromBattleTeamResponseProto_RemoveMonsterFromBattleTeamStatusIsValidValue(value)) {
          [self setStatus:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (RemoveMonsterFromBattleTeamResponseProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (RemoveMonsterFromBattleTeamResponseProto_Builder*) setSenderBuilder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (RemoveMonsterFromBattleTeamResponseProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (RemoveMonsterFromBattleTeamResponseProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (RemoveMonsterFromBattleTeamResponseProto_RemoveMonsterFromBattleTeamStatus) status {
  return result.status;
}
- (RemoveMonsterFromBattleTeamResponseProto_Builder*) setStatus:(RemoveMonsterFromBattleTeamResponseProto_RemoveMonsterFromBattleTeamStatus) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (RemoveMonsterFromBattleTeamResponseProto_Builder*) clearStatus {
  result.hasStatus = NO;
  result.status = RemoveMonsterFromBattleTeamResponseProto_RemoveMonsterFromBattleTeamStatusSuccess;
  return self;
}
@end

@interface IncreaseMonsterInventorySlotRequestProto ()
@property (retain) MinimumUserProto* sender;
@property IncreaseMonsterInventorySlotRequestProto_IncreaseSlotType increaseSlotType;
@property int32_t userStructId;
@property (retain) NSMutableArray* mutableUserFbInviteForSlotIdsList;
@end

@implementation IncreaseMonsterInventorySlotRequestProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value {
  hasSender_ = !!value;
}
@synthesize sender;
- (BOOL) hasIncreaseSlotType {
  return !!hasIncreaseSlotType_;
}
- (void) setHasIncreaseSlotType:(BOOL) value {
  hasIncreaseSlotType_ = !!value;
}
@synthesize increaseSlotType;
- (BOOL) hasUserStructId {
  return !!hasUserStructId_;
}
- (void) setHasUserStructId:(BOOL) value {
  hasUserStructId_ = !!value;
}
@synthesize userStructId;
@synthesize mutableUserFbInviteForSlotIdsList;
- (void) dealloc {
  self.sender = nil;
  self.mutableUserFbInviteForSlotIdsList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.increaseSlotType = IncreaseMonsterInventorySlotRequestProto_IncreaseSlotTypePurchase;
    self.userStructId = 0;
  }
  return self;
}
static IncreaseMonsterInventorySlotRequestProto* defaultIncreaseMonsterInventorySlotRequestProtoInstance = nil;
+ (void) initialize {
  if (self == [IncreaseMonsterInventorySlotRequestProto class]) {
    defaultIncreaseMonsterInventorySlotRequestProtoInstance = [[IncreaseMonsterInventorySlotRequestProto alloc] init];
  }
}
+ (IncreaseMonsterInventorySlotRequestProto*) defaultInstance {
  return defaultIncreaseMonsterInventorySlotRequestProtoInstance;
}
- (IncreaseMonsterInventorySlotRequestProto*) defaultInstance {
  return defaultIncreaseMonsterInventorySlotRequestProtoInstance;
}
- (NSArray*) userFbInviteForSlotIdsList {
  return mutableUserFbInviteForSlotIdsList;
}
- (int32_t) userFbInviteForSlotIdsAtIndex:(int32_t) index {
  id value = [mutableUserFbInviteForSlotIdsList objectAtIndex:index];
  return [value intValue];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasIncreaseSlotType) {
    [output writeEnum:2 value:self.increaseSlotType];
  }
  if (self.hasUserStructId) {
    [output writeInt32:3 value:self.userStructId];
  }
  for (NSNumber* value in self.mutableUserFbInviteForSlotIdsList) {
    [output writeInt32:4 value:[value intValue]];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSender) {
    size += computeMessageSize(1, self.sender);
  }
  if (self.hasIncreaseSlotType) {
    size += computeEnumSize(2, self.increaseSlotType);
  }
  if (self.hasUserStructId) {
    size += computeInt32Size(3, self.userStructId);
  }
  {
    int32_t dataSize = 0;
    for (NSNumber* value in self.mutableUserFbInviteForSlotIdsList) {
      dataSize += computeInt32SizeNoTag([value intValue]);
    }
    size += dataSize;
    size += 1 * self.mutableUserFbInviteForSlotIdsList.count;
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (IncreaseMonsterInventorySlotRequestProto*) parseFromData:(NSData*) data {
  return (IncreaseMonsterInventorySlotRequestProto*)[[[IncreaseMonsterInventorySlotRequestProto builder] mergeFromData:data] build];
}
+ (IncreaseMonsterInventorySlotRequestProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (IncreaseMonsterInventorySlotRequestProto*)[[[IncreaseMonsterInventorySlotRequestProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (IncreaseMonsterInventorySlotRequestProto*) parseFromInputStream:(NSInputStream*) input {
  return (IncreaseMonsterInventorySlotRequestProto*)[[[IncreaseMonsterInventorySlotRequestProto builder] mergeFromInputStream:input] build];
}
+ (IncreaseMonsterInventorySlotRequestProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (IncreaseMonsterInventorySlotRequestProto*)[[[IncreaseMonsterInventorySlotRequestProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (IncreaseMonsterInventorySlotRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (IncreaseMonsterInventorySlotRequestProto*)[[[IncreaseMonsterInventorySlotRequestProto builder] mergeFromCodedInputStream:input] build];
}
+ (IncreaseMonsterInventorySlotRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (IncreaseMonsterInventorySlotRequestProto*)[[[IncreaseMonsterInventorySlotRequestProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (IncreaseMonsterInventorySlotRequestProto_Builder*) builder {
  return [[[IncreaseMonsterInventorySlotRequestProto_Builder alloc] init] autorelease];
}
+ (IncreaseMonsterInventorySlotRequestProto_Builder*) builderWithPrototype:(IncreaseMonsterInventorySlotRequestProto*) prototype {
  return [[IncreaseMonsterInventorySlotRequestProto builder] mergeFrom:prototype];
}
- (IncreaseMonsterInventorySlotRequestProto_Builder*) builder {
  return [IncreaseMonsterInventorySlotRequestProto builder];
}
@end

BOOL IncreaseMonsterInventorySlotRequestProto_IncreaseSlotTypeIsValidValue(IncreaseMonsterInventorySlotRequestProto_IncreaseSlotType value) {
  switch (value) {
    case IncreaseMonsterInventorySlotRequestProto_IncreaseSlotTypePurchase:
    case IncreaseMonsterInventorySlotRequestProto_IncreaseSlotTypeRedeemFacebookInvites:
      return YES;
    default:
      return NO;
  }
}
@interface IncreaseMonsterInventorySlotRequestProto_Builder()
@property (retain) IncreaseMonsterInventorySlotRequestProto* result;
@end

@implementation IncreaseMonsterInventorySlotRequestProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[IncreaseMonsterInventorySlotRequestProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (IncreaseMonsterInventorySlotRequestProto_Builder*) clear {
  self.result = [[[IncreaseMonsterInventorySlotRequestProto alloc] init] autorelease];
  return self;
}
- (IncreaseMonsterInventorySlotRequestProto_Builder*) clone {
  return [IncreaseMonsterInventorySlotRequestProto builderWithPrototype:result];
}
- (IncreaseMonsterInventorySlotRequestProto*) defaultInstance {
  return [IncreaseMonsterInventorySlotRequestProto defaultInstance];
}
- (IncreaseMonsterInventorySlotRequestProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (IncreaseMonsterInventorySlotRequestProto*) buildPartial {
  IncreaseMonsterInventorySlotRequestProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (IncreaseMonsterInventorySlotRequestProto_Builder*) mergeFrom:(IncreaseMonsterInventorySlotRequestProto*) other {
  if (other == [IncreaseMonsterInventorySlotRequestProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasIncreaseSlotType) {
    [self setIncreaseSlotType:other.increaseSlotType];
  }
  if (other.hasUserStructId) {
    [self setUserStructId:other.userStructId];
  }
  if (other.mutableUserFbInviteForSlotIdsList.count > 0) {
    if (result.mutableUserFbInviteForSlotIdsList == nil) {
      result.mutableUserFbInviteForSlotIdsList = [NSMutableArray array];
    }
    [result.mutableUserFbInviteForSlotIdsList addObjectsFromArray:other.mutableUserFbInviteForSlotIdsList];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (IncreaseMonsterInventorySlotRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (IncreaseMonsterInventorySlotRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        int32_t value = [input readEnum];
        if (IncreaseMonsterInventorySlotRequestProto_IncreaseSlotTypeIsValidValue(value)) {
          [self setIncreaseSlotType:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
      case 24: {
        [self setUserStructId:[input readInt32]];
        break;
      }
      case 32: {
        [self addUserFbInviteForSlotIds:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (IncreaseMonsterInventorySlotRequestProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (IncreaseMonsterInventorySlotRequestProto_Builder*) setSenderBuilder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (IncreaseMonsterInventorySlotRequestProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (IncreaseMonsterInventorySlotRequestProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasIncreaseSlotType {
  return result.hasIncreaseSlotType;
}
- (IncreaseMonsterInventorySlotRequestProto_IncreaseSlotType) increaseSlotType {
  return result.increaseSlotType;
}
- (IncreaseMonsterInventorySlotRequestProto_Builder*) setIncreaseSlotType:(IncreaseMonsterInventorySlotRequestProto_IncreaseSlotType) value {
  result.hasIncreaseSlotType = YES;
  result.increaseSlotType = value;
  return self;
}
- (IncreaseMonsterInventorySlotRequestProto_Builder*) clearIncreaseSlotType {
  result.hasIncreaseSlotType = NO;
  result.increaseSlotType = IncreaseMonsterInventorySlotRequestProto_IncreaseSlotTypePurchase;
  return self;
}
- (BOOL) hasUserStructId {
  return result.hasUserStructId;
}
- (int32_t) userStructId {
  return result.userStructId;
}
- (IncreaseMonsterInventorySlotRequestProto_Builder*) setUserStructId:(int32_t) value {
  result.hasUserStructId = YES;
  result.userStructId = value;
  return self;
}
- (IncreaseMonsterInventorySlotRequestProto_Builder*) clearUserStructId {
  result.hasUserStructId = NO;
  result.userStructId = 0;
  return self;
}
- (NSArray*) userFbInviteForSlotIdsList {
  if (result.mutableUserFbInviteForSlotIdsList == nil) {
    return [NSArray array];
  }
  return result.mutableUserFbInviteForSlotIdsList;
}
- (int32_t) userFbInviteForSlotIdsAtIndex:(int32_t) index {
  return [result userFbInviteForSlotIdsAtIndex:index];
}
- (IncreaseMonsterInventorySlotRequestProto_Builder*) replaceUserFbInviteForSlotIdsAtIndex:(int32_t) index with:(int32_t) value {
  [result.mutableUserFbInviteForSlotIdsList replaceObjectAtIndex:index withObject:[NSNumber numberWithInt:value]];
  return self;
}
- (IncreaseMonsterInventorySlotRequestProto_Builder*) addUserFbInviteForSlotIds:(int32_t) value {
  if (result.mutableUserFbInviteForSlotIdsList == nil) {
    result.mutableUserFbInviteForSlotIdsList = [NSMutableArray array];
  }
  [result.mutableUserFbInviteForSlotIdsList addObject:[NSNumber numberWithInt:value]];
  return self;
}
- (IncreaseMonsterInventorySlotRequestProto_Builder*) addAllUserFbInviteForSlotIds:(NSArray*) values {
  if (result.mutableUserFbInviteForSlotIdsList == nil) {
    result.mutableUserFbInviteForSlotIdsList = [NSMutableArray array];
  }
  [result.mutableUserFbInviteForSlotIdsList addObjectsFromArray:values];
  return self;
}
- (IncreaseMonsterInventorySlotRequestProto_Builder*) clearUserFbInviteForSlotIdsList {
  result.mutableUserFbInviteForSlotIdsList = nil;
  return self;
}
@end

@interface IncreaseMonsterInventorySlotResponseProto ()
@property (retain) MinimumUserProto* sender;
@property IncreaseMonsterInventorySlotResponseProto_IncreaseMonsterInventorySlotStatus status;
@end

@implementation IncreaseMonsterInventorySlotResponseProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value {
  hasSender_ = !!value;
}
@synthesize sender;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value {
  hasStatus_ = !!value;
}
@synthesize status;
- (void) dealloc {
  self.sender = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.status = IncreaseMonsterInventorySlotResponseProto_IncreaseMonsterInventorySlotStatusSuccess;
  }
  return self;
}
static IncreaseMonsterInventorySlotResponseProto* defaultIncreaseMonsterInventorySlotResponseProtoInstance = nil;
+ (void) initialize {
  if (self == [IncreaseMonsterInventorySlotResponseProto class]) {
    defaultIncreaseMonsterInventorySlotResponseProtoInstance = [[IncreaseMonsterInventorySlotResponseProto alloc] init];
  }
}
+ (IncreaseMonsterInventorySlotResponseProto*) defaultInstance {
  return defaultIncreaseMonsterInventorySlotResponseProtoInstance;
}
- (IncreaseMonsterInventorySlotResponseProto*) defaultInstance {
  return defaultIncreaseMonsterInventorySlotResponseProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasStatus) {
    [output writeEnum:2 value:self.status];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSender) {
    size += computeMessageSize(1, self.sender);
  }
  if (self.hasStatus) {
    size += computeEnumSize(2, self.status);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (IncreaseMonsterInventorySlotResponseProto*) parseFromData:(NSData*) data {
  return (IncreaseMonsterInventorySlotResponseProto*)[[[IncreaseMonsterInventorySlotResponseProto builder] mergeFromData:data] build];
}
+ (IncreaseMonsterInventorySlotResponseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (IncreaseMonsterInventorySlotResponseProto*)[[[IncreaseMonsterInventorySlotResponseProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (IncreaseMonsterInventorySlotResponseProto*) parseFromInputStream:(NSInputStream*) input {
  return (IncreaseMonsterInventorySlotResponseProto*)[[[IncreaseMonsterInventorySlotResponseProto builder] mergeFromInputStream:input] build];
}
+ (IncreaseMonsterInventorySlotResponseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (IncreaseMonsterInventorySlotResponseProto*)[[[IncreaseMonsterInventorySlotResponseProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (IncreaseMonsterInventorySlotResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (IncreaseMonsterInventorySlotResponseProto*)[[[IncreaseMonsterInventorySlotResponseProto builder] mergeFromCodedInputStream:input] build];
}
+ (IncreaseMonsterInventorySlotResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (IncreaseMonsterInventorySlotResponseProto*)[[[IncreaseMonsterInventorySlotResponseProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (IncreaseMonsterInventorySlotResponseProto_Builder*) builder {
  return [[[IncreaseMonsterInventorySlotResponseProto_Builder alloc] init] autorelease];
}
+ (IncreaseMonsterInventorySlotResponseProto_Builder*) builderWithPrototype:(IncreaseMonsterInventorySlotResponseProto*) prototype {
  return [[IncreaseMonsterInventorySlotResponseProto builder] mergeFrom:prototype];
}
- (IncreaseMonsterInventorySlotResponseProto_Builder*) builder {
  return [IncreaseMonsterInventorySlotResponseProto builder];
}
@end

BOOL IncreaseMonsterInventorySlotResponseProto_IncreaseMonsterInventorySlotStatusIsValidValue(IncreaseMonsterInventorySlotResponseProto_IncreaseMonsterInventorySlotStatus value) {
  switch (value) {
    case IncreaseMonsterInventorySlotResponseProto_IncreaseMonsterInventorySlotStatusSuccess:
    case IncreaseMonsterInventorySlotResponseProto_IncreaseMonsterInventorySlotStatusFailInsufficientFunds:
    case IncreaseMonsterInventorySlotResponseProto_IncreaseMonsterInventorySlotStatusFailInsufficientFacebookInvites:
    case IncreaseMonsterInventorySlotResponseProto_IncreaseMonsterInventorySlotStatusFailOther:
    case IncreaseMonsterInventorySlotResponseProto_IncreaseMonsterInventorySlotStatusFailInconsistentInviteData:
    case IncreaseMonsterInventorySlotResponseProto_IncreaseMonsterInventorySlotStatusFailStructureAtMaxFbInviteLvl:
      return YES;
    default:
      return NO;
  }
}
@interface IncreaseMonsterInventorySlotResponseProto_Builder()
@property (retain) IncreaseMonsterInventorySlotResponseProto* result;
@end

@implementation IncreaseMonsterInventorySlotResponseProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[IncreaseMonsterInventorySlotResponseProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (IncreaseMonsterInventorySlotResponseProto_Builder*) clear {
  self.result = [[[IncreaseMonsterInventorySlotResponseProto alloc] init] autorelease];
  return self;
}
- (IncreaseMonsterInventorySlotResponseProto_Builder*) clone {
  return [IncreaseMonsterInventorySlotResponseProto builderWithPrototype:result];
}
- (IncreaseMonsterInventorySlotResponseProto*) defaultInstance {
  return [IncreaseMonsterInventorySlotResponseProto defaultInstance];
}
- (IncreaseMonsterInventorySlotResponseProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (IncreaseMonsterInventorySlotResponseProto*) buildPartial {
  IncreaseMonsterInventorySlotResponseProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (IncreaseMonsterInventorySlotResponseProto_Builder*) mergeFrom:(IncreaseMonsterInventorySlotResponseProto*) other {
  if (other == [IncreaseMonsterInventorySlotResponseProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (IncreaseMonsterInventorySlotResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (IncreaseMonsterInventorySlotResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        int32_t value = [input readEnum];
        if (IncreaseMonsterInventorySlotResponseProto_IncreaseMonsterInventorySlotStatusIsValidValue(value)) {
          [self setStatus:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (IncreaseMonsterInventorySlotResponseProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (IncreaseMonsterInventorySlotResponseProto_Builder*) setSenderBuilder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (IncreaseMonsterInventorySlotResponseProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (IncreaseMonsterInventorySlotResponseProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (IncreaseMonsterInventorySlotResponseProto_IncreaseMonsterInventorySlotStatus) status {
  return result.status;
}
- (IncreaseMonsterInventorySlotResponseProto_Builder*) setStatus:(IncreaseMonsterInventorySlotResponseProto_IncreaseMonsterInventorySlotStatus) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (IncreaseMonsterInventorySlotResponseProto_Builder*) clearStatus {
  result.hasStatus = NO;
  result.status = IncreaseMonsterInventorySlotResponseProto_IncreaseMonsterInventorySlotStatusSuccess;
  return self;
}
@end

@interface InviteFbFriendsForSlotsRequestProto ()
@property (retain) MinimumUserProtoWithFacebookId* sender;
@property (retain) NSMutableArray* mutableInvitesList;
@end

@implementation InviteFbFriendsForSlotsRequestProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value {
  hasSender_ = !!value;
}
@synthesize sender;
@synthesize mutableInvitesList;
- (void) dealloc {
  self.sender = nil;
  self.mutableInvitesList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProtoWithFacebookId defaultInstance];
  }
  return self;
}
static InviteFbFriendsForSlotsRequestProto* defaultInviteFbFriendsForSlotsRequestProtoInstance = nil;
+ (void) initialize {
  if (self == [InviteFbFriendsForSlotsRequestProto class]) {
    defaultInviteFbFriendsForSlotsRequestProtoInstance = [[InviteFbFriendsForSlotsRequestProto alloc] init];
  }
}
+ (InviteFbFriendsForSlotsRequestProto*) defaultInstance {
  return defaultInviteFbFriendsForSlotsRequestProtoInstance;
}
- (InviteFbFriendsForSlotsRequestProto*) defaultInstance {
  return defaultInviteFbFriendsForSlotsRequestProtoInstance;
}
- (NSArray*) invitesList {
  return mutableInvitesList;
}
- (InviteFbFriendsForSlotsRequestProto_FacebookInviteStructure*) invitesAtIndex:(int32_t) index {
  id value = [mutableInvitesList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  for (InviteFbFriendsForSlotsRequestProto_FacebookInviteStructure* element in self.invitesList) {
    [output writeMessage:2 value:element];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSender) {
    size += computeMessageSize(1, self.sender);
  }
  for (InviteFbFriendsForSlotsRequestProto_FacebookInviteStructure* element in self.invitesList) {
    size += computeMessageSize(2, element);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (InviteFbFriendsForSlotsRequestProto*) parseFromData:(NSData*) data {
  return (InviteFbFriendsForSlotsRequestProto*)[[[InviteFbFriendsForSlotsRequestProto builder] mergeFromData:data] build];
}
+ (InviteFbFriendsForSlotsRequestProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (InviteFbFriendsForSlotsRequestProto*)[[[InviteFbFriendsForSlotsRequestProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (InviteFbFriendsForSlotsRequestProto*) parseFromInputStream:(NSInputStream*) input {
  return (InviteFbFriendsForSlotsRequestProto*)[[[InviteFbFriendsForSlotsRequestProto builder] mergeFromInputStream:input] build];
}
+ (InviteFbFriendsForSlotsRequestProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (InviteFbFriendsForSlotsRequestProto*)[[[InviteFbFriendsForSlotsRequestProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (InviteFbFriendsForSlotsRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (InviteFbFriendsForSlotsRequestProto*)[[[InviteFbFriendsForSlotsRequestProto builder] mergeFromCodedInputStream:input] build];
}
+ (InviteFbFriendsForSlotsRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (InviteFbFriendsForSlotsRequestProto*)[[[InviteFbFriendsForSlotsRequestProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (InviteFbFriendsForSlotsRequestProto_Builder*) builder {
  return [[[InviteFbFriendsForSlotsRequestProto_Builder alloc] init] autorelease];
}
+ (InviteFbFriendsForSlotsRequestProto_Builder*) builderWithPrototype:(InviteFbFriendsForSlotsRequestProto*) prototype {
  return [[InviteFbFriendsForSlotsRequestProto builder] mergeFrom:prototype];
}
- (InviteFbFriendsForSlotsRequestProto_Builder*) builder {
  return [InviteFbFriendsForSlotsRequestProto builder];
}
@end

@interface InviteFbFriendsForSlotsRequestProto_FacebookInviteStructure ()
@property (retain) NSString* fbFriendId;
@property int32_t userStructId;
@property int32_t userStructFbLvl;
@end

@implementation InviteFbFriendsForSlotsRequestProto_FacebookInviteStructure

- (BOOL) hasFbFriendId {
  return !!hasFbFriendId_;
}
- (void) setHasFbFriendId:(BOOL) value {
  hasFbFriendId_ = !!value;
}
@synthesize fbFriendId;
- (BOOL) hasUserStructId {
  return !!hasUserStructId_;
}
- (void) setHasUserStructId:(BOOL) value {
  hasUserStructId_ = !!value;
}
@synthesize userStructId;
- (BOOL) hasUserStructFbLvl {
  return !!hasUserStructFbLvl_;
}
- (void) setHasUserStructFbLvl:(BOOL) value {
  hasUserStructFbLvl_ = !!value;
}
@synthesize userStructFbLvl;
- (void) dealloc {
  self.fbFriendId = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.fbFriendId = @"";
    self.userStructId = 0;
    self.userStructFbLvl = 0;
  }
  return self;
}
static InviteFbFriendsForSlotsRequestProto_FacebookInviteStructure* defaultInviteFbFriendsForSlotsRequestProto_FacebookInviteStructureInstance = nil;
+ (void) initialize {
  if (self == [InviteFbFriendsForSlotsRequestProto_FacebookInviteStructure class]) {
    defaultInviteFbFriendsForSlotsRequestProto_FacebookInviteStructureInstance = [[InviteFbFriendsForSlotsRequestProto_FacebookInviteStructure alloc] init];
  }
}
+ (InviteFbFriendsForSlotsRequestProto_FacebookInviteStructure*) defaultInstance {
  return defaultInviteFbFriendsForSlotsRequestProto_FacebookInviteStructureInstance;
}
- (InviteFbFriendsForSlotsRequestProto_FacebookInviteStructure*) defaultInstance {
  return defaultInviteFbFriendsForSlotsRequestProto_FacebookInviteStructureInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasFbFriendId) {
    [output writeString:1 value:self.fbFriendId];
  }
  if (self.hasUserStructId) {
    [output writeInt32:2 value:self.userStructId];
  }
  if (self.hasUserStructFbLvl) {
    [output writeInt32:3 value:self.userStructFbLvl];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasFbFriendId) {
    size += computeStringSize(1, self.fbFriendId);
  }
  if (self.hasUserStructId) {
    size += computeInt32Size(2, self.userStructId);
  }
  if (self.hasUserStructFbLvl) {
    size += computeInt32Size(3, self.userStructFbLvl);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (InviteFbFriendsForSlotsRequestProto_FacebookInviteStructure*) parseFromData:(NSData*) data {
  return (InviteFbFriendsForSlotsRequestProto_FacebookInviteStructure*)[[[InviteFbFriendsForSlotsRequestProto_FacebookInviteStructure builder] mergeFromData:data] build];
}
+ (InviteFbFriendsForSlotsRequestProto_FacebookInviteStructure*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (InviteFbFriendsForSlotsRequestProto_FacebookInviteStructure*)[[[InviteFbFriendsForSlotsRequestProto_FacebookInviteStructure builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (InviteFbFriendsForSlotsRequestProto_FacebookInviteStructure*) parseFromInputStream:(NSInputStream*) input {
  return (InviteFbFriendsForSlotsRequestProto_FacebookInviteStructure*)[[[InviteFbFriendsForSlotsRequestProto_FacebookInviteStructure builder] mergeFromInputStream:input] build];
}
+ (InviteFbFriendsForSlotsRequestProto_FacebookInviteStructure*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (InviteFbFriendsForSlotsRequestProto_FacebookInviteStructure*)[[[InviteFbFriendsForSlotsRequestProto_FacebookInviteStructure builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (InviteFbFriendsForSlotsRequestProto_FacebookInviteStructure*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (InviteFbFriendsForSlotsRequestProto_FacebookInviteStructure*)[[[InviteFbFriendsForSlotsRequestProto_FacebookInviteStructure builder] mergeFromCodedInputStream:input] build];
}
+ (InviteFbFriendsForSlotsRequestProto_FacebookInviteStructure*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (InviteFbFriendsForSlotsRequestProto_FacebookInviteStructure*)[[[InviteFbFriendsForSlotsRequestProto_FacebookInviteStructure builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (InviteFbFriendsForSlotsRequestProto_FacebookInviteStructure_Builder*) builder {
  return [[[InviteFbFriendsForSlotsRequestProto_FacebookInviteStructure_Builder alloc] init] autorelease];
}
+ (InviteFbFriendsForSlotsRequestProto_FacebookInviteStructure_Builder*) builderWithPrototype:(InviteFbFriendsForSlotsRequestProto_FacebookInviteStructure*) prototype {
  return [[InviteFbFriendsForSlotsRequestProto_FacebookInviteStructure builder] mergeFrom:prototype];
}
- (InviteFbFriendsForSlotsRequestProto_FacebookInviteStructure_Builder*) builder {
  return [InviteFbFriendsForSlotsRequestProto_FacebookInviteStructure builder];
}
@end

@interface InviteFbFriendsForSlotsRequestProto_FacebookInviteStructure_Builder()
@property (retain) InviteFbFriendsForSlotsRequestProto_FacebookInviteStructure* result;
@end

@implementation InviteFbFriendsForSlotsRequestProto_FacebookInviteStructure_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[InviteFbFriendsForSlotsRequestProto_FacebookInviteStructure alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (InviteFbFriendsForSlotsRequestProto_FacebookInviteStructure_Builder*) clear {
  self.result = [[[InviteFbFriendsForSlotsRequestProto_FacebookInviteStructure alloc] init] autorelease];
  return self;
}
- (InviteFbFriendsForSlotsRequestProto_FacebookInviteStructure_Builder*) clone {
  return [InviteFbFriendsForSlotsRequestProto_FacebookInviteStructure builderWithPrototype:result];
}
- (InviteFbFriendsForSlotsRequestProto_FacebookInviteStructure*) defaultInstance {
  return [InviteFbFriendsForSlotsRequestProto_FacebookInviteStructure defaultInstance];
}
- (InviteFbFriendsForSlotsRequestProto_FacebookInviteStructure*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (InviteFbFriendsForSlotsRequestProto_FacebookInviteStructure*) buildPartial {
  InviteFbFriendsForSlotsRequestProto_FacebookInviteStructure* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (InviteFbFriendsForSlotsRequestProto_FacebookInviteStructure_Builder*) mergeFrom:(InviteFbFriendsForSlotsRequestProto_FacebookInviteStructure*) other {
  if (other == [InviteFbFriendsForSlotsRequestProto_FacebookInviteStructure defaultInstance]) {
    return self;
  }
  if (other.hasFbFriendId) {
    [self setFbFriendId:other.fbFriendId];
  }
  if (other.hasUserStructId) {
    [self setUserStructId:other.userStructId];
  }
  if (other.hasUserStructFbLvl) {
    [self setUserStructFbLvl:other.userStructFbLvl];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (InviteFbFriendsForSlotsRequestProto_FacebookInviteStructure_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (InviteFbFriendsForSlotsRequestProto_FacebookInviteStructure_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setFbFriendId:[input readString]];
        break;
      }
      case 16: {
        [self setUserStructId:[input readInt32]];
        break;
      }
      case 24: {
        [self setUserStructFbLvl:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasFbFriendId {
  return result.hasFbFriendId;
}
- (NSString*) fbFriendId {
  return result.fbFriendId;
}
- (InviteFbFriendsForSlotsRequestProto_FacebookInviteStructure_Builder*) setFbFriendId:(NSString*) value {
  result.hasFbFriendId = YES;
  result.fbFriendId = value;
  return self;
}
- (InviteFbFriendsForSlotsRequestProto_FacebookInviteStructure_Builder*) clearFbFriendId {
  result.hasFbFriendId = NO;
  result.fbFriendId = @"";
  return self;
}
- (BOOL) hasUserStructId {
  return result.hasUserStructId;
}
- (int32_t) userStructId {
  return result.userStructId;
}
- (InviteFbFriendsForSlotsRequestProto_FacebookInviteStructure_Builder*) setUserStructId:(int32_t) value {
  result.hasUserStructId = YES;
  result.userStructId = value;
  return self;
}
- (InviteFbFriendsForSlotsRequestProto_FacebookInviteStructure_Builder*) clearUserStructId {
  result.hasUserStructId = NO;
  result.userStructId = 0;
  return self;
}
- (BOOL) hasUserStructFbLvl {
  return result.hasUserStructFbLvl;
}
- (int32_t) userStructFbLvl {
  return result.userStructFbLvl;
}
- (InviteFbFriendsForSlotsRequestProto_FacebookInviteStructure_Builder*) setUserStructFbLvl:(int32_t) value {
  result.hasUserStructFbLvl = YES;
  result.userStructFbLvl = value;
  return self;
}
- (InviteFbFriendsForSlotsRequestProto_FacebookInviteStructure_Builder*) clearUserStructFbLvl {
  result.hasUserStructFbLvl = NO;
  result.userStructFbLvl = 0;
  return self;
}
@end

@interface InviteFbFriendsForSlotsRequestProto_Builder()
@property (retain) InviteFbFriendsForSlotsRequestProto* result;
@end

@implementation InviteFbFriendsForSlotsRequestProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[InviteFbFriendsForSlotsRequestProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (InviteFbFriendsForSlotsRequestProto_Builder*) clear {
  self.result = [[[InviteFbFriendsForSlotsRequestProto alloc] init] autorelease];
  return self;
}
- (InviteFbFriendsForSlotsRequestProto_Builder*) clone {
  return [InviteFbFriendsForSlotsRequestProto builderWithPrototype:result];
}
- (InviteFbFriendsForSlotsRequestProto*) defaultInstance {
  return [InviteFbFriendsForSlotsRequestProto defaultInstance];
}
- (InviteFbFriendsForSlotsRequestProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (InviteFbFriendsForSlotsRequestProto*) buildPartial {
  InviteFbFriendsForSlotsRequestProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (InviteFbFriendsForSlotsRequestProto_Builder*) mergeFrom:(InviteFbFriendsForSlotsRequestProto*) other {
  if (other == [InviteFbFriendsForSlotsRequestProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.mutableInvitesList.count > 0) {
    if (result.mutableInvitesList == nil) {
      result.mutableInvitesList = [NSMutableArray array];
    }
    [result.mutableInvitesList addObjectsFromArray:other.mutableInvitesList];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (InviteFbFriendsForSlotsRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (InviteFbFriendsForSlotsRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProtoWithFacebookId_Builder* subBuilder = [MinimumUserProtoWithFacebookId builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        InviteFbFriendsForSlotsRequestProto_FacebookInviteStructure_Builder* subBuilder = [InviteFbFriendsForSlotsRequestProto_FacebookInviteStructure builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addInvites:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProtoWithFacebookId*) sender {
  return result.sender;
}
- (InviteFbFriendsForSlotsRequestProto_Builder*) setSender:(MinimumUserProtoWithFacebookId*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (InviteFbFriendsForSlotsRequestProto_Builder*) setSenderBuilder:(MinimumUserProtoWithFacebookId_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (InviteFbFriendsForSlotsRequestProto_Builder*) mergeSender:(MinimumUserProtoWithFacebookId*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProtoWithFacebookId defaultInstance]) {
    result.sender =
      [[[MinimumUserProtoWithFacebookId builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (InviteFbFriendsForSlotsRequestProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProtoWithFacebookId defaultInstance];
  return self;
}
- (NSArray*) invitesList {
  if (result.mutableInvitesList == nil) { return [NSArray array]; }
  return result.mutableInvitesList;
}
- (InviteFbFriendsForSlotsRequestProto_FacebookInviteStructure*) invitesAtIndex:(int32_t) index {
  return [result invitesAtIndex:index];
}
- (InviteFbFriendsForSlotsRequestProto_Builder*) replaceInvitesAtIndex:(int32_t) index with:(InviteFbFriendsForSlotsRequestProto_FacebookInviteStructure*) value {
  [result.mutableInvitesList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (InviteFbFriendsForSlotsRequestProto_Builder*) addAllInvites:(NSArray*) values {
  if (result.mutableInvitesList == nil) {
    result.mutableInvitesList = [NSMutableArray array];
  }
  [result.mutableInvitesList addObjectsFromArray:values];
  return self;
}
- (InviteFbFriendsForSlotsRequestProto_Builder*) clearInvitesList {
  result.mutableInvitesList = nil;
  return self;
}
- (InviteFbFriendsForSlotsRequestProto_Builder*) addInvites:(InviteFbFriendsForSlotsRequestProto_FacebookInviteStructure*) value {
  if (result.mutableInvitesList == nil) {
    result.mutableInvitesList = [NSMutableArray array];
  }
  [result.mutableInvitesList addObject:value];
  return self;
}
@end

@interface InviteFbFriendsForSlotsResponseProto ()
@property (retain) MinimumUserProtoWithFacebookId* sender;
@property InviteFbFriendsForSlotsResponseProto_InviteFbFriendsForSlotsStatus status;
@property (retain) NSMutableArray* mutableInvitesNewList;
@end

@implementation InviteFbFriendsForSlotsResponseProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value {
  hasSender_ = !!value;
}
@synthesize sender;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value {
  hasStatus_ = !!value;
}
@synthesize status;
@synthesize mutableInvitesNewList;
- (void) dealloc {
  self.sender = nil;
  self.mutableInvitesNewList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProtoWithFacebookId defaultInstance];
    self.status = InviteFbFriendsForSlotsResponseProto_InviteFbFriendsForSlotsStatusSuccess;
  }
  return self;
}
static InviteFbFriendsForSlotsResponseProto* defaultInviteFbFriendsForSlotsResponseProtoInstance = nil;
+ (void) initialize {
  if (self == [InviteFbFriendsForSlotsResponseProto class]) {
    defaultInviteFbFriendsForSlotsResponseProtoInstance = [[InviteFbFriendsForSlotsResponseProto alloc] init];
  }
}
+ (InviteFbFriendsForSlotsResponseProto*) defaultInstance {
  return defaultInviteFbFriendsForSlotsResponseProtoInstance;
}
- (InviteFbFriendsForSlotsResponseProto*) defaultInstance {
  return defaultInviteFbFriendsForSlotsResponseProtoInstance;
}
- (NSArray*) invitesNewList {
  return mutableInvitesNewList;
}
- (UserFacebookInviteForSlotProto*) invitesNewAtIndex:(int32_t) index {
  id value = [mutableInvitesNewList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasStatus) {
    [output writeEnum:2 value:self.status];
  }
  for (UserFacebookInviteForSlotProto* element in self.invitesNewList) {
    [output writeMessage:3 value:element];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSender) {
    size += computeMessageSize(1, self.sender);
  }
  if (self.hasStatus) {
    size += computeEnumSize(2, self.status);
  }
  for (UserFacebookInviteForSlotProto* element in self.invitesNewList) {
    size += computeMessageSize(3, element);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (InviteFbFriendsForSlotsResponseProto*) parseFromData:(NSData*) data {
  return (InviteFbFriendsForSlotsResponseProto*)[[[InviteFbFriendsForSlotsResponseProto builder] mergeFromData:data] build];
}
+ (InviteFbFriendsForSlotsResponseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (InviteFbFriendsForSlotsResponseProto*)[[[InviteFbFriendsForSlotsResponseProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (InviteFbFriendsForSlotsResponseProto*) parseFromInputStream:(NSInputStream*) input {
  return (InviteFbFriendsForSlotsResponseProto*)[[[InviteFbFriendsForSlotsResponseProto builder] mergeFromInputStream:input] build];
}
+ (InviteFbFriendsForSlotsResponseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (InviteFbFriendsForSlotsResponseProto*)[[[InviteFbFriendsForSlotsResponseProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (InviteFbFriendsForSlotsResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (InviteFbFriendsForSlotsResponseProto*)[[[InviteFbFriendsForSlotsResponseProto builder] mergeFromCodedInputStream:input] build];
}
+ (InviteFbFriendsForSlotsResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (InviteFbFriendsForSlotsResponseProto*)[[[InviteFbFriendsForSlotsResponseProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (InviteFbFriendsForSlotsResponseProto_Builder*) builder {
  return [[[InviteFbFriendsForSlotsResponseProto_Builder alloc] init] autorelease];
}
+ (InviteFbFriendsForSlotsResponseProto_Builder*) builderWithPrototype:(InviteFbFriendsForSlotsResponseProto*) prototype {
  return [[InviteFbFriendsForSlotsResponseProto builder] mergeFrom:prototype];
}
- (InviteFbFriendsForSlotsResponseProto_Builder*) builder {
  return [InviteFbFriendsForSlotsResponseProto builder];
}
@end

BOOL InviteFbFriendsForSlotsResponseProto_InviteFbFriendsForSlotsStatusIsValidValue(InviteFbFriendsForSlotsResponseProto_InviteFbFriendsForSlotsStatus value) {
  switch (value) {
    case InviteFbFriendsForSlotsResponseProto_InviteFbFriendsForSlotsStatusSuccess:
    case InviteFbFriendsForSlotsResponseProto_InviteFbFriendsForSlotsStatusFailOther:
      return YES;
    default:
      return NO;
  }
}
@interface InviteFbFriendsForSlotsResponseProto_Builder()
@property (retain) InviteFbFriendsForSlotsResponseProto* result;
@end

@implementation InviteFbFriendsForSlotsResponseProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[InviteFbFriendsForSlotsResponseProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (InviteFbFriendsForSlotsResponseProto_Builder*) clear {
  self.result = [[[InviteFbFriendsForSlotsResponseProto alloc] init] autorelease];
  return self;
}
- (InviteFbFriendsForSlotsResponseProto_Builder*) clone {
  return [InviteFbFriendsForSlotsResponseProto builderWithPrototype:result];
}
- (InviteFbFriendsForSlotsResponseProto*) defaultInstance {
  return [InviteFbFriendsForSlotsResponseProto defaultInstance];
}
- (InviteFbFriendsForSlotsResponseProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (InviteFbFriendsForSlotsResponseProto*) buildPartial {
  InviteFbFriendsForSlotsResponseProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (InviteFbFriendsForSlotsResponseProto_Builder*) mergeFrom:(InviteFbFriendsForSlotsResponseProto*) other {
  if (other == [InviteFbFriendsForSlotsResponseProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  if (other.mutableInvitesNewList.count > 0) {
    if (result.mutableInvitesNewList == nil) {
      result.mutableInvitesNewList = [NSMutableArray array];
    }
    [result.mutableInvitesNewList addObjectsFromArray:other.mutableInvitesNewList];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (InviteFbFriendsForSlotsResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (InviteFbFriendsForSlotsResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProtoWithFacebookId_Builder* subBuilder = [MinimumUserProtoWithFacebookId builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        int32_t value = [input readEnum];
        if (InviteFbFriendsForSlotsResponseProto_InviteFbFriendsForSlotsStatusIsValidValue(value)) {
          [self setStatus:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
      case 26: {
        UserFacebookInviteForSlotProto_Builder* subBuilder = [UserFacebookInviteForSlotProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addInvitesNew:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProtoWithFacebookId*) sender {
  return result.sender;
}
- (InviteFbFriendsForSlotsResponseProto_Builder*) setSender:(MinimumUserProtoWithFacebookId*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (InviteFbFriendsForSlotsResponseProto_Builder*) setSenderBuilder:(MinimumUserProtoWithFacebookId_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (InviteFbFriendsForSlotsResponseProto_Builder*) mergeSender:(MinimumUserProtoWithFacebookId*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProtoWithFacebookId defaultInstance]) {
    result.sender =
      [[[MinimumUserProtoWithFacebookId builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (InviteFbFriendsForSlotsResponseProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProtoWithFacebookId defaultInstance];
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (InviteFbFriendsForSlotsResponseProto_InviteFbFriendsForSlotsStatus) status {
  return result.status;
}
- (InviteFbFriendsForSlotsResponseProto_Builder*) setStatus:(InviteFbFriendsForSlotsResponseProto_InviteFbFriendsForSlotsStatus) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (InviteFbFriendsForSlotsResponseProto_Builder*) clearStatus {
  result.hasStatus = NO;
  result.status = InviteFbFriendsForSlotsResponseProto_InviteFbFriendsForSlotsStatusSuccess;
  return self;
}
- (NSArray*) invitesNewList {
  if (result.mutableInvitesNewList == nil) { return [NSArray array]; }
  return result.mutableInvitesNewList;
}
- (UserFacebookInviteForSlotProto*) invitesNewAtIndex:(int32_t) index {
  return [result invitesNewAtIndex:index];
}
- (InviteFbFriendsForSlotsResponseProto_Builder*) replaceInvitesNewAtIndex:(int32_t) index with:(UserFacebookInviteForSlotProto*) value {
  [result.mutableInvitesNewList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (InviteFbFriendsForSlotsResponseProto_Builder*) addAllInvitesNew:(NSArray*) values {
  if (result.mutableInvitesNewList == nil) {
    result.mutableInvitesNewList = [NSMutableArray array];
  }
  [result.mutableInvitesNewList addObjectsFromArray:values];
  return self;
}
- (InviteFbFriendsForSlotsResponseProto_Builder*) clearInvitesNewList {
  result.mutableInvitesNewList = nil;
  return self;
}
- (InviteFbFriendsForSlotsResponseProto_Builder*) addInvitesNew:(UserFacebookInviteForSlotProto*) value {
  if (result.mutableInvitesNewList == nil) {
    result.mutableInvitesNewList = [NSMutableArray array];
  }
  [result.mutableInvitesNewList addObject:value];
  return self;
}
@end

@interface AcceptAndRejectFbInviteForSlotsRequestProto ()
@property (retain) MinimumUserProtoWithFacebookId* sender;
@property (retain) NSMutableArray* mutableAcceptedInviteIdsList;
@property (retain) NSMutableArray* mutableRejectedInviteIdsList;
@end

@implementation AcceptAndRejectFbInviteForSlotsRequestProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value {
  hasSender_ = !!value;
}
@synthesize sender;
@synthesize mutableAcceptedInviteIdsList;
@synthesize mutableRejectedInviteIdsList;
- (void) dealloc {
  self.sender = nil;
  self.mutableAcceptedInviteIdsList = nil;
  self.mutableRejectedInviteIdsList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProtoWithFacebookId defaultInstance];
  }
  return self;
}
static AcceptAndRejectFbInviteForSlotsRequestProto* defaultAcceptAndRejectFbInviteForSlotsRequestProtoInstance = nil;
+ (void) initialize {
  if (self == [AcceptAndRejectFbInviteForSlotsRequestProto class]) {
    defaultAcceptAndRejectFbInviteForSlotsRequestProtoInstance = [[AcceptAndRejectFbInviteForSlotsRequestProto alloc] init];
  }
}
+ (AcceptAndRejectFbInviteForSlotsRequestProto*) defaultInstance {
  return defaultAcceptAndRejectFbInviteForSlotsRequestProtoInstance;
}
- (AcceptAndRejectFbInviteForSlotsRequestProto*) defaultInstance {
  return defaultAcceptAndRejectFbInviteForSlotsRequestProtoInstance;
}
- (NSArray*) acceptedInviteIdsList {
  return mutableAcceptedInviteIdsList;
}
- (int32_t) acceptedInviteIdsAtIndex:(int32_t) index {
  id value = [mutableAcceptedInviteIdsList objectAtIndex:index];
  return [value intValue];
}
- (NSArray*) rejectedInviteIdsList {
  return mutableRejectedInviteIdsList;
}
- (int32_t) rejectedInviteIdsAtIndex:(int32_t) index {
  id value = [mutableRejectedInviteIdsList objectAtIndex:index];
  return [value intValue];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  for (NSNumber* value in self.mutableAcceptedInviteIdsList) {
    [output writeInt32:2 value:[value intValue]];
  }
  for (NSNumber* value in self.mutableRejectedInviteIdsList) {
    [output writeInt32:3 value:[value intValue]];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSender) {
    size += computeMessageSize(1, self.sender);
  }
  {
    int32_t dataSize = 0;
    for (NSNumber* value in self.mutableAcceptedInviteIdsList) {
      dataSize += computeInt32SizeNoTag([value intValue]);
    }
    size += dataSize;
    size += 1 * self.mutableAcceptedInviteIdsList.count;
  }
  {
    int32_t dataSize = 0;
    for (NSNumber* value in self.mutableRejectedInviteIdsList) {
      dataSize += computeInt32SizeNoTag([value intValue]);
    }
    size += dataSize;
    size += 1 * self.mutableRejectedInviteIdsList.count;
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (AcceptAndRejectFbInviteForSlotsRequestProto*) parseFromData:(NSData*) data {
  return (AcceptAndRejectFbInviteForSlotsRequestProto*)[[[AcceptAndRejectFbInviteForSlotsRequestProto builder] mergeFromData:data] build];
}
+ (AcceptAndRejectFbInviteForSlotsRequestProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (AcceptAndRejectFbInviteForSlotsRequestProto*)[[[AcceptAndRejectFbInviteForSlotsRequestProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (AcceptAndRejectFbInviteForSlotsRequestProto*) parseFromInputStream:(NSInputStream*) input {
  return (AcceptAndRejectFbInviteForSlotsRequestProto*)[[[AcceptAndRejectFbInviteForSlotsRequestProto builder] mergeFromInputStream:input] build];
}
+ (AcceptAndRejectFbInviteForSlotsRequestProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (AcceptAndRejectFbInviteForSlotsRequestProto*)[[[AcceptAndRejectFbInviteForSlotsRequestProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (AcceptAndRejectFbInviteForSlotsRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (AcceptAndRejectFbInviteForSlotsRequestProto*)[[[AcceptAndRejectFbInviteForSlotsRequestProto builder] mergeFromCodedInputStream:input] build];
}
+ (AcceptAndRejectFbInviteForSlotsRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (AcceptAndRejectFbInviteForSlotsRequestProto*)[[[AcceptAndRejectFbInviteForSlotsRequestProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (AcceptAndRejectFbInviteForSlotsRequestProto_Builder*) builder {
  return [[[AcceptAndRejectFbInviteForSlotsRequestProto_Builder alloc] init] autorelease];
}
+ (AcceptAndRejectFbInviteForSlotsRequestProto_Builder*) builderWithPrototype:(AcceptAndRejectFbInviteForSlotsRequestProto*) prototype {
  return [[AcceptAndRejectFbInviteForSlotsRequestProto builder] mergeFrom:prototype];
}
- (AcceptAndRejectFbInviteForSlotsRequestProto_Builder*) builder {
  return [AcceptAndRejectFbInviteForSlotsRequestProto builder];
}
@end

@interface AcceptAndRejectFbInviteForSlotsRequestProto_Builder()
@property (retain) AcceptAndRejectFbInviteForSlotsRequestProto* result;
@end

@implementation AcceptAndRejectFbInviteForSlotsRequestProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[AcceptAndRejectFbInviteForSlotsRequestProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (AcceptAndRejectFbInviteForSlotsRequestProto_Builder*) clear {
  self.result = [[[AcceptAndRejectFbInviteForSlotsRequestProto alloc] init] autorelease];
  return self;
}
- (AcceptAndRejectFbInviteForSlotsRequestProto_Builder*) clone {
  return [AcceptAndRejectFbInviteForSlotsRequestProto builderWithPrototype:result];
}
- (AcceptAndRejectFbInviteForSlotsRequestProto*) defaultInstance {
  return [AcceptAndRejectFbInviteForSlotsRequestProto defaultInstance];
}
- (AcceptAndRejectFbInviteForSlotsRequestProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (AcceptAndRejectFbInviteForSlotsRequestProto*) buildPartial {
  AcceptAndRejectFbInviteForSlotsRequestProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (AcceptAndRejectFbInviteForSlotsRequestProto_Builder*) mergeFrom:(AcceptAndRejectFbInviteForSlotsRequestProto*) other {
  if (other == [AcceptAndRejectFbInviteForSlotsRequestProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.mutableAcceptedInviteIdsList.count > 0) {
    if (result.mutableAcceptedInviteIdsList == nil) {
      result.mutableAcceptedInviteIdsList = [NSMutableArray array];
    }
    [result.mutableAcceptedInviteIdsList addObjectsFromArray:other.mutableAcceptedInviteIdsList];
  }
  if (other.mutableRejectedInviteIdsList.count > 0) {
    if (result.mutableRejectedInviteIdsList == nil) {
      result.mutableRejectedInviteIdsList = [NSMutableArray array];
    }
    [result.mutableRejectedInviteIdsList addObjectsFromArray:other.mutableRejectedInviteIdsList];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (AcceptAndRejectFbInviteForSlotsRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (AcceptAndRejectFbInviteForSlotsRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProtoWithFacebookId_Builder* subBuilder = [MinimumUserProtoWithFacebookId builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self addAcceptedInviteIds:[input readInt32]];
        break;
      }
      case 24: {
        [self addRejectedInviteIds:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProtoWithFacebookId*) sender {
  return result.sender;
}
- (AcceptAndRejectFbInviteForSlotsRequestProto_Builder*) setSender:(MinimumUserProtoWithFacebookId*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (AcceptAndRejectFbInviteForSlotsRequestProto_Builder*) setSenderBuilder:(MinimumUserProtoWithFacebookId_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (AcceptAndRejectFbInviteForSlotsRequestProto_Builder*) mergeSender:(MinimumUserProtoWithFacebookId*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProtoWithFacebookId defaultInstance]) {
    result.sender =
      [[[MinimumUserProtoWithFacebookId builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (AcceptAndRejectFbInviteForSlotsRequestProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProtoWithFacebookId defaultInstance];
  return self;
}
- (NSArray*) acceptedInviteIdsList {
  if (result.mutableAcceptedInviteIdsList == nil) {
    return [NSArray array];
  }
  return result.mutableAcceptedInviteIdsList;
}
- (int32_t) acceptedInviteIdsAtIndex:(int32_t) index {
  return [result acceptedInviteIdsAtIndex:index];
}
- (AcceptAndRejectFbInviteForSlotsRequestProto_Builder*) replaceAcceptedInviteIdsAtIndex:(int32_t) index with:(int32_t) value {
  [result.mutableAcceptedInviteIdsList replaceObjectAtIndex:index withObject:[NSNumber numberWithInt:value]];
  return self;
}
- (AcceptAndRejectFbInviteForSlotsRequestProto_Builder*) addAcceptedInviteIds:(int32_t) value {
  if (result.mutableAcceptedInviteIdsList == nil) {
    result.mutableAcceptedInviteIdsList = [NSMutableArray array];
  }
  [result.mutableAcceptedInviteIdsList addObject:[NSNumber numberWithInt:value]];
  return self;
}
- (AcceptAndRejectFbInviteForSlotsRequestProto_Builder*) addAllAcceptedInviteIds:(NSArray*) values {
  if (result.mutableAcceptedInviteIdsList == nil) {
    result.mutableAcceptedInviteIdsList = [NSMutableArray array];
  }
  [result.mutableAcceptedInviteIdsList addObjectsFromArray:values];
  return self;
}
- (AcceptAndRejectFbInviteForSlotsRequestProto_Builder*) clearAcceptedInviteIdsList {
  result.mutableAcceptedInviteIdsList = nil;
  return self;
}
- (NSArray*) rejectedInviteIdsList {
  if (result.mutableRejectedInviteIdsList == nil) {
    return [NSArray array];
  }
  return result.mutableRejectedInviteIdsList;
}
- (int32_t) rejectedInviteIdsAtIndex:(int32_t) index {
  return [result rejectedInviteIdsAtIndex:index];
}
- (AcceptAndRejectFbInviteForSlotsRequestProto_Builder*) replaceRejectedInviteIdsAtIndex:(int32_t) index with:(int32_t) value {
  [result.mutableRejectedInviteIdsList replaceObjectAtIndex:index withObject:[NSNumber numberWithInt:value]];
  return self;
}
- (AcceptAndRejectFbInviteForSlotsRequestProto_Builder*) addRejectedInviteIds:(int32_t) value {
  if (result.mutableRejectedInviteIdsList == nil) {
    result.mutableRejectedInviteIdsList = [NSMutableArray array];
  }
  [result.mutableRejectedInviteIdsList addObject:[NSNumber numberWithInt:value]];
  return self;
}
- (AcceptAndRejectFbInviteForSlotsRequestProto_Builder*) addAllRejectedInviteIds:(NSArray*) values {
  if (result.mutableRejectedInviteIdsList == nil) {
    result.mutableRejectedInviteIdsList = [NSMutableArray array];
  }
  [result.mutableRejectedInviteIdsList addObjectsFromArray:values];
  return self;
}
- (AcceptAndRejectFbInviteForSlotsRequestProto_Builder*) clearRejectedInviteIdsList {
  result.mutableRejectedInviteIdsList = nil;
  return self;
}
@end

@interface AcceptAndRejectFbInviteForSlotsResponseProto ()
@property (retain) MinimumUserProtoWithFacebookId* sender;
@property AcceptAndRejectFbInviteForSlotsResponseProto_AcceptAndRejectFbInviteForSlotsStatus status;
@property (retain) NSMutableArray* mutableAcceptedInvitesList;
@end

@implementation AcceptAndRejectFbInviteForSlotsResponseProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value {
  hasSender_ = !!value;
}
@synthesize sender;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value {
  hasStatus_ = !!value;
}
@synthesize status;
@synthesize mutableAcceptedInvitesList;
- (void) dealloc {
  self.sender = nil;
  self.mutableAcceptedInvitesList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProtoWithFacebookId defaultInstance];
    self.status = AcceptAndRejectFbInviteForSlotsResponseProto_AcceptAndRejectFbInviteForSlotsStatusSuccess;
  }
  return self;
}
static AcceptAndRejectFbInviteForSlotsResponseProto* defaultAcceptAndRejectFbInviteForSlotsResponseProtoInstance = nil;
+ (void) initialize {
  if (self == [AcceptAndRejectFbInviteForSlotsResponseProto class]) {
    defaultAcceptAndRejectFbInviteForSlotsResponseProtoInstance = [[AcceptAndRejectFbInviteForSlotsResponseProto alloc] init];
  }
}
+ (AcceptAndRejectFbInviteForSlotsResponseProto*) defaultInstance {
  return defaultAcceptAndRejectFbInviteForSlotsResponseProtoInstance;
}
- (AcceptAndRejectFbInviteForSlotsResponseProto*) defaultInstance {
  return defaultAcceptAndRejectFbInviteForSlotsResponseProtoInstance;
}
- (NSArray*) acceptedInvitesList {
  return mutableAcceptedInvitesList;
}
- (UserFacebookInviteForSlotProto*) acceptedInvitesAtIndex:(int32_t) index {
  id value = [mutableAcceptedInvitesList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasStatus) {
    [output writeEnum:2 value:self.status];
  }
  for (UserFacebookInviteForSlotProto* element in self.acceptedInvitesList) {
    [output writeMessage:3 value:element];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSender) {
    size += computeMessageSize(1, self.sender);
  }
  if (self.hasStatus) {
    size += computeEnumSize(2, self.status);
  }
  for (UserFacebookInviteForSlotProto* element in self.acceptedInvitesList) {
    size += computeMessageSize(3, element);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (AcceptAndRejectFbInviteForSlotsResponseProto*) parseFromData:(NSData*) data {
  return (AcceptAndRejectFbInviteForSlotsResponseProto*)[[[AcceptAndRejectFbInviteForSlotsResponseProto builder] mergeFromData:data] build];
}
+ (AcceptAndRejectFbInviteForSlotsResponseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (AcceptAndRejectFbInviteForSlotsResponseProto*)[[[AcceptAndRejectFbInviteForSlotsResponseProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (AcceptAndRejectFbInviteForSlotsResponseProto*) parseFromInputStream:(NSInputStream*) input {
  return (AcceptAndRejectFbInviteForSlotsResponseProto*)[[[AcceptAndRejectFbInviteForSlotsResponseProto builder] mergeFromInputStream:input] build];
}
+ (AcceptAndRejectFbInviteForSlotsResponseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (AcceptAndRejectFbInviteForSlotsResponseProto*)[[[AcceptAndRejectFbInviteForSlotsResponseProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (AcceptAndRejectFbInviteForSlotsResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (AcceptAndRejectFbInviteForSlotsResponseProto*)[[[AcceptAndRejectFbInviteForSlotsResponseProto builder] mergeFromCodedInputStream:input] build];
}
+ (AcceptAndRejectFbInviteForSlotsResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (AcceptAndRejectFbInviteForSlotsResponseProto*)[[[AcceptAndRejectFbInviteForSlotsResponseProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (AcceptAndRejectFbInviteForSlotsResponseProto_Builder*) builder {
  return [[[AcceptAndRejectFbInviteForSlotsResponseProto_Builder alloc] init] autorelease];
}
+ (AcceptAndRejectFbInviteForSlotsResponseProto_Builder*) builderWithPrototype:(AcceptAndRejectFbInviteForSlotsResponseProto*) prototype {
  return [[AcceptAndRejectFbInviteForSlotsResponseProto builder] mergeFrom:prototype];
}
- (AcceptAndRejectFbInviteForSlotsResponseProto_Builder*) builder {
  return [AcceptAndRejectFbInviteForSlotsResponseProto builder];
}
@end

BOOL AcceptAndRejectFbInviteForSlotsResponseProto_AcceptAndRejectFbInviteForSlotsStatusIsValidValue(AcceptAndRejectFbInviteForSlotsResponseProto_AcceptAndRejectFbInviteForSlotsStatus value) {
  switch (value) {
    case AcceptAndRejectFbInviteForSlotsResponseProto_AcceptAndRejectFbInviteForSlotsStatusSuccess:
    case AcceptAndRejectFbInviteForSlotsResponseProto_AcceptAndRejectFbInviteForSlotsStatusFailExpired:
    case AcceptAndRejectFbInviteForSlotsResponseProto_AcceptAndRejectFbInviteForSlotsStatusFailAlreadyBeenUsed:
    case AcceptAndRejectFbInviteForSlotsResponseProto_AcceptAndRejectFbInviteForSlotsStatusFailOther:
      return YES;
    default:
      return NO;
  }
}
@interface AcceptAndRejectFbInviteForSlotsResponseProto_Builder()
@property (retain) AcceptAndRejectFbInviteForSlotsResponseProto* result;
@end

@implementation AcceptAndRejectFbInviteForSlotsResponseProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[AcceptAndRejectFbInviteForSlotsResponseProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (AcceptAndRejectFbInviteForSlotsResponseProto_Builder*) clear {
  self.result = [[[AcceptAndRejectFbInviteForSlotsResponseProto alloc] init] autorelease];
  return self;
}
- (AcceptAndRejectFbInviteForSlotsResponseProto_Builder*) clone {
  return [AcceptAndRejectFbInviteForSlotsResponseProto builderWithPrototype:result];
}
- (AcceptAndRejectFbInviteForSlotsResponseProto*) defaultInstance {
  return [AcceptAndRejectFbInviteForSlotsResponseProto defaultInstance];
}
- (AcceptAndRejectFbInviteForSlotsResponseProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (AcceptAndRejectFbInviteForSlotsResponseProto*) buildPartial {
  AcceptAndRejectFbInviteForSlotsResponseProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (AcceptAndRejectFbInviteForSlotsResponseProto_Builder*) mergeFrom:(AcceptAndRejectFbInviteForSlotsResponseProto*) other {
  if (other == [AcceptAndRejectFbInviteForSlotsResponseProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  if (other.mutableAcceptedInvitesList.count > 0) {
    if (result.mutableAcceptedInvitesList == nil) {
      result.mutableAcceptedInvitesList = [NSMutableArray array];
    }
    [result.mutableAcceptedInvitesList addObjectsFromArray:other.mutableAcceptedInvitesList];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (AcceptAndRejectFbInviteForSlotsResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (AcceptAndRejectFbInviteForSlotsResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProtoWithFacebookId_Builder* subBuilder = [MinimumUserProtoWithFacebookId builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        int32_t value = [input readEnum];
        if (AcceptAndRejectFbInviteForSlotsResponseProto_AcceptAndRejectFbInviteForSlotsStatusIsValidValue(value)) {
          [self setStatus:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
      case 26: {
        UserFacebookInviteForSlotProto_Builder* subBuilder = [UserFacebookInviteForSlotProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addAcceptedInvites:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProtoWithFacebookId*) sender {
  return result.sender;
}
- (AcceptAndRejectFbInviteForSlotsResponseProto_Builder*) setSender:(MinimumUserProtoWithFacebookId*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (AcceptAndRejectFbInviteForSlotsResponseProto_Builder*) setSenderBuilder:(MinimumUserProtoWithFacebookId_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (AcceptAndRejectFbInviteForSlotsResponseProto_Builder*) mergeSender:(MinimumUserProtoWithFacebookId*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProtoWithFacebookId defaultInstance]) {
    result.sender =
      [[[MinimumUserProtoWithFacebookId builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (AcceptAndRejectFbInviteForSlotsResponseProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProtoWithFacebookId defaultInstance];
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (AcceptAndRejectFbInviteForSlotsResponseProto_AcceptAndRejectFbInviteForSlotsStatus) status {
  return result.status;
}
- (AcceptAndRejectFbInviteForSlotsResponseProto_Builder*) setStatus:(AcceptAndRejectFbInviteForSlotsResponseProto_AcceptAndRejectFbInviteForSlotsStatus) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (AcceptAndRejectFbInviteForSlotsResponseProto_Builder*) clearStatus {
  result.hasStatus = NO;
  result.status = AcceptAndRejectFbInviteForSlotsResponseProto_AcceptAndRejectFbInviteForSlotsStatusSuccess;
  return self;
}
- (NSArray*) acceptedInvitesList {
  if (result.mutableAcceptedInvitesList == nil) { return [NSArray array]; }
  return result.mutableAcceptedInvitesList;
}
- (UserFacebookInviteForSlotProto*) acceptedInvitesAtIndex:(int32_t) index {
  return [result acceptedInvitesAtIndex:index];
}
- (AcceptAndRejectFbInviteForSlotsResponseProto_Builder*) replaceAcceptedInvitesAtIndex:(int32_t) index with:(UserFacebookInviteForSlotProto*) value {
  [result.mutableAcceptedInvitesList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (AcceptAndRejectFbInviteForSlotsResponseProto_Builder*) addAllAcceptedInvites:(NSArray*) values {
  if (result.mutableAcceptedInvitesList == nil) {
    result.mutableAcceptedInvitesList = [NSMutableArray array];
  }
  [result.mutableAcceptedInvitesList addObjectsFromArray:values];
  return self;
}
- (AcceptAndRejectFbInviteForSlotsResponseProto_Builder*) clearAcceptedInvitesList {
  result.mutableAcceptedInvitesList = nil;
  return self;
}
- (AcceptAndRejectFbInviteForSlotsResponseProto_Builder*) addAcceptedInvites:(UserFacebookInviteForSlotProto*) value {
  if (result.mutableAcceptedInvitesList == nil) {
    result.mutableAcceptedInvitesList = [NSMutableArray array];
  }
  [result.mutableAcceptedInvitesList addObject:value];
  return self;
}
@end

@interface CombineUserMonsterPiecesRequestProto ()
@property (retain) MinimumUserProto* sender;
@property (retain) NSMutableArray* mutableUserMonsterIdsList;
@property int32_t gemCost;
@end

@implementation CombineUserMonsterPiecesRequestProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value {
  hasSender_ = !!value;
}
@synthesize sender;
@synthesize mutableUserMonsterIdsList;
- (BOOL) hasGemCost {
  return !!hasGemCost_;
}
- (void) setHasGemCost:(BOOL) value {
  hasGemCost_ = !!value;
}
@synthesize gemCost;
- (void) dealloc {
  self.sender = nil;
  self.mutableUserMonsterIdsList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.gemCost = 0;
  }
  return self;
}
static CombineUserMonsterPiecesRequestProto* defaultCombineUserMonsterPiecesRequestProtoInstance = nil;
+ (void) initialize {
  if (self == [CombineUserMonsterPiecesRequestProto class]) {
    defaultCombineUserMonsterPiecesRequestProtoInstance = [[CombineUserMonsterPiecesRequestProto alloc] init];
  }
}
+ (CombineUserMonsterPiecesRequestProto*) defaultInstance {
  return defaultCombineUserMonsterPiecesRequestProtoInstance;
}
- (CombineUserMonsterPiecesRequestProto*) defaultInstance {
  return defaultCombineUserMonsterPiecesRequestProtoInstance;
}
- (NSArray*) userMonsterIdsList {
  return mutableUserMonsterIdsList;
}
- (int64_t) userMonsterIdsAtIndex:(int32_t) index {
  id value = [mutableUserMonsterIdsList objectAtIndex:index];
  return [value longLongValue];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  for (NSNumber* value in self.mutableUserMonsterIdsList) {
    [output writeInt64:2 value:[value longLongValue]];
  }
  if (self.hasGemCost) {
    [output writeInt32:3 value:self.gemCost];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSender) {
    size += computeMessageSize(1, self.sender);
  }
  {
    int32_t dataSize = 0;
    for (NSNumber* value in self.mutableUserMonsterIdsList) {
      dataSize += computeInt64SizeNoTag([value longLongValue]);
    }
    size += dataSize;
    size += 1 * self.mutableUserMonsterIdsList.count;
  }
  if (self.hasGemCost) {
    size += computeInt32Size(3, self.gemCost);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (CombineUserMonsterPiecesRequestProto*) parseFromData:(NSData*) data {
  return (CombineUserMonsterPiecesRequestProto*)[[[CombineUserMonsterPiecesRequestProto builder] mergeFromData:data] build];
}
+ (CombineUserMonsterPiecesRequestProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CombineUserMonsterPiecesRequestProto*)[[[CombineUserMonsterPiecesRequestProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CombineUserMonsterPiecesRequestProto*) parseFromInputStream:(NSInputStream*) input {
  return (CombineUserMonsterPiecesRequestProto*)[[[CombineUserMonsterPiecesRequestProto builder] mergeFromInputStream:input] build];
}
+ (CombineUserMonsterPiecesRequestProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CombineUserMonsterPiecesRequestProto*)[[[CombineUserMonsterPiecesRequestProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CombineUserMonsterPiecesRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CombineUserMonsterPiecesRequestProto*)[[[CombineUserMonsterPiecesRequestProto builder] mergeFromCodedInputStream:input] build];
}
+ (CombineUserMonsterPiecesRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CombineUserMonsterPiecesRequestProto*)[[[CombineUserMonsterPiecesRequestProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CombineUserMonsterPiecesRequestProto_Builder*) builder {
  return [[[CombineUserMonsterPiecesRequestProto_Builder alloc] init] autorelease];
}
+ (CombineUserMonsterPiecesRequestProto_Builder*) builderWithPrototype:(CombineUserMonsterPiecesRequestProto*) prototype {
  return [[CombineUserMonsterPiecesRequestProto builder] mergeFrom:prototype];
}
- (CombineUserMonsterPiecesRequestProto_Builder*) builder {
  return [CombineUserMonsterPiecesRequestProto builder];
}
@end

@interface CombineUserMonsterPiecesRequestProto_Builder()
@property (retain) CombineUserMonsterPiecesRequestProto* result;
@end

@implementation CombineUserMonsterPiecesRequestProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[CombineUserMonsterPiecesRequestProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (CombineUserMonsterPiecesRequestProto_Builder*) clear {
  self.result = [[[CombineUserMonsterPiecesRequestProto alloc] init] autorelease];
  return self;
}
- (CombineUserMonsterPiecesRequestProto_Builder*) clone {
  return [CombineUserMonsterPiecesRequestProto builderWithPrototype:result];
}
- (CombineUserMonsterPiecesRequestProto*) defaultInstance {
  return [CombineUserMonsterPiecesRequestProto defaultInstance];
}
- (CombineUserMonsterPiecesRequestProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CombineUserMonsterPiecesRequestProto*) buildPartial {
  CombineUserMonsterPiecesRequestProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (CombineUserMonsterPiecesRequestProto_Builder*) mergeFrom:(CombineUserMonsterPiecesRequestProto*) other {
  if (other == [CombineUserMonsterPiecesRequestProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.mutableUserMonsterIdsList.count > 0) {
    if (result.mutableUserMonsterIdsList == nil) {
      result.mutableUserMonsterIdsList = [NSMutableArray array];
    }
    [result.mutableUserMonsterIdsList addObjectsFromArray:other.mutableUserMonsterIdsList];
  }
  if (other.hasGemCost) {
    [self setGemCost:other.gemCost];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CombineUserMonsterPiecesRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CombineUserMonsterPiecesRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self addUserMonsterIds:[input readInt64]];
        break;
      }
      case 24: {
        [self setGemCost:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (CombineUserMonsterPiecesRequestProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (CombineUserMonsterPiecesRequestProto_Builder*) setSenderBuilder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (CombineUserMonsterPiecesRequestProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (CombineUserMonsterPiecesRequestProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (NSArray*) userMonsterIdsList {
  if (result.mutableUserMonsterIdsList == nil) {
    return [NSArray array];
  }
  return result.mutableUserMonsterIdsList;
}
- (int64_t) userMonsterIdsAtIndex:(int32_t) index {
  return [result userMonsterIdsAtIndex:index];
}
- (CombineUserMonsterPiecesRequestProto_Builder*) replaceUserMonsterIdsAtIndex:(int32_t) index with:(int64_t) value {
  [result.mutableUserMonsterIdsList replaceObjectAtIndex:index withObject:[NSNumber numberWithLongLong:value]];
  return self;
}
- (CombineUserMonsterPiecesRequestProto_Builder*) addUserMonsterIds:(int64_t) value {
  if (result.mutableUserMonsterIdsList == nil) {
    result.mutableUserMonsterIdsList = [NSMutableArray array];
  }
  [result.mutableUserMonsterIdsList addObject:[NSNumber numberWithLongLong:value]];
  return self;
}
- (CombineUserMonsterPiecesRequestProto_Builder*) addAllUserMonsterIds:(NSArray*) values {
  if (result.mutableUserMonsterIdsList == nil) {
    result.mutableUserMonsterIdsList = [NSMutableArray array];
  }
  [result.mutableUserMonsterIdsList addObjectsFromArray:values];
  return self;
}
- (CombineUserMonsterPiecesRequestProto_Builder*) clearUserMonsterIdsList {
  result.mutableUserMonsterIdsList = nil;
  return self;
}
- (BOOL) hasGemCost {
  return result.hasGemCost;
}
- (int32_t) gemCost {
  return result.gemCost;
}
- (CombineUserMonsterPiecesRequestProto_Builder*) setGemCost:(int32_t) value {
  result.hasGemCost = YES;
  result.gemCost = value;
  return self;
}
- (CombineUserMonsterPiecesRequestProto_Builder*) clearGemCost {
  result.hasGemCost = NO;
  result.gemCost = 0;
  return self;
}
@end

@interface CombineUserMonsterPiecesResponseProto ()
@property (retain) MinimumUserProto* sender;
@property CombineUserMonsterPiecesResponseProto_CombineUserMonsterPiecesStatus status;
@end

@implementation CombineUserMonsterPiecesResponseProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value {
  hasSender_ = !!value;
}
@synthesize sender;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value {
  hasStatus_ = !!value;
}
@synthesize status;
- (void) dealloc {
  self.sender = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProto defaultInstance];
    self.status = CombineUserMonsterPiecesResponseProto_CombineUserMonsterPiecesStatusSuccess;
  }
  return self;
}
static CombineUserMonsterPiecesResponseProto* defaultCombineUserMonsterPiecesResponseProtoInstance = nil;
+ (void) initialize {
  if (self == [CombineUserMonsterPiecesResponseProto class]) {
    defaultCombineUserMonsterPiecesResponseProtoInstance = [[CombineUserMonsterPiecesResponseProto alloc] init];
  }
}
+ (CombineUserMonsterPiecesResponseProto*) defaultInstance {
  return defaultCombineUserMonsterPiecesResponseProtoInstance;
}
- (CombineUserMonsterPiecesResponseProto*) defaultInstance {
  return defaultCombineUserMonsterPiecesResponseProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasStatus) {
    [output writeEnum:2 value:self.status];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSender) {
    size += computeMessageSize(1, self.sender);
  }
  if (self.hasStatus) {
    size += computeEnumSize(2, self.status);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (CombineUserMonsterPiecesResponseProto*) parseFromData:(NSData*) data {
  return (CombineUserMonsterPiecesResponseProto*)[[[CombineUserMonsterPiecesResponseProto builder] mergeFromData:data] build];
}
+ (CombineUserMonsterPiecesResponseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CombineUserMonsterPiecesResponseProto*)[[[CombineUserMonsterPiecesResponseProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CombineUserMonsterPiecesResponseProto*) parseFromInputStream:(NSInputStream*) input {
  return (CombineUserMonsterPiecesResponseProto*)[[[CombineUserMonsterPiecesResponseProto builder] mergeFromInputStream:input] build];
}
+ (CombineUserMonsterPiecesResponseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CombineUserMonsterPiecesResponseProto*)[[[CombineUserMonsterPiecesResponseProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CombineUserMonsterPiecesResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CombineUserMonsterPiecesResponseProto*)[[[CombineUserMonsterPiecesResponseProto builder] mergeFromCodedInputStream:input] build];
}
+ (CombineUserMonsterPiecesResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CombineUserMonsterPiecesResponseProto*)[[[CombineUserMonsterPiecesResponseProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CombineUserMonsterPiecesResponseProto_Builder*) builder {
  return [[[CombineUserMonsterPiecesResponseProto_Builder alloc] init] autorelease];
}
+ (CombineUserMonsterPiecesResponseProto_Builder*) builderWithPrototype:(CombineUserMonsterPiecesResponseProto*) prototype {
  return [[CombineUserMonsterPiecesResponseProto builder] mergeFrom:prototype];
}
- (CombineUserMonsterPiecesResponseProto_Builder*) builder {
  return [CombineUserMonsterPiecesResponseProto builder];
}
@end

BOOL CombineUserMonsterPiecesResponseProto_CombineUserMonsterPiecesStatusIsValidValue(CombineUserMonsterPiecesResponseProto_CombineUserMonsterPiecesStatus value) {
  switch (value) {
    case CombineUserMonsterPiecesResponseProto_CombineUserMonsterPiecesStatusSuccess:
    case CombineUserMonsterPiecesResponseProto_CombineUserMonsterPiecesStatusFailInsuffucientGems:
    case CombineUserMonsterPiecesResponseProto_CombineUserMonsterPiecesStatusFailMoreThanOneMonsterForSpeedup:
    case CombineUserMonsterPiecesResponseProto_CombineUserMonsterPiecesStatusFailOther:
      return YES;
    default:
      return NO;
  }
}
@interface CombineUserMonsterPiecesResponseProto_Builder()
@property (retain) CombineUserMonsterPiecesResponseProto* result;
@end

@implementation CombineUserMonsterPiecesResponseProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[CombineUserMonsterPiecesResponseProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (CombineUserMonsterPiecesResponseProto_Builder*) clear {
  self.result = [[[CombineUserMonsterPiecesResponseProto alloc] init] autorelease];
  return self;
}
- (CombineUserMonsterPiecesResponseProto_Builder*) clone {
  return [CombineUserMonsterPiecesResponseProto builderWithPrototype:result];
}
- (CombineUserMonsterPiecesResponseProto*) defaultInstance {
  return [CombineUserMonsterPiecesResponseProto defaultInstance];
}
- (CombineUserMonsterPiecesResponseProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CombineUserMonsterPiecesResponseProto*) buildPartial {
  CombineUserMonsterPiecesResponseProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (CombineUserMonsterPiecesResponseProto_Builder*) mergeFrom:(CombineUserMonsterPiecesResponseProto*) other {
  if (other == [CombineUserMonsterPiecesResponseProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CombineUserMonsterPiecesResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CombineUserMonsterPiecesResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        int32_t value = [input readEnum];
        if (CombineUserMonsterPiecesResponseProto_CombineUserMonsterPiecesStatusIsValidValue(value)) {
          [self setStatus:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProto*) sender {
  return result.sender;
}
- (CombineUserMonsterPiecesResponseProto_Builder*) setSender:(MinimumUserProto*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (CombineUserMonsterPiecesResponseProto_Builder*) setSenderBuilder:(MinimumUserProto_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (CombineUserMonsterPiecesResponseProto_Builder*) mergeSender:(MinimumUserProto*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProto defaultInstance]) {
    result.sender =
      [[[MinimumUserProto builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (CombineUserMonsterPiecesResponseProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (CombineUserMonsterPiecesResponseProto_CombineUserMonsterPiecesStatus) status {
  return result.status;
}
- (CombineUserMonsterPiecesResponseProto_Builder*) setStatus:(CombineUserMonsterPiecesResponseProto_CombineUserMonsterPiecesStatus) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (CombineUserMonsterPiecesResponseProto_Builder*) clearStatus {
  result.hasStatus = NO;
  result.status = CombineUserMonsterPiecesResponseProto_CombineUserMonsterPiecesStatusSuccess;
  return self;
}
@end

@interface SellUserMonsterRequestProto ()
@property (retain) MinimumUserProtoWithMaxResources* sender;
@property (retain) NSMutableArray* mutableSalesList;
@end

@implementation SellUserMonsterRequestProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value {
  hasSender_ = !!value;
}
@synthesize sender;
@synthesize mutableSalesList;
- (void) dealloc {
  self.sender = nil;
  self.mutableSalesList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProtoWithMaxResources defaultInstance];
  }
  return self;
}
static SellUserMonsterRequestProto* defaultSellUserMonsterRequestProtoInstance = nil;
+ (void) initialize {
  if (self == [SellUserMonsterRequestProto class]) {
    defaultSellUserMonsterRequestProtoInstance = [[SellUserMonsterRequestProto alloc] init];
  }
}
+ (SellUserMonsterRequestProto*) defaultInstance {
  return defaultSellUserMonsterRequestProtoInstance;
}
- (SellUserMonsterRequestProto*) defaultInstance {
  return defaultSellUserMonsterRequestProtoInstance;
}
- (NSArray*) salesList {
  return mutableSalesList;
}
- (MinimumUserMonsterSellProto*) salesAtIndex:(int32_t) index {
  id value = [mutableSalesList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  for (MinimumUserMonsterSellProto* element in self.salesList) {
    [output writeMessage:2 value:element];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSender) {
    size += computeMessageSize(1, self.sender);
  }
  for (MinimumUserMonsterSellProto* element in self.salesList) {
    size += computeMessageSize(2, element);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (SellUserMonsterRequestProto*) parseFromData:(NSData*) data {
  return (SellUserMonsterRequestProto*)[[[SellUserMonsterRequestProto builder] mergeFromData:data] build];
}
+ (SellUserMonsterRequestProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SellUserMonsterRequestProto*)[[[SellUserMonsterRequestProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (SellUserMonsterRequestProto*) parseFromInputStream:(NSInputStream*) input {
  return (SellUserMonsterRequestProto*)[[[SellUserMonsterRequestProto builder] mergeFromInputStream:input] build];
}
+ (SellUserMonsterRequestProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SellUserMonsterRequestProto*)[[[SellUserMonsterRequestProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SellUserMonsterRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (SellUserMonsterRequestProto*)[[[SellUserMonsterRequestProto builder] mergeFromCodedInputStream:input] build];
}
+ (SellUserMonsterRequestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SellUserMonsterRequestProto*)[[[SellUserMonsterRequestProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SellUserMonsterRequestProto_Builder*) builder {
  return [[[SellUserMonsterRequestProto_Builder alloc] init] autorelease];
}
+ (SellUserMonsterRequestProto_Builder*) builderWithPrototype:(SellUserMonsterRequestProto*) prototype {
  return [[SellUserMonsterRequestProto builder] mergeFrom:prototype];
}
- (SellUserMonsterRequestProto_Builder*) builder {
  return [SellUserMonsterRequestProto builder];
}
@end

@interface SellUserMonsterRequestProto_Builder()
@property (retain) SellUserMonsterRequestProto* result;
@end

@implementation SellUserMonsterRequestProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[SellUserMonsterRequestProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (SellUserMonsterRequestProto_Builder*) clear {
  self.result = [[[SellUserMonsterRequestProto alloc] init] autorelease];
  return self;
}
- (SellUserMonsterRequestProto_Builder*) clone {
  return [SellUserMonsterRequestProto builderWithPrototype:result];
}
- (SellUserMonsterRequestProto*) defaultInstance {
  return [SellUserMonsterRequestProto defaultInstance];
}
- (SellUserMonsterRequestProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (SellUserMonsterRequestProto*) buildPartial {
  SellUserMonsterRequestProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (SellUserMonsterRequestProto_Builder*) mergeFrom:(SellUserMonsterRequestProto*) other {
  if (other == [SellUserMonsterRequestProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.mutableSalesList.count > 0) {
    if (result.mutableSalesList == nil) {
      result.mutableSalesList = [NSMutableArray array];
    }
    [result.mutableSalesList addObjectsFromArray:other.mutableSalesList];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (SellUserMonsterRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (SellUserMonsterRequestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProtoWithMaxResources_Builder* subBuilder = [MinimumUserProtoWithMaxResources builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        MinimumUserMonsterSellProto_Builder* subBuilder = [MinimumUserMonsterSellProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addSales:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProtoWithMaxResources*) sender {
  return result.sender;
}
- (SellUserMonsterRequestProto_Builder*) setSender:(MinimumUserProtoWithMaxResources*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (SellUserMonsterRequestProto_Builder*) setSenderBuilder:(MinimumUserProtoWithMaxResources_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (SellUserMonsterRequestProto_Builder*) mergeSender:(MinimumUserProtoWithMaxResources*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProtoWithMaxResources defaultInstance]) {
    result.sender =
      [[[MinimumUserProtoWithMaxResources builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (SellUserMonsterRequestProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProtoWithMaxResources defaultInstance];
  return self;
}
- (NSArray*) salesList {
  if (result.mutableSalesList == nil) { return [NSArray array]; }
  return result.mutableSalesList;
}
- (MinimumUserMonsterSellProto*) salesAtIndex:(int32_t) index {
  return [result salesAtIndex:index];
}
- (SellUserMonsterRequestProto_Builder*) replaceSalesAtIndex:(int32_t) index with:(MinimumUserMonsterSellProto*) value {
  [result.mutableSalesList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (SellUserMonsterRequestProto_Builder*) addAllSales:(NSArray*) values {
  if (result.mutableSalesList == nil) {
    result.mutableSalesList = [NSMutableArray array];
  }
  [result.mutableSalesList addObjectsFromArray:values];
  return self;
}
- (SellUserMonsterRequestProto_Builder*) clearSalesList {
  result.mutableSalesList = nil;
  return self;
}
- (SellUserMonsterRequestProto_Builder*) addSales:(MinimumUserMonsterSellProto*) value {
  if (result.mutableSalesList == nil) {
    result.mutableSalesList = [NSMutableArray array];
  }
  [result.mutableSalesList addObject:value];
  return self;
}
@end

@interface SellUserMonsterResponseProto ()
@property (retain) MinimumUserProtoWithMaxResources* sender;
@property SellUserMonsterResponseProto_SellUserMonsterStatus status;
@end

@implementation SellUserMonsterResponseProto

- (BOOL) hasSender {
  return !!hasSender_;
}
- (void) setHasSender:(BOOL) value {
  hasSender_ = !!value;
}
@synthesize sender;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value {
  hasStatus_ = !!value;
}
@synthesize status;
- (void) dealloc {
  self.sender = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sender = [MinimumUserProtoWithMaxResources defaultInstance];
    self.status = SellUserMonsterResponseProto_SellUserMonsterStatusSuccess;
  }
  return self;
}
static SellUserMonsterResponseProto* defaultSellUserMonsterResponseProtoInstance = nil;
+ (void) initialize {
  if (self == [SellUserMonsterResponseProto class]) {
    defaultSellUserMonsterResponseProtoInstance = [[SellUserMonsterResponseProto alloc] init];
  }
}
+ (SellUserMonsterResponseProto*) defaultInstance {
  return defaultSellUserMonsterResponseProtoInstance;
}
- (SellUserMonsterResponseProto*) defaultInstance {
  return defaultSellUserMonsterResponseProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSender) {
    [output writeMessage:1 value:self.sender];
  }
  if (self.hasStatus) {
    [output writeEnum:2 value:self.status];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSender) {
    size += computeMessageSize(1, self.sender);
  }
  if (self.hasStatus) {
    size += computeEnumSize(2, self.status);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (SellUserMonsterResponseProto*) parseFromData:(NSData*) data {
  return (SellUserMonsterResponseProto*)[[[SellUserMonsterResponseProto builder] mergeFromData:data] build];
}
+ (SellUserMonsterResponseProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SellUserMonsterResponseProto*)[[[SellUserMonsterResponseProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (SellUserMonsterResponseProto*) parseFromInputStream:(NSInputStream*) input {
  return (SellUserMonsterResponseProto*)[[[SellUserMonsterResponseProto builder] mergeFromInputStream:input] build];
}
+ (SellUserMonsterResponseProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SellUserMonsterResponseProto*)[[[SellUserMonsterResponseProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SellUserMonsterResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (SellUserMonsterResponseProto*)[[[SellUserMonsterResponseProto builder] mergeFromCodedInputStream:input] build];
}
+ (SellUserMonsterResponseProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SellUserMonsterResponseProto*)[[[SellUserMonsterResponseProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SellUserMonsterResponseProto_Builder*) builder {
  return [[[SellUserMonsterResponseProto_Builder alloc] init] autorelease];
}
+ (SellUserMonsterResponseProto_Builder*) builderWithPrototype:(SellUserMonsterResponseProto*) prototype {
  return [[SellUserMonsterResponseProto builder] mergeFrom:prototype];
}
- (SellUserMonsterResponseProto_Builder*) builder {
  return [SellUserMonsterResponseProto builder];
}
@end

BOOL SellUserMonsterResponseProto_SellUserMonsterStatusIsValidValue(SellUserMonsterResponseProto_SellUserMonsterStatus value) {
  switch (value) {
    case SellUserMonsterResponseProto_SellUserMonsterStatusSuccess:
    case SellUserMonsterResponseProto_SellUserMonsterStatusFailOther:
      return YES;
    default:
      return NO;
  }
}
@interface SellUserMonsterResponseProto_Builder()
@property (retain) SellUserMonsterResponseProto* result;
@end

@implementation SellUserMonsterResponseProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[SellUserMonsterResponseProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (SellUserMonsterResponseProto_Builder*) clear {
  self.result = [[[SellUserMonsterResponseProto alloc] init] autorelease];
  return self;
}
- (SellUserMonsterResponseProto_Builder*) clone {
  return [SellUserMonsterResponseProto builderWithPrototype:result];
}
- (SellUserMonsterResponseProto*) defaultInstance {
  return [SellUserMonsterResponseProto defaultInstance];
}
- (SellUserMonsterResponseProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (SellUserMonsterResponseProto*) buildPartial {
  SellUserMonsterResponseProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (SellUserMonsterResponseProto_Builder*) mergeFrom:(SellUserMonsterResponseProto*) other {
  if (other == [SellUserMonsterResponseProto defaultInstance]) {
    return self;
  }
  if (other.hasSender) {
    [self mergeSender:other.sender];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (SellUserMonsterResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (SellUserMonsterResponseProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProtoWithMaxResources_Builder* subBuilder = [MinimumUserProtoWithMaxResources builder];
        if (self.hasSender) {
          [subBuilder mergeFrom:self.sender];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSender:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        int32_t value = [input readEnum];
        if (SellUserMonsterResponseProto_SellUserMonsterStatusIsValidValue(value)) {
          [self setStatus:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
    }
  }
}
- (BOOL) hasSender {
  return result.hasSender;
}
- (MinimumUserProtoWithMaxResources*) sender {
  return result.sender;
}
- (SellUserMonsterResponseProto_Builder*) setSender:(MinimumUserProtoWithMaxResources*) value {
  result.hasSender = YES;
  result.sender = value;
  return self;
}
- (SellUserMonsterResponseProto_Builder*) setSenderBuilder:(MinimumUserProtoWithMaxResources_Builder*) builderForValue {
  return [self setSender:[builderForValue build]];
}
- (SellUserMonsterResponseProto_Builder*) mergeSender:(MinimumUserProtoWithMaxResources*) value {
  if (result.hasSender &&
      result.sender != [MinimumUserProtoWithMaxResources defaultInstance]) {
    result.sender =
      [[[MinimumUserProtoWithMaxResources builderWithPrototype:result.sender] mergeFrom:value] buildPartial];
  } else {
    result.sender = value;
  }
  result.hasSender = YES;
  return self;
}
- (SellUserMonsterResponseProto_Builder*) clearSender {
  result.hasSender = NO;
  result.sender = [MinimumUserProtoWithMaxResources defaultInstance];
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (SellUserMonsterResponseProto_SellUserMonsterStatus) status {
  return result.status;
}
- (SellUserMonsterResponseProto_Builder*) setStatus:(SellUserMonsterResponseProto_SellUserMonsterStatus) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (SellUserMonsterResponseProto_Builder*) clearStatus {
  result.hasStatus = NO;
  result.status = SellUserMonsterResponseProto_SellUserMonsterStatusSuccess;
  return self;
}
@end


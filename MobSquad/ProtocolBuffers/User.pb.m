// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "User.pb.h"

@implementation UserRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [UserRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface MinimumClanProto ()
@property int32_t clanId;
@property (retain) NSString* name;
@property int64_t createTime;
@property (retain) NSString* description;
@property (retain) NSString* tag;
@property BOOL requestToJoinRequired;
@property int32_t clanIconId;
@end

@implementation MinimumClanProto

- (BOOL) hasClanId {
  return !!hasClanId_;
}
- (void) setHasClanId:(BOOL) value {
  hasClanId_ = !!value;
}
@synthesize clanId;
- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) value {
  hasName_ = !!value;
}
@synthesize name;
- (BOOL) hasCreateTime {
  return !!hasCreateTime_;
}
- (void) setHasCreateTime:(BOOL) value {
  hasCreateTime_ = !!value;
}
@synthesize createTime;
- (BOOL) hasDescription {
  return !!hasDescription_;
}
- (void) setHasDescription:(BOOL) value {
  hasDescription_ = !!value;
}
@synthesize description;
- (BOOL) hasTag {
  return !!hasTag_;
}
- (void) setHasTag:(BOOL) value {
  hasTag_ = !!value;
}
@synthesize tag;
- (BOOL) hasRequestToJoinRequired {
  return !!hasRequestToJoinRequired_;
}
- (void) setHasRequestToJoinRequired:(BOOL) value {
  hasRequestToJoinRequired_ = !!value;
}
- (BOOL) requestToJoinRequired {
  return !!requestToJoinRequired_;
}
- (void) setRequestToJoinRequired:(BOOL) value {
  requestToJoinRequired_ = !!value;
}
- (BOOL) hasClanIconId {
  return !!hasClanIconId_;
}
- (void) setHasClanIconId:(BOOL) value {
  hasClanIconId_ = !!value;
}
@synthesize clanIconId;
- (void) dealloc {
  self.name = nil;
  self.description = nil;
  self.tag = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.clanId = 0;
    self.name = @"";
    self.createTime = 0L;
    self.description = @"";
    self.tag = @"";
    self.requestToJoinRequired = NO;
    self.clanIconId = 0;
  }
  return self;
}
static MinimumClanProto* defaultMinimumClanProtoInstance = nil;
+ (void) initialize {
  if (self == [MinimumClanProto class]) {
    defaultMinimumClanProtoInstance = [[MinimumClanProto alloc] init];
  }
}
+ (MinimumClanProto*) defaultInstance {
  return defaultMinimumClanProtoInstance;
}
- (MinimumClanProto*) defaultInstance {
  return defaultMinimumClanProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasClanId) {
    [output writeInt32:1 value:self.clanId];
  }
  if (self.hasName) {
    [output writeString:2 value:self.name];
  }
  if (self.hasCreateTime) {
    [output writeInt64:4 value:self.createTime];
  }
  if (self.hasDescription) {
    [output writeString:5 value:self.description];
  }
  if (self.hasTag) {
    [output writeString:6 value:self.tag];
  }
  if (self.hasRequestToJoinRequired) {
    [output writeBool:7 value:self.requestToJoinRequired];
  }
  if (self.hasClanIconId) {
    [output writeInt32:8 value:self.clanIconId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasClanId) {
    size += computeInt32Size(1, self.clanId);
  }
  if (self.hasName) {
    size += computeStringSize(2, self.name);
  }
  if (self.hasCreateTime) {
    size += computeInt64Size(4, self.createTime);
  }
  if (self.hasDescription) {
    size += computeStringSize(5, self.description);
  }
  if (self.hasTag) {
    size += computeStringSize(6, self.tag);
  }
  if (self.hasRequestToJoinRequired) {
    size += computeBoolSize(7, self.requestToJoinRequired);
  }
  if (self.hasClanIconId) {
    size += computeInt32Size(8, self.clanIconId);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (MinimumClanProto*) parseFromData:(NSData*) data {
  return (MinimumClanProto*)[[[MinimumClanProto builder] mergeFromData:data] build];
}
+ (MinimumClanProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MinimumClanProto*)[[[MinimumClanProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (MinimumClanProto*) parseFromInputStream:(NSInputStream*) input {
  return (MinimumClanProto*)[[[MinimumClanProto builder] mergeFromInputStream:input] build];
}
+ (MinimumClanProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MinimumClanProto*)[[[MinimumClanProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MinimumClanProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (MinimumClanProto*)[[[MinimumClanProto builder] mergeFromCodedInputStream:input] build];
}
+ (MinimumClanProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MinimumClanProto*)[[[MinimumClanProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MinimumClanProto_Builder*) builder {
  return [[[MinimumClanProto_Builder alloc] init] autorelease];
}
+ (MinimumClanProto_Builder*) builderWithPrototype:(MinimumClanProto*) prototype {
  return [[MinimumClanProto builder] mergeFrom:prototype];
}
- (MinimumClanProto_Builder*) builder {
  return [MinimumClanProto builder];
}
@end

@interface MinimumClanProto_Builder()
@property (retain) MinimumClanProto* result;
@end

@implementation MinimumClanProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[MinimumClanProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (MinimumClanProto_Builder*) clear {
  self.result = [[[MinimumClanProto alloc] init] autorelease];
  return self;
}
- (MinimumClanProto_Builder*) clone {
  return [MinimumClanProto builderWithPrototype:result];
}
- (MinimumClanProto*) defaultInstance {
  return [MinimumClanProto defaultInstance];
}
- (MinimumClanProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (MinimumClanProto*) buildPartial {
  MinimumClanProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (MinimumClanProto_Builder*) mergeFrom:(MinimumClanProto*) other {
  if (other == [MinimumClanProto defaultInstance]) {
    return self;
  }
  if (other.hasClanId) {
    [self setClanId:other.clanId];
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.hasCreateTime) {
    [self setCreateTime:other.createTime];
  }
  if (other.hasDescription) {
    [self setDescription:other.description];
  }
  if (other.hasTag) {
    [self setTag:other.tag];
  }
  if (other.hasRequestToJoinRequired) {
    [self setRequestToJoinRequired:other.requestToJoinRequired];
  }
  if (other.hasClanIconId) {
    [self setClanIconId:other.clanIconId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (MinimumClanProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (MinimumClanProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setClanId:[input readInt32]];
        break;
      }
      case 18: {
        [self setName:[input readString]];
        break;
      }
      case 32: {
        [self setCreateTime:[input readInt64]];
        break;
      }
      case 42: {
        [self setDescription:[input readString]];
        break;
      }
      case 50: {
        [self setTag:[input readString]];
        break;
      }
      case 56: {
        [self setRequestToJoinRequired:[input readBool]];
        break;
      }
      case 64: {
        [self setClanIconId:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasClanId {
  return result.hasClanId;
}
- (int32_t) clanId {
  return result.clanId;
}
- (MinimumClanProto_Builder*) setClanId:(int32_t) value {
  result.hasClanId = YES;
  result.clanId = value;
  return self;
}
- (MinimumClanProto_Builder*) clearClanId {
  result.hasClanId = NO;
  result.clanId = 0;
  return self;
}
- (BOOL) hasName {
  return result.hasName;
}
- (NSString*) name {
  return result.name;
}
- (MinimumClanProto_Builder*) setName:(NSString*) value {
  result.hasName = YES;
  result.name = value;
  return self;
}
- (MinimumClanProto_Builder*) clearName {
  result.hasName = NO;
  result.name = @"";
  return self;
}
- (BOOL) hasCreateTime {
  return result.hasCreateTime;
}
- (int64_t) createTime {
  return result.createTime;
}
- (MinimumClanProto_Builder*) setCreateTime:(int64_t) value {
  result.hasCreateTime = YES;
  result.createTime = value;
  return self;
}
- (MinimumClanProto_Builder*) clearCreateTime {
  result.hasCreateTime = NO;
  result.createTime = 0L;
  return self;
}
- (BOOL) hasDescription {
  return result.hasDescription;
}
- (NSString*) description {
  return result.description;
}
- (MinimumClanProto_Builder*) setDescription:(NSString*) value {
  result.hasDescription = YES;
  result.description = value;
  return self;
}
- (MinimumClanProto_Builder*) clearDescription {
  result.hasDescription = NO;
  result.description = @"";
  return self;
}
- (BOOL) hasTag {
  return result.hasTag;
}
- (NSString*) tag {
  return result.tag;
}
- (MinimumClanProto_Builder*) setTag:(NSString*) value {
  result.hasTag = YES;
  result.tag = value;
  return self;
}
- (MinimumClanProto_Builder*) clearTag {
  result.hasTag = NO;
  result.tag = @"";
  return self;
}
- (BOOL) hasRequestToJoinRequired {
  return result.hasRequestToJoinRequired;
}
- (BOOL) requestToJoinRequired {
  return result.requestToJoinRequired;
}
- (MinimumClanProto_Builder*) setRequestToJoinRequired:(BOOL) value {
  result.hasRequestToJoinRequired = YES;
  result.requestToJoinRequired = value;
  return self;
}
- (MinimumClanProto_Builder*) clearRequestToJoinRequired {
  result.hasRequestToJoinRequired = NO;
  result.requestToJoinRequired = NO;
  return self;
}
- (BOOL) hasClanIconId {
  return result.hasClanIconId;
}
- (int32_t) clanIconId {
  return result.clanIconId;
}
- (MinimumClanProto_Builder*) setClanIconId:(int32_t) value {
  result.hasClanIconId = YES;
  result.clanIconId = value;
  return self;
}
- (MinimumClanProto_Builder*) clearClanIconId {
  result.hasClanIconId = NO;
  result.clanIconId = 0;
  return self;
}
@end

@interface MinimumUserProto ()
@property int32_t userId;
@property (retain) NSString* name;
@property (retain) MinimumClanProto* clan;
@end

@implementation MinimumUserProto

- (BOOL) hasUserId {
  return !!hasUserId_;
}
- (void) setHasUserId:(BOOL) value {
  hasUserId_ = !!value;
}
@synthesize userId;
- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) value {
  hasName_ = !!value;
}
@synthesize name;
- (BOOL) hasClan {
  return !!hasClan_;
}
- (void) setHasClan:(BOOL) value {
  hasClan_ = !!value;
}
@synthesize clan;
- (void) dealloc {
  self.name = nil;
  self.clan = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.userId = 0;
    self.name = @"";
    self.clan = [MinimumClanProto defaultInstance];
  }
  return self;
}
static MinimumUserProto* defaultMinimumUserProtoInstance = nil;
+ (void) initialize {
  if (self == [MinimumUserProto class]) {
    defaultMinimumUserProtoInstance = [[MinimumUserProto alloc] init];
  }
}
+ (MinimumUserProto*) defaultInstance {
  return defaultMinimumUserProtoInstance;
}
- (MinimumUserProto*) defaultInstance {
  return defaultMinimumUserProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUserId) {
    [output writeInt32:1 value:self.userId];
  }
  if (self.hasName) {
    [output writeString:2 value:self.name];
  }
  if (self.hasClan) {
    [output writeMessage:3 value:self.clan];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasUserId) {
    size += computeInt32Size(1, self.userId);
  }
  if (self.hasName) {
    size += computeStringSize(2, self.name);
  }
  if (self.hasClan) {
    size += computeMessageSize(3, self.clan);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (MinimumUserProto*) parseFromData:(NSData*) data {
  return (MinimumUserProto*)[[[MinimumUserProto builder] mergeFromData:data] build];
}
+ (MinimumUserProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MinimumUserProto*)[[[MinimumUserProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (MinimumUserProto*) parseFromInputStream:(NSInputStream*) input {
  return (MinimumUserProto*)[[[MinimumUserProto builder] mergeFromInputStream:input] build];
}
+ (MinimumUserProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MinimumUserProto*)[[[MinimumUserProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MinimumUserProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (MinimumUserProto*)[[[MinimumUserProto builder] mergeFromCodedInputStream:input] build];
}
+ (MinimumUserProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MinimumUserProto*)[[[MinimumUserProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MinimumUserProto_Builder*) builder {
  return [[[MinimumUserProto_Builder alloc] init] autorelease];
}
+ (MinimumUserProto_Builder*) builderWithPrototype:(MinimumUserProto*) prototype {
  return [[MinimumUserProto builder] mergeFrom:prototype];
}
- (MinimumUserProto_Builder*) builder {
  return [MinimumUserProto builder];
}
@end

@interface MinimumUserProto_Builder()
@property (retain) MinimumUserProto* result;
@end

@implementation MinimumUserProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[MinimumUserProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (MinimumUserProto_Builder*) clear {
  self.result = [[[MinimumUserProto alloc] init] autorelease];
  return self;
}
- (MinimumUserProto_Builder*) clone {
  return [MinimumUserProto builderWithPrototype:result];
}
- (MinimumUserProto*) defaultInstance {
  return [MinimumUserProto defaultInstance];
}
- (MinimumUserProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (MinimumUserProto*) buildPartial {
  MinimumUserProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (MinimumUserProto_Builder*) mergeFrom:(MinimumUserProto*) other {
  if (other == [MinimumUserProto defaultInstance]) {
    return self;
  }
  if (other.hasUserId) {
    [self setUserId:other.userId];
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.hasClan) {
    [self mergeClan:other.clan];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (MinimumUserProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (MinimumUserProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setUserId:[input readInt32]];
        break;
      }
      case 18: {
        [self setName:[input readString]];
        break;
      }
      case 26: {
        MinimumClanProto_Builder* subBuilder = [MinimumClanProto builder];
        if (self.hasClan) {
          [subBuilder mergeFrom:self.clan];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setClan:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasUserId {
  return result.hasUserId;
}
- (int32_t) userId {
  return result.userId;
}
- (MinimumUserProto_Builder*) setUserId:(int32_t) value {
  result.hasUserId = YES;
  result.userId = value;
  return self;
}
- (MinimumUserProto_Builder*) clearUserId {
  result.hasUserId = NO;
  result.userId = 0;
  return self;
}
- (BOOL) hasName {
  return result.hasName;
}
- (NSString*) name {
  return result.name;
}
- (MinimumUserProto_Builder*) setName:(NSString*) value {
  result.hasName = YES;
  result.name = value;
  return self;
}
- (MinimumUserProto_Builder*) clearName {
  result.hasName = NO;
  result.name = @"";
  return self;
}
- (BOOL) hasClan {
  return result.hasClan;
}
- (MinimumClanProto*) clan {
  return result.clan;
}
- (MinimumUserProto_Builder*) setClan:(MinimumClanProto*) value {
  result.hasClan = YES;
  result.clan = value;
  return self;
}
- (MinimumUserProto_Builder*) setClanBuilder:(MinimumClanProto_Builder*) builderForValue {
  return [self setClan:[builderForValue build]];
}
- (MinimumUserProto_Builder*) mergeClan:(MinimumClanProto*) value {
  if (result.hasClan &&
      result.clan != [MinimumClanProto defaultInstance]) {
    result.clan =
      [[[MinimumClanProto builderWithPrototype:result.clan] mergeFrom:value] buildPartial];
  } else {
    result.clan = value;
  }
  result.hasClan = YES;
  return self;
}
- (MinimumUserProto_Builder*) clearClan {
  result.hasClan = NO;
  result.clan = [MinimumClanProto defaultInstance];
  return self;
}
@end

@interface MinimumUserProtoWithLevel ()
@property (retain) MinimumUserProto* minUserProto;
@property int32_t level;
@end

@implementation MinimumUserProtoWithLevel

- (BOOL) hasMinUserProto {
  return !!hasMinUserProto_;
}
- (void) setHasMinUserProto:(BOOL) value {
  hasMinUserProto_ = !!value;
}
@synthesize minUserProto;
- (BOOL) hasLevel {
  return !!hasLevel_;
}
- (void) setHasLevel:(BOOL) value {
  hasLevel_ = !!value;
}
@synthesize level;
- (void) dealloc {
  self.minUserProto = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.minUserProto = [MinimumUserProto defaultInstance];
    self.level = 0;
  }
  return self;
}
static MinimumUserProtoWithLevel* defaultMinimumUserProtoWithLevelInstance = nil;
+ (void) initialize {
  if (self == [MinimumUserProtoWithLevel class]) {
    defaultMinimumUserProtoWithLevelInstance = [[MinimumUserProtoWithLevel alloc] init];
  }
}
+ (MinimumUserProtoWithLevel*) defaultInstance {
  return defaultMinimumUserProtoWithLevelInstance;
}
- (MinimumUserProtoWithLevel*) defaultInstance {
  return defaultMinimumUserProtoWithLevelInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasMinUserProto) {
    [output writeMessage:1 value:self.minUserProto];
  }
  if (self.hasLevel) {
    [output writeInt32:2 value:self.level];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasMinUserProto) {
    size += computeMessageSize(1, self.minUserProto);
  }
  if (self.hasLevel) {
    size += computeInt32Size(2, self.level);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (MinimumUserProtoWithLevel*) parseFromData:(NSData*) data {
  return (MinimumUserProtoWithLevel*)[[[MinimumUserProtoWithLevel builder] mergeFromData:data] build];
}
+ (MinimumUserProtoWithLevel*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MinimumUserProtoWithLevel*)[[[MinimumUserProtoWithLevel builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (MinimumUserProtoWithLevel*) parseFromInputStream:(NSInputStream*) input {
  return (MinimumUserProtoWithLevel*)[[[MinimumUserProtoWithLevel builder] mergeFromInputStream:input] build];
}
+ (MinimumUserProtoWithLevel*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MinimumUserProtoWithLevel*)[[[MinimumUserProtoWithLevel builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MinimumUserProtoWithLevel*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (MinimumUserProtoWithLevel*)[[[MinimumUserProtoWithLevel builder] mergeFromCodedInputStream:input] build];
}
+ (MinimumUserProtoWithLevel*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MinimumUserProtoWithLevel*)[[[MinimumUserProtoWithLevel builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MinimumUserProtoWithLevel_Builder*) builder {
  return [[[MinimumUserProtoWithLevel_Builder alloc] init] autorelease];
}
+ (MinimumUserProtoWithLevel_Builder*) builderWithPrototype:(MinimumUserProtoWithLevel*) prototype {
  return [[MinimumUserProtoWithLevel builder] mergeFrom:prototype];
}
- (MinimumUserProtoWithLevel_Builder*) builder {
  return [MinimumUserProtoWithLevel builder];
}
@end

@interface MinimumUserProtoWithLevel_Builder()
@property (retain) MinimumUserProtoWithLevel* result;
@end

@implementation MinimumUserProtoWithLevel_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[MinimumUserProtoWithLevel alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (MinimumUserProtoWithLevel_Builder*) clear {
  self.result = [[[MinimumUserProtoWithLevel alloc] init] autorelease];
  return self;
}
- (MinimumUserProtoWithLevel_Builder*) clone {
  return [MinimumUserProtoWithLevel builderWithPrototype:result];
}
- (MinimumUserProtoWithLevel*) defaultInstance {
  return [MinimumUserProtoWithLevel defaultInstance];
}
- (MinimumUserProtoWithLevel*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (MinimumUserProtoWithLevel*) buildPartial {
  MinimumUserProtoWithLevel* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (MinimumUserProtoWithLevel_Builder*) mergeFrom:(MinimumUserProtoWithLevel*) other {
  if (other == [MinimumUserProtoWithLevel defaultInstance]) {
    return self;
  }
  if (other.hasMinUserProto) {
    [self mergeMinUserProto:other.minUserProto];
  }
  if (other.hasLevel) {
    [self setLevel:other.level];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (MinimumUserProtoWithLevel_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (MinimumUserProtoWithLevel_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasMinUserProto) {
          [subBuilder mergeFrom:self.minUserProto];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setMinUserProto:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setLevel:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasMinUserProto {
  return result.hasMinUserProto;
}
- (MinimumUserProto*) minUserProto {
  return result.minUserProto;
}
- (MinimumUserProtoWithLevel_Builder*) setMinUserProto:(MinimumUserProto*) value {
  result.hasMinUserProto = YES;
  result.minUserProto = value;
  return self;
}
- (MinimumUserProtoWithLevel_Builder*) setMinUserProtoBuilder:(MinimumUserProto_Builder*) builderForValue {
  return [self setMinUserProto:[builderForValue build]];
}
- (MinimumUserProtoWithLevel_Builder*) mergeMinUserProto:(MinimumUserProto*) value {
  if (result.hasMinUserProto &&
      result.minUserProto != [MinimumUserProto defaultInstance]) {
    result.minUserProto =
      [[[MinimumUserProto builderWithPrototype:result.minUserProto] mergeFrom:value] buildPartial];
  } else {
    result.minUserProto = value;
  }
  result.hasMinUserProto = YES;
  return self;
}
- (MinimumUserProtoWithLevel_Builder*) clearMinUserProto {
  result.hasMinUserProto = NO;
  result.minUserProto = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasLevel {
  return result.hasLevel;
}
- (int32_t) level {
  return result.level;
}
- (MinimumUserProtoWithLevel_Builder*) setLevel:(int32_t) value {
  result.hasLevel = YES;
  result.level = value;
  return self;
}
- (MinimumUserProtoWithLevel_Builder*) clearLevel {
  result.hasLevel = NO;
  result.level = 0;
  return self;
}
@end

@interface MinimumUserProtoWithFacebookId ()
@property (retain) MinimumUserProto* minUserProto;
@property (retain) NSString* facebookId;
@end

@implementation MinimumUserProtoWithFacebookId

- (BOOL) hasMinUserProto {
  return !!hasMinUserProto_;
}
- (void) setHasMinUserProto:(BOOL) value {
  hasMinUserProto_ = !!value;
}
@synthesize minUserProto;
- (BOOL) hasFacebookId {
  return !!hasFacebookId_;
}
- (void) setHasFacebookId:(BOOL) value {
  hasFacebookId_ = !!value;
}
@synthesize facebookId;
- (void) dealloc {
  self.minUserProto = nil;
  self.facebookId = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.minUserProto = [MinimumUserProto defaultInstance];
    self.facebookId = @"";
  }
  return self;
}
static MinimumUserProtoWithFacebookId* defaultMinimumUserProtoWithFacebookIdInstance = nil;
+ (void) initialize {
  if (self == [MinimumUserProtoWithFacebookId class]) {
    defaultMinimumUserProtoWithFacebookIdInstance = [[MinimumUserProtoWithFacebookId alloc] init];
  }
}
+ (MinimumUserProtoWithFacebookId*) defaultInstance {
  return defaultMinimumUserProtoWithFacebookIdInstance;
}
- (MinimumUserProtoWithFacebookId*) defaultInstance {
  return defaultMinimumUserProtoWithFacebookIdInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasMinUserProto) {
    [output writeMessage:1 value:self.minUserProto];
  }
  if (self.hasFacebookId) {
    [output writeString:2 value:self.facebookId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasMinUserProto) {
    size += computeMessageSize(1, self.minUserProto);
  }
  if (self.hasFacebookId) {
    size += computeStringSize(2, self.facebookId);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (MinimumUserProtoWithFacebookId*) parseFromData:(NSData*) data {
  return (MinimumUserProtoWithFacebookId*)[[[MinimumUserProtoWithFacebookId builder] mergeFromData:data] build];
}
+ (MinimumUserProtoWithFacebookId*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MinimumUserProtoWithFacebookId*)[[[MinimumUserProtoWithFacebookId builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (MinimumUserProtoWithFacebookId*) parseFromInputStream:(NSInputStream*) input {
  return (MinimumUserProtoWithFacebookId*)[[[MinimumUserProtoWithFacebookId builder] mergeFromInputStream:input] build];
}
+ (MinimumUserProtoWithFacebookId*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MinimumUserProtoWithFacebookId*)[[[MinimumUserProtoWithFacebookId builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MinimumUserProtoWithFacebookId*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (MinimumUserProtoWithFacebookId*)[[[MinimumUserProtoWithFacebookId builder] mergeFromCodedInputStream:input] build];
}
+ (MinimumUserProtoWithFacebookId*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MinimumUserProtoWithFacebookId*)[[[MinimumUserProtoWithFacebookId builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MinimumUserProtoWithFacebookId_Builder*) builder {
  return [[[MinimumUserProtoWithFacebookId_Builder alloc] init] autorelease];
}
+ (MinimumUserProtoWithFacebookId_Builder*) builderWithPrototype:(MinimumUserProtoWithFacebookId*) prototype {
  return [[MinimumUserProtoWithFacebookId builder] mergeFrom:prototype];
}
- (MinimumUserProtoWithFacebookId_Builder*) builder {
  return [MinimumUserProtoWithFacebookId builder];
}
@end

@interface MinimumUserProtoWithFacebookId_Builder()
@property (retain) MinimumUserProtoWithFacebookId* result;
@end

@implementation MinimumUserProtoWithFacebookId_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[MinimumUserProtoWithFacebookId alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (MinimumUserProtoWithFacebookId_Builder*) clear {
  self.result = [[[MinimumUserProtoWithFacebookId alloc] init] autorelease];
  return self;
}
- (MinimumUserProtoWithFacebookId_Builder*) clone {
  return [MinimumUserProtoWithFacebookId builderWithPrototype:result];
}
- (MinimumUserProtoWithFacebookId*) defaultInstance {
  return [MinimumUserProtoWithFacebookId defaultInstance];
}
- (MinimumUserProtoWithFacebookId*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (MinimumUserProtoWithFacebookId*) buildPartial {
  MinimumUserProtoWithFacebookId* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (MinimumUserProtoWithFacebookId_Builder*) mergeFrom:(MinimumUserProtoWithFacebookId*) other {
  if (other == [MinimumUserProtoWithFacebookId defaultInstance]) {
    return self;
  }
  if (other.hasMinUserProto) {
    [self mergeMinUserProto:other.minUserProto];
  }
  if (other.hasFacebookId) {
    [self setFacebookId:other.facebookId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (MinimumUserProtoWithFacebookId_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (MinimumUserProtoWithFacebookId_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasMinUserProto) {
          [subBuilder mergeFrom:self.minUserProto];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setMinUserProto:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        [self setFacebookId:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasMinUserProto {
  return result.hasMinUserProto;
}
- (MinimumUserProto*) minUserProto {
  return result.minUserProto;
}
- (MinimumUserProtoWithFacebookId_Builder*) setMinUserProto:(MinimumUserProto*) value {
  result.hasMinUserProto = YES;
  result.minUserProto = value;
  return self;
}
- (MinimumUserProtoWithFacebookId_Builder*) setMinUserProtoBuilder:(MinimumUserProto_Builder*) builderForValue {
  return [self setMinUserProto:[builderForValue build]];
}
- (MinimumUserProtoWithFacebookId_Builder*) mergeMinUserProto:(MinimumUserProto*) value {
  if (result.hasMinUserProto &&
      result.minUserProto != [MinimumUserProto defaultInstance]) {
    result.minUserProto =
      [[[MinimumUserProto builderWithPrototype:result.minUserProto] mergeFrom:value] buildPartial];
  } else {
    result.minUserProto = value;
  }
  result.hasMinUserProto = YES;
  return self;
}
- (MinimumUserProtoWithFacebookId_Builder*) clearMinUserProto {
  result.hasMinUserProto = NO;
  result.minUserProto = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasFacebookId {
  return result.hasFacebookId;
}
- (NSString*) facebookId {
  return result.facebookId;
}
- (MinimumUserProtoWithFacebookId_Builder*) setFacebookId:(NSString*) value {
  result.hasFacebookId = YES;
  result.facebookId = value;
  return self;
}
- (MinimumUserProtoWithFacebookId_Builder*) clearFacebookId {
  result.hasFacebookId = NO;
  result.facebookId = @"";
  return self;
}
@end

@interface MinimumUserProtoWithMaxResources ()
@property (retain) MinimumUserProto* minUserProto;
@property int32_t maxCash;
@property int32_t maxOil;
@end

@implementation MinimumUserProtoWithMaxResources

- (BOOL) hasMinUserProto {
  return !!hasMinUserProto_;
}
- (void) setHasMinUserProto:(BOOL) value {
  hasMinUserProto_ = !!value;
}
@synthesize minUserProto;
- (BOOL) hasMaxCash {
  return !!hasMaxCash_;
}
- (void) setHasMaxCash:(BOOL) value {
  hasMaxCash_ = !!value;
}
@synthesize maxCash;
- (BOOL) hasMaxOil {
  return !!hasMaxOil_;
}
- (void) setHasMaxOil:(BOOL) value {
  hasMaxOil_ = !!value;
}
@synthesize maxOil;
- (void) dealloc {
  self.minUserProto = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.minUserProto = [MinimumUserProto defaultInstance];
    self.maxCash = 0;
    self.maxOil = 0;
  }
  return self;
}
static MinimumUserProtoWithMaxResources* defaultMinimumUserProtoWithMaxResourcesInstance = nil;
+ (void) initialize {
  if (self == [MinimumUserProtoWithMaxResources class]) {
    defaultMinimumUserProtoWithMaxResourcesInstance = [[MinimumUserProtoWithMaxResources alloc] init];
  }
}
+ (MinimumUserProtoWithMaxResources*) defaultInstance {
  return defaultMinimumUserProtoWithMaxResourcesInstance;
}
- (MinimumUserProtoWithMaxResources*) defaultInstance {
  return defaultMinimumUserProtoWithMaxResourcesInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasMinUserProto) {
    [output writeMessage:1 value:self.minUserProto];
  }
  if (self.hasMaxCash) {
    [output writeInt32:2 value:self.maxCash];
  }
  if (self.hasMaxOil) {
    [output writeInt32:3 value:self.maxOil];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasMinUserProto) {
    size += computeMessageSize(1, self.minUserProto);
  }
  if (self.hasMaxCash) {
    size += computeInt32Size(2, self.maxCash);
  }
  if (self.hasMaxOil) {
    size += computeInt32Size(3, self.maxOil);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (MinimumUserProtoWithMaxResources*) parseFromData:(NSData*) data {
  return (MinimumUserProtoWithMaxResources*)[[[MinimumUserProtoWithMaxResources builder] mergeFromData:data] build];
}
+ (MinimumUserProtoWithMaxResources*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MinimumUserProtoWithMaxResources*)[[[MinimumUserProtoWithMaxResources builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (MinimumUserProtoWithMaxResources*) parseFromInputStream:(NSInputStream*) input {
  return (MinimumUserProtoWithMaxResources*)[[[MinimumUserProtoWithMaxResources builder] mergeFromInputStream:input] build];
}
+ (MinimumUserProtoWithMaxResources*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MinimumUserProtoWithMaxResources*)[[[MinimumUserProtoWithMaxResources builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MinimumUserProtoWithMaxResources*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (MinimumUserProtoWithMaxResources*)[[[MinimumUserProtoWithMaxResources builder] mergeFromCodedInputStream:input] build];
}
+ (MinimumUserProtoWithMaxResources*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MinimumUserProtoWithMaxResources*)[[[MinimumUserProtoWithMaxResources builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MinimumUserProtoWithMaxResources_Builder*) builder {
  return [[[MinimumUserProtoWithMaxResources_Builder alloc] init] autorelease];
}
+ (MinimumUserProtoWithMaxResources_Builder*) builderWithPrototype:(MinimumUserProtoWithMaxResources*) prototype {
  return [[MinimumUserProtoWithMaxResources builder] mergeFrom:prototype];
}
- (MinimumUserProtoWithMaxResources_Builder*) builder {
  return [MinimumUserProtoWithMaxResources builder];
}
@end

@interface MinimumUserProtoWithMaxResources_Builder()
@property (retain) MinimumUserProtoWithMaxResources* result;
@end

@implementation MinimumUserProtoWithMaxResources_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[MinimumUserProtoWithMaxResources alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (MinimumUserProtoWithMaxResources_Builder*) clear {
  self.result = [[[MinimumUserProtoWithMaxResources alloc] init] autorelease];
  return self;
}
- (MinimumUserProtoWithMaxResources_Builder*) clone {
  return [MinimumUserProtoWithMaxResources builderWithPrototype:result];
}
- (MinimumUserProtoWithMaxResources*) defaultInstance {
  return [MinimumUserProtoWithMaxResources defaultInstance];
}
- (MinimumUserProtoWithMaxResources*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (MinimumUserProtoWithMaxResources*) buildPartial {
  MinimumUserProtoWithMaxResources* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (MinimumUserProtoWithMaxResources_Builder*) mergeFrom:(MinimumUserProtoWithMaxResources*) other {
  if (other == [MinimumUserProtoWithMaxResources defaultInstance]) {
    return self;
  }
  if (other.hasMinUserProto) {
    [self mergeMinUserProto:other.minUserProto];
  }
  if (other.hasMaxCash) {
    [self setMaxCash:other.maxCash];
  }
  if (other.hasMaxOil) {
    [self setMaxOil:other.maxOil];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (MinimumUserProtoWithMaxResources_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (MinimumUserProtoWithMaxResources_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        MinimumUserProto_Builder* subBuilder = [MinimumUserProto builder];
        if (self.hasMinUserProto) {
          [subBuilder mergeFrom:self.minUserProto];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setMinUserProto:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setMaxCash:[input readInt32]];
        break;
      }
      case 24: {
        [self setMaxOil:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasMinUserProto {
  return result.hasMinUserProto;
}
- (MinimumUserProto*) minUserProto {
  return result.minUserProto;
}
- (MinimumUserProtoWithMaxResources_Builder*) setMinUserProto:(MinimumUserProto*) value {
  result.hasMinUserProto = YES;
  result.minUserProto = value;
  return self;
}
- (MinimumUserProtoWithMaxResources_Builder*) setMinUserProtoBuilder:(MinimumUserProto_Builder*) builderForValue {
  return [self setMinUserProto:[builderForValue build]];
}
- (MinimumUserProtoWithMaxResources_Builder*) mergeMinUserProto:(MinimumUserProto*) value {
  if (result.hasMinUserProto &&
      result.minUserProto != [MinimumUserProto defaultInstance]) {
    result.minUserProto =
      [[[MinimumUserProto builderWithPrototype:result.minUserProto] mergeFrom:value] buildPartial];
  } else {
    result.minUserProto = value;
  }
  result.hasMinUserProto = YES;
  return self;
}
- (MinimumUserProtoWithMaxResources_Builder*) clearMinUserProto {
  result.hasMinUserProto = NO;
  result.minUserProto = [MinimumUserProto defaultInstance];
  return self;
}
- (BOOL) hasMaxCash {
  return result.hasMaxCash;
}
- (int32_t) maxCash {
  return result.maxCash;
}
- (MinimumUserProtoWithMaxResources_Builder*) setMaxCash:(int32_t) value {
  result.hasMaxCash = YES;
  result.maxCash = value;
  return self;
}
- (MinimumUserProtoWithMaxResources_Builder*) clearMaxCash {
  result.hasMaxCash = NO;
  result.maxCash = 0;
  return self;
}
- (BOOL) hasMaxOil {
  return result.hasMaxOil;
}
- (int32_t) maxOil {
  return result.maxOil;
}
- (MinimumUserProtoWithMaxResources_Builder*) setMaxOil:(int32_t) value {
  result.hasMaxOil = YES;
  result.maxOil = value;
  return self;
}
- (MinimumUserProtoWithMaxResources_Builder*) clearMaxOil {
  result.hasMaxOil = NO;
  result.maxOil = 0;
  return self;
}
@end

@interface UserFacebookInviteForSlotProto ()
@property int32_t inviteId;
@property (retain) MinimumUserProtoWithFacebookId* inviter;
@property (retain) NSString* recipientFacebookId;
@property int64_t timeOfInvite;
@property int64_t timeAccepted;
@property int32_t userStructId;
@property int32_t structFbLvl;
@property int64_t redeemedTime;
@end

@implementation UserFacebookInviteForSlotProto

- (BOOL) hasInviteId {
  return !!hasInviteId_;
}
- (void) setHasInviteId:(BOOL) value {
  hasInviteId_ = !!value;
}
@synthesize inviteId;
- (BOOL) hasInviter {
  return !!hasInviter_;
}
- (void) setHasInviter:(BOOL) value {
  hasInviter_ = !!value;
}
@synthesize inviter;
- (BOOL) hasRecipientFacebookId {
  return !!hasRecipientFacebookId_;
}
- (void) setHasRecipientFacebookId:(BOOL) value {
  hasRecipientFacebookId_ = !!value;
}
@synthesize recipientFacebookId;
- (BOOL) hasTimeOfInvite {
  return !!hasTimeOfInvite_;
}
- (void) setHasTimeOfInvite:(BOOL) value {
  hasTimeOfInvite_ = !!value;
}
@synthesize timeOfInvite;
- (BOOL) hasTimeAccepted {
  return !!hasTimeAccepted_;
}
- (void) setHasTimeAccepted:(BOOL) value {
  hasTimeAccepted_ = !!value;
}
@synthesize timeAccepted;
- (BOOL) hasUserStructId {
  return !!hasUserStructId_;
}
- (void) setHasUserStructId:(BOOL) value {
  hasUserStructId_ = !!value;
}
@synthesize userStructId;
- (BOOL) hasStructFbLvl {
  return !!hasStructFbLvl_;
}
- (void) setHasStructFbLvl:(BOOL) value {
  hasStructFbLvl_ = !!value;
}
@synthesize structFbLvl;
- (BOOL) hasRedeemedTime {
  return !!hasRedeemedTime_;
}
- (void) setHasRedeemedTime:(BOOL) value {
  hasRedeemedTime_ = !!value;
}
@synthesize redeemedTime;
- (void) dealloc {
  self.inviter = nil;
  self.recipientFacebookId = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.inviteId = 0;
    self.inviter = [MinimumUserProtoWithFacebookId defaultInstance];
    self.recipientFacebookId = @"";
    self.timeOfInvite = 0L;
    self.timeAccepted = 0L;
    self.userStructId = 0;
    self.structFbLvl = 0;
    self.redeemedTime = 0L;
  }
  return self;
}
static UserFacebookInviteForSlotProto* defaultUserFacebookInviteForSlotProtoInstance = nil;
+ (void) initialize {
  if (self == [UserFacebookInviteForSlotProto class]) {
    defaultUserFacebookInviteForSlotProtoInstance = [[UserFacebookInviteForSlotProto alloc] init];
  }
}
+ (UserFacebookInviteForSlotProto*) defaultInstance {
  return defaultUserFacebookInviteForSlotProtoInstance;
}
- (UserFacebookInviteForSlotProto*) defaultInstance {
  return defaultUserFacebookInviteForSlotProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasInviteId) {
    [output writeInt32:1 value:self.inviteId];
  }
  if (self.hasInviter) {
    [output writeMessage:2 value:self.inviter];
  }
  if (self.hasRecipientFacebookId) {
    [output writeString:3 value:self.recipientFacebookId];
  }
  if (self.hasTimeOfInvite) {
    [output writeInt64:4 value:self.timeOfInvite];
  }
  if (self.hasTimeAccepted) {
    [output writeInt64:5 value:self.timeAccepted];
  }
  if (self.hasUserStructId) {
    [output writeInt32:6 value:self.userStructId];
  }
  if (self.hasStructFbLvl) {
    [output writeInt32:7 value:self.structFbLvl];
  }
  if (self.hasRedeemedTime) {
    [output writeInt64:8 value:self.redeemedTime];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasInviteId) {
    size += computeInt32Size(1, self.inviteId);
  }
  if (self.hasInviter) {
    size += computeMessageSize(2, self.inviter);
  }
  if (self.hasRecipientFacebookId) {
    size += computeStringSize(3, self.recipientFacebookId);
  }
  if (self.hasTimeOfInvite) {
    size += computeInt64Size(4, self.timeOfInvite);
  }
  if (self.hasTimeAccepted) {
    size += computeInt64Size(5, self.timeAccepted);
  }
  if (self.hasUserStructId) {
    size += computeInt32Size(6, self.userStructId);
  }
  if (self.hasStructFbLvl) {
    size += computeInt32Size(7, self.structFbLvl);
  }
  if (self.hasRedeemedTime) {
    size += computeInt64Size(8, self.redeemedTime);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (UserFacebookInviteForSlotProto*) parseFromData:(NSData*) data {
  return (UserFacebookInviteForSlotProto*)[[[UserFacebookInviteForSlotProto builder] mergeFromData:data] build];
}
+ (UserFacebookInviteForSlotProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UserFacebookInviteForSlotProto*)[[[UserFacebookInviteForSlotProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (UserFacebookInviteForSlotProto*) parseFromInputStream:(NSInputStream*) input {
  return (UserFacebookInviteForSlotProto*)[[[UserFacebookInviteForSlotProto builder] mergeFromInputStream:input] build];
}
+ (UserFacebookInviteForSlotProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UserFacebookInviteForSlotProto*)[[[UserFacebookInviteForSlotProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (UserFacebookInviteForSlotProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (UserFacebookInviteForSlotProto*)[[[UserFacebookInviteForSlotProto builder] mergeFromCodedInputStream:input] build];
}
+ (UserFacebookInviteForSlotProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UserFacebookInviteForSlotProto*)[[[UserFacebookInviteForSlotProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (UserFacebookInviteForSlotProto_Builder*) builder {
  return [[[UserFacebookInviteForSlotProto_Builder alloc] init] autorelease];
}
+ (UserFacebookInviteForSlotProto_Builder*) builderWithPrototype:(UserFacebookInviteForSlotProto*) prototype {
  return [[UserFacebookInviteForSlotProto builder] mergeFrom:prototype];
}
- (UserFacebookInviteForSlotProto_Builder*) builder {
  return [UserFacebookInviteForSlotProto builder];
}
@end

@interface UserFacebookInviteForSlotProto_Builder()
@property (retain) UserFacebookInviteForSlotProto* result;
@end

@implementation UserFacebookInviteForSlotProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[UserFacebookInviteForSlotProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (UserFacebookInviteForSlotProto_Builder*) clear {
  self.result = [[[UserFacebookInviteForSlotProto alloc] init] autorelease];
  return self;
}
- (UserFacebookInviteForSlotProto_Builder*) clone {
  return [UserFacebookInviteForSlotProto builderWithPrototype:result];
}
- (UserFacebookInviteForSlotProto*) defaultInstance {
  return [UserFacebookInviteForSlotProto defaultInstance];
}
- (UserFacebookInviteForSlotProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (UserFacebookInviteForSlotProto*) buildPartial {
  UserFacebookInviteForSlotProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (UserFacebookInviteForSlotProto_Builder*) mergeFrom:(UserFacebookInviteForSlotProto*) other {
  if (other == [UserFacebookInviteForSlotProto defaultInstance]) {
    return self;
  }
  if (other.hasInviteId) {
    [self setInviteId:other.inviteId];
  }
  if (other.hasInviter) {
    [self mergeInviter:other.inviter];
  }
  if (other.hasRecipientFacebookId) {
    [self setRecipientFacebookId:other.recipientFacebookId];
  }
  if (other.hasTimeOfInvite) {
    [self setTimeOfInvite:other.timeOfInvite];
  }
  if (other.hasTimeAccepted) {
    [self setTimeAccepted:other.timeAccepted];
  }
  if (other.hasUserStructId) {
    [self setUserStructId:other.userStructId];
  }
  if (other.hasStructFbLvl) {
    [self setStructFbLvl:other.structFbLvl];
  }
  if (other.hasRedeemedTime) {
    [self setRedeemedTime:other.redeemedTime];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (UserFacebookInviteForSlotProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (UserFacebookInviteForSlotProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setInviteId:[input readInt32]];
        break;
      }
      case 18: {
        MinimumUserProtoWithFacebookId_Builder* subBuilder = [MinimumUserProtoWithFacebookId builder];
        if (self.hasInviter) {
          [subBuilder mergeFrom:self.inviter];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setInviter:[subBuilder buildPartial]];
        break;
      }
      case 26: {
        [self setRecipientFacebookId:[input readString]];
        break;
      }
      case 32: {
        [self setTimeOfInvite:[input readInt64]];
        break;
      }
      case 40: {
        [self setTimeAccepted:[input readInt64]];
        break;
      }
      case 48: {
        [self setUserStructId:[input readInt32]];
        break;
      }
      case 56: {
        [self setStructFbLvl:[input readInt32]];
        break;
      }
      case 64: {
        [self setRedeemedTime:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasInviteId {
  return result.hasInviteId;
}
- (int32_t) inviteId {
  return result.inviteId;
}
- (UserFacebookInviteForSlotProto_Builder*) setInviteId:(int32_t) value {
  result.hasInviteId = YES;
  result.inviteId = value;
  return self;
}
- (UserFacebookInviteForSlotProto_Builder*) clearInviteId {
  result.hasInviteId = NO;
  result.inviteId = 0;
  return self;
}
- (BOOL) hasInviter {
  return result.hasInviter;
}
- (MinimumUserProtoWithFacebookId*) inviter {
  return result.inviter;
}
- (UserFacebookInviteForSlotProto_Builder*) setInviter:(MinimumUserProtoWithFacebookId*) value {
  result.hasInviter = YES;
  result.inviter = value;
  return self;
}
- (UserFacebookInviteForSlotProto_Builder*) setInviterBuilder:(MinimumUserProtoWithFacebookId_Builder*) builderForValue {
  return [self setInviter:[builderForValue build]];
}
- (UserFacebookInviteForSlotProto_Builder*) mergeInviter:(MinimumUserProtoWithFacebookId*) value {
  if (result.hasInviter &&
      result.inviter != [MinimumUserProtoWithFacebookId defaultInstance]) {
    result.inviter =
      [[[MinimumUserProtoWithFacebookId builderWithPrototype:result.inviter] mergeFrom:value] buildPartial];
  } else {
    result.inviter = value;
  }
  result.hasInviter = YES;
  return self;
}
- (UserFacebookInviteForSlotProto_Builder*) clearInviter {
  result.hasInviter = NO;
  result.inviter = [MinimumUserProtoWithFacebookId defaultInstance];
  return self;
}
- (BOOL) hasRecipientFacebookId {
  return result.hasRecipientFacebookId;
}
- (NSString*) recipientFacebookId {
  return result.recipientFacebookId;
}
- (UserFacebookInviteForSlotProto_Builder*) setRecipientFacebookId:(NSString*) value {
  result.hasRecipientFacebookId = YES;
  result.recipientFacebookId = value;
  return self;
}
- (UserFacebookInviteForSlotProto_Builder*) clearRecipientFacebookId {
  result.hasRecipientFacebookId = NO;
  result.recipientFacebookId = @"";
  return self;
}
- (BOOL) hasTimeOfInvite {
  return result.hasTimeOfInvite;
}
- (int64_t) timeOfInvite {
  return result.timeOfInvite;
}
- (UserFacebookInviteForSlotProto_Builder*) setTimeOfInvite:(int64_t) value {
  result.hasTimeOfInvite = YES;
  result.timeOfInvite = value;
  return self;
}
- (UserFacebookInviteForSlotProto_Builder*) clearTimeOfInvite {
  result.hasTimeOfInvite = NO;
  result.timeOfInvite = 0L;
  return self;
}
- (BOOL) hasTimeAccepted {
  return result.hasTimeAccepted;
}
- (int64_t) timeAccepted {
  return result.timeAccepted;
}
- (UserFacebookInviteForSlotProto_Builder*) setTimeAccepted:(int64_t) value {
  result.hasTimeAccepted = YES;
  result.timeAccepted = value;
  return self;
}
- (UserFacebookInviteForSlotProto_Builder*) clearTimeAccepted {
  result.hasTimeAccepted = NO;
  result.timeAccepted = 0L;
  return self;
}
- (BOOL) hasUserStructId {
  return result.hasUserStructId;
}
- (int32_t) userStructId {
  return result.userStructId;
}
- (UserFacebookInviteForSlotProto_Builder*) setUserStructId:(int32_t) value {
  result.hasUserStructId = YES;
  result.userStructId = value;
  return self;
}
- (UserFacebookInviteForSlotProto_Builder*) clearUserStructId {
  result.hasUserStructId = NO;
  result.userStructId = 0;
  return self;
}
- (BOOL) hasStructFbLvl {
  return result.hasStructFbLvl;
}
- (int32_t) structFbLvl {
  return result.structFbLvl;
}
- (UserFacebookInviteForSlotProto_Builder*) setStructFbLvl:(int32_t) value {
  result.hasStructFbLvl = YES;
  result.structFbLvl = value;
  return self;
}
- (UserFacebookInviteForSlotProto_Builder*) clearStructFbLvl {
  result.hasStructFbLvl = NO;
  result.structFbLvl = 0;
  return self;
}
- (BOOL) hasRedeemedTime {
  return result.hasRedeemedTime;
}
- (int64_t) redeemedTime {
  return result.redeemedTime;
}
- (UserFacebookInviteForSlotProto_Builder*) setRedeemedTime:(int64_t) value {
  result.hasRedeemedTime = YES;
  result.redeemedTime = value;
  return self;
}
- (UserFacebookInviteForSlotProto_Builder*) clearRedeemedTime {
  result.hasRedeemedTime = NO;
  result.redeemedTime = 0L;
  return self;
}
@end

@interface FullUserProto ()
@property int32_t userId;
@property (retain) NSString* name;
@property int32_t level;
@property int32_t gems;
@property int32_t cash;
@property int32_t oil;
@property int32_t experience;
@property int32_t tasksCompleted;
@property (retain) NSString* referralCode;
@property int32_t numReferrals;
@property int64_t lastLoginTime;
@property int64_t lastLogoutTime;
@property BOOL isFake;
@property BOOL isAdmin;
@property int32_t numCoinsRetrievedFromStructs;
@property int32_t numOilRetrievedFromStructs;
@property (retain) MinimumClanProto* clan;
@property BOOL hasReceivedfbReward;
@property int32_t numBeginnerSalesPurchased;
@property (retain) NSString* facebookId;
@property (retain) NSString* gameCenterId;
@property int64_t lastObstacleSpawnedTime;
@property int32_t numObstaclesRemoved;
@property (retain) UserPvpLeagueProto* pvpLeagueInfo;
@property int64_t lastMiniJobSpawnedTime;
@property (retain) NSString* udidForHistory;
@property (retain) NSString* deviceToken;
@property int32_t numBadges;
@property int64_t createTime;
@property int32_t apsalarId;
@property int32_t numConsecutiveDaysPlayed;
@property int64_t lastWallPostNotificationTime;
@property (retain) NSString* kabamNaid;
@property BOOL fbIdSetOnUserCreate;
@property (retain) NSString* udid;
@end

@implementation FullUserProto

- (BOOL) hasUserId {
  return !!hasUserId_;
}
- (void) setHasUserId:(BOOL) value {
  hasUserId_ = !!value;
}
@synthesize userId;
- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) value {
  hasName_ = !!value;
}
@synthesize name;
- (BOOL) hasLevel {
  return !!hasLevel_;
}
- (void) setHasLevel:(BOOL) value {
  hasLevel_ = !!value;
}
@synthesize level;
- (BOOL) hasGems {
  return !!hasGems_;
}
- (void) setHasGems:(BOOL) value {
  hasGems_ = !!value;
}
@synthesize gems;
- (BOOL) hasCash {
  return !!hasCash_;
}
- (void) setHasCash:(BOOL) value {
  hasCash_ = !!value;
}
@synthesize cash;
- (BOOL) hasOil {
  return !!hasOil_;
}
- (void) setHasOil:(BOOL) value {
  hasOil_ = !!value;
}
@synthesize oil;
- (BOOL) hasExperience {
  return !!hasExperience_;
}
- (void) setHasExperience:(BOOL) value {
  hasExperience_ = !!value;
}
@synthesize experience;
- (BOOL) hasTasksCompleted {
  return !!hasTasksCompleted_;
}
- (void) setHasTasksCompleted:(BOOL) value {
  hasTasksCompleted_ = !!value;
}
@synthesize tasksCompleted;
- (BOOL) hasReferralCode {
  return !!hasReferralCode_;
}
- (void) setHasReferralCode:(BOOL) value {
  hasReferralCode_ = !!value;
}
@synthesize referralCode;
- (BOOL) hasNumReferrals {
  return !!hasNumReferrals_;
}
- (void) setHasNumReferrals:(BOOL) value {
  hasNumReferrals_ = !!value;
}
@synthesize numReferrals;
- (BOOL) hasLastLoginTime {
  return !!hasLastLoginTime_;
}
- (void) setHasLastLoginTime:(BOOL) value {
  hasLastLoginTime_ = !!value;
}
@synthesize lastLoginTime;
- (BOOL) hasLastLogoutTime {
  return !!hasLastLogoutTime_;
}
- (void) setHasLastLogoutTime:(BOOL) value {
  hasLastLogoutTime_ = !!value;
}
@synthesize lastLogoutTime;
- (BOOL) hasIsFake {
  return !!hasIsFake_;
}
- (void) setHasIsFake:(BOOL) value {
  hasIsFake_ = !!value;
}
- (BOOL) isFake {
  return !!isFake_;
}
- (void) setIsFake:(BOOL) value {
  isFake_ = !!value;
}
- (BOOL) hasIsAdmin {
  return !!hasIsAdmin_;
}
- (void) setHasIsAdmin:(BOOL) value {
  hasIsAdmin_ = !!value;
}
- (BOOL) isAdmin {
  return !!isAdmin_;
}
- (void) setIsAdmin:(BOOL) value {
  isAdmin_ = !!value;
}
- (BOOL) hasNumCoinsRetrievedFromStructs {
  return !!hasNumCoinsRetrievedFromStructs_;
}
- (void) setHasNumCoinsRetrievedFromStructs:(BOOL) value {
  hasNumCoinsRetrievedFromStructs_ = !!value;
}
@synthesize numCoinsRetrievedFromStructs;
- (BOOL) hasNumOilRetrievedFromStructs {
  return !!hasNumOilRetrievedFromStructs_;
}
- (void) setHasNumOilRetrievedFromStructs:(BOOL) value {
  hasNumOilRetrievedFromStructs_ = !!value;
}
@synthesize numOilRetrievedFromStructs;
- (BOOL) hasClan {
  return !!hasClan_;
}
- (void) setHasClan:(BOOL) value {
  hasClan_ = !!value;
}
@synthesize clan;
- (BOOL) hasHasReceivedfbReward {
  return !!hasHasReceivedfbReward_;
}
- (void) setHasHasReceivedfbReward:(BOOL) value {
  hasHasReceivedfbReward_ = !!value;
}
- (BOOL) hasReceivedfbReward {
  return !!hasReceivedfbReward_;
}
- (void) setHasReceivedfbReward:(BOOL) value {
  hasReceivedfbReward_ = !!value;
}
- (BOOL) hasNumBeginnerSalesPurchased {
  return !!hasNumBeginnerSalesPurchased_;
}
- (void) setHasNumBeginnerSalesPurchased:(BOOL) value {
  hasNumBeginnerSalesPurchased_ = !!value;
}
@synthesize numBeginnerSalesPurchased;
- (BOOL) hasFacebookId {
  return !!hasFacebookId_;
}
- (void) setHasFacebookId:(BOOL) value {
  hasFacebookId_ = !!value;
}
@synthesize facebookId;
- (BOOL) hasGameCenterId {
  return !!hasGameCenterId_;
}
- (void) setHasGameCenterId:(BOOL) value {
  hasGameCenterId_ = !!value;
}
@synthesize gameCenterId;
- (BOOL) hasLastObstacleSpawnedTime {
  return !!hasLastObstacleSpawnedTime_;
}
- (void) setHasLastObstacleSpawnedTime:(BOOL) value {
  hasLastObstacleSpawnedTime_ = !!value;
}
@synthesize lastObstacleSpawnedTime;
- (BOOL) hasNumObstaclesRemoved {
  return !!hasNumObstaclesRemoved_;
}
- (void) setHasNumObstaclesRemoved:(BOOL) value {
  hasNumObstaclesRemoved_ = !!value;
}
@synthesize numObstaclesRemoved;
- (BOOL) hasPvpLeagueInfo {
  return !!hasPvpLeagueInfo_;
}
- (void) setHasPvpLeagueInfo:(BOOL) value {
  hasPvpLeagueInfo_ = !!value;
}
@synthesize pvpLeagueInfo;
- (BOOL) hasLastMiniJobSpawnedTime {
  return !!hasLastMiniJobSpawnedTime_;
}
- (void) setHasLastMiniJobSpawnedTime:(BOOL) value {
  hasLastMiniJobSpawnedTime_ = !!value;
}
@synthesize lastMiniJobSpawnedTime;
- (BOOL) hasUdidForHistory {
  return !!hasUdidForHistory_;
}
- (void) setHasUdidForHistory:(BOOL) value {
  hasUdidForHistory_ = !!value;
}
@synthesize udidForHistory;
- (BOOL) hasDeviceToken {
  return !!hasDeviceToken_;
}
- (void) setHasDeviceToken:(BOOL) value {
  hasDeviceToken_ = !!value;
}
@synthesize deviceToken;
- (BOOL) hasNumBadges {
  return !!hasNumBadges_;
}
- (void) setHasNumBadges:(BOOL) value {
  hasNumBadges_ = !!value;
}
@synthesize numBadges;
- (BOOL) hasCreateTime {
  return !!hasCreateTime_;
}
- (void) setHasCreateTime:(BOOL) value {
  hasCreateTime_ = !!value;
}
@synthesize createTime;
- (BOOL) hasApsalarId {
  return !!hasApsalarId_;
}
- (void) setHasApsalarId:(BOOL) value {
  hasApsalarId_ = !!value;
}
@synthesize apsalarId;
- (BOOL) hasNumConsecutiveDaysPlayed {
  return !!hasNumConsecutiveDaysPlayed_;
}
- (void) setHasNumConsecutiveDaysPlayed:(BOOL) value {
  hasNumConsecutiveDaysPlayed_ = !!value;
}
@synthesize numConsecutiveDaysPlayed;
- (BOOL) hasLastWallPostNotificationTime {
  return !!hasLastWallPostNotificationTime_;
}
- (void) setHasLastWallPostNotificationTime:(BOOL) value {
  hasLastWallPostNotificationTime_ = !!value;
}
@synthesize lastWallPostNotificationTime;
- (BOOL) hasKabamNaid {
  return !!hasKabamNaid_;
}
- (void) setHasKabamNaid:(BOOL) value {
  hasKabamNaid_ = !!value;
}
@synthesize kabamNaid;
- (BOOL) hasFbIdSetOnUserCreate {
  return !!hasFbIdSetOnUserCreate_;
}
- (void) setHasFbIdSetOnUserCreate:(BOOL) value {
  hasFbIdSetOnUserCreate_ = !!value;
}
- (BOOL) fbIdSetOnUserCreate {
  return !!fbIdSetOnUserCreate_;
}
- (void) setFbIdSetOnUserCreate:(BOOL) value {
  fbIdSetOnUserCreate_ = !!value;
}
- (BOOL) hasUdid {
  return !!hasUdid_;
}
- (void) setHasUdid:(BOOL) value {
  hasUdid_ = !!value;
}
@synthesize udid;
- (void) dealloc {
  self.name = nil;
  self.referralCode = nil;
  self.clan = nil;
  self.facebookId = nil;
  self.gameCenterId = nil;
  self.pvpLeagueInfo = nil;
  self.udidForHistory = nil;
  self.deviceToken = nil;
  self.kabamNaid = nil;
  self.udid = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.userId = 0;
    self.name = @"";
    self.level = 0;
    self.gems = 0;
    self.cash = 0;
    self.oil = 0;
    self.experience = 0;
    self.tasksCompleted = 0;
    self.referralCode = @"";
    self.numReferrals = 0;
    self.lastLoginTime = 0L;
    self.lastLogoutTime = 0L;
    self.isFake = NO;
    self.isAdmin = NO;
    self.numCoinsRetrievedFromStructs = 0;
    self.numOilRetrievedFromStructs = 0;
    self.clan = [MinimumClanProto defaultInstance];
    self.hasReceivedfbReward = NO;
    self.numBeginnerSalesPurchased = 0;
    self.facebookId = @"";
    self.gameCenterId = @"";
    self.lastObstacleSpawnedTime = 0L;
    self.numObstaclesRemoved = 0;
    self.pvpLeagueInfo = [UserPvpLeagueProto defaultInstance];
    self.lastMiniJobSpawnedTime = 0L;
    self.udidForHistory = @"";
    self.deviceToken = @"";
    self.numBadges = 0;
    self.createTime = 0L;
    self.apsalarId = 0;
    self.numConsecutiveDaysPlayed = 0;
    self.lastWallPostNotificationTime = 0L;
    self.kabamNaid = @"";
    self.fbIdSetOnUserCreate = NO;
    self.udid = @"";
  }
  return self;
}
static FullUserProto* defaultFullUserProtoInstance = nil;
+ (void) initialize {
  if (self == [FullUserProto class]) {
    defaultFullUserProtoInstance = [[FullUserProto alloc] init];
  }
}
+ (FullUserProto*) defaultInstance {
  return defaultFullUserProtoInstance;
}
- (FullUserProto*) defaultInstance {
  return defaultFullUserProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUserId) {
    [output writeInt32:1 value:self.userId];
  }
  if (self.hasName) {
    [output writeString:2 value:self.name];
  }
  if (self.hasLevel) {
    [output writeInt32:3 value:self.level];
  }
  if (self.hasGems) {
    [output writeInt32:4 value:self.gems];
  }
  if (self.hasCash) {
    [output writeInt32:5 value:self.cash];
  }
  if (self.hasExperience) {
    [output writeInt32:6 value:self.experience];
  }
  if (self.hasTasksCompleted) {
    [output writeInt32:7 value:self.tasksCompleted];
  }
  if (self.hasReferralCode) {
    [output writeString:11 value:self.referralCode];
  }
  if (self.hasNumReferrals) {
    [output writeInt32:12 value:self.numReferrals];
  }
  if (self.hasUdid) {
    [output writeString:13 value:self.udid];
  }
  if (self.hasLastLoginTime) {
    [output writeInt64:14 value:self.lastLoginTime];
  }
  if (self.hasLastLogoutTime) {
    [output writeInt64:15 value:self.lastLogoutTime];
  }
  if (self.hasDeviceToken) {
    [output writeString:16 value:self.deviceToken];
  }
  if (self.hasNumBadges) {
    [output writeInt32:18 value:self.numBadges];
  }
  if (self.hasIsFake) {
    [output writeBool:19 value:self.isFake];
  }
  if (self.hasCreateTime) {
    [output writeInt64:20 value:self.createTime];
  }
  if (self.hasIsAdmin) {
    [output writeBool:21 value:self.isAdmin];
  }
  if (self.hasApsalarId) {
    [output writeInt32:22 value:self.apsalarId];
  }
  if (self.hasNumCoinsRetrievedFromStructs) {
    [output writeInt32:23 value:self.numCoinsRetrievedFromStructs];
  }
  if (self.hasNumConsecutiveDaysPlayed) {
    [output writeInt32:24 value:self.numConsecutiveDaysPlayed];
  }
  if (self.hasClan) {
    [output writeMessage:25 value:self.clan];
  }
  if (self.hasLastWallPostNotificationTime) {
    [output writeInt64:26 value:self.lastWallPostNotificationTime];
  }
  if (self.hasKabamNaid) {
    [output writeString:27 value:self.kabamNaid];
  }
  if (self.hasHasReceivedfbReward) {
    [output writeBool:28 value:self.hasReceivedfbReward];
  }
  if (self.hasNumBeginnerSalesPurchased) {
    [output writeInt32:30 value:self.numBeginnerSalesPurchased];
  }
  if (self.hasFacebookId) {
    [output writeString:40 value:self.facebookId];
  }
  if (self.hasOil) {
    [output writeInt32:42 value:self.oil];
  }
  if (self.hasNumOilRetrievedFromStructs) {
    [output writeInt32:43 value:self.numOilRetrievedFromStructs];
  }
  if (self.hasFbIdSetOnUserCreate) {
    [output writeBool:44 value:self.fbIdSetOnUserCreate];
  }
  if (self.hasGameCenterId) {
    [output writeString:45 value:self.gameCenterId];
  }
  if (self.hasUdidForHistory) {
    [output writeString:46 value:self.udidForHistory];
  }
  if (self.hasLastObstacleSpawnedTime) {
    [output writeInt64:47 value:self.lastObstacleSpawnedTime];
  }
  if (self.hasPvpLeagueInfo) {
    [output writeMessage:48 value:self.pvpLeagueInfo];
  }
  if (self.hasNumObstaclesRemoved) {
    [output writeInt32:49 value:self.numObstaclesRemoved];
  }
  if (self.hasLastMiniJobSpawnedTime) {
    [output writeInt64:50 value:self.lastMiniJobSpawnedTime];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasUserId) {
    size += computeInt32Size(1, self.userId);
  }
  if (self.hasName) {
    size += computeStringSize(2, self.name);
  }
  if (self.hasLevel) {
    size += computeInt32Size(3, self.level);
  }
  if (self.hasGems) {
    size += computeInt32Size(4, self.gems);
  }
  if (self.hasCash) {
    size += computeInt32Size(5, self.cash);
  }
  if (self.hasExperience) {
    size += computeInt32Size(6, self.experience);
  }
  if (self.hasTasksCompleted) {
    size += computeInt32Size(7, self.tasksCompleted);
  }
  if (self.hasReferralCode) {
    size += computeStringSize(11, self.referralCode);
  }
  if (self.hasNumReferrals) {
    size += computeInt32Size(12, self.numReferrals);
  }
  if (self.hasUdid) {
    size += computeStringSize(13, self.udid);
  }
  if (self.hasLastLoginTime) {
    size += computeInt64Size(14, self.lastLoginTime);
  }
  if (self.hasLastLogoutTime) {
    size += computeInt64Size(15, self.lastLogoutTime);
  }
  if (self.hasDeviceToken) {
    size += computeStringSize(16, self.deviceToken);
  }
  if (self.hasNumBadges) {
    size += computeInt32Size(18, self.numBadges);
  }
  if (self.hasIsFake) {
    size += computeBoolSize(19, self.isFake);
  }
  if (self.hasCreateTime) {
    size += computeInt64Size(20, self.createTime);
  }
  if (self.hasIsAdmin) {
    size += computeBoolSize(21, self.isAdmin);
  }
  if (self.hasApsalarId) {
    size += computeInt32Size(22, self.apsalarId);
  }
  if (self.hasNumCoinsRetrievedFromStructs) {
    size += computeInt32Size(23, self.numCoinsRetrievedFromStructs);
  }
  if (self.hasNumConsecutiveDaysPlayed) {
    size += computeInt32Size(24, self.numConsecutiveDaysPlayed);
  }
  if (self.hasClan) {
    size += computeMessageSize(25, self.clan);
  }
  if (self.hasLastWallPostNotificationTime) {
    size += computeInt64Size(26, self.lastWallPostNotificationTime);
  }
  if (self.hasKabamNaid) {
    size += computeStringSize(27, self.kabamNaid);
  }
  if (self.hasHasReceivedfbReward) {
    size += computeBoolSize(28, self.hasReceivedfbReward);
  }
  if (self.hasNumBeginnerSalesPurchased) {
    size += computeInt32Size(30, self.numBeginnerSalesPurchased);
  }
  if (self.hasFacebookId) {
    size += computeStringSize(40, self.facebookId);
  }
  if (self.hasOil) {
    size += computeInt32Size(42, self.oil);
  }
  if (self.hasNumOilRetrievedFromStructs) {
    size += computeInt32Size(43, self.numOilRetrievedFromStructs);
  }
  if (self.hasFbIdSetOnUserCreate) {
    size += computeBoolSize(44, self.fbIdSetOnUserCreate);
  }
  if (self.hasGameCenterId) {
    size += computeStringSize(45, self.gameCenterId);
  }
  if (self.hasUdidForHistory) {
    size += computeStringSize(46, self.udidForHistory);
  }
  if (self.hasLastObstacleSpawnedTime) {
    size += computeInt64Size(47, self.lastObstacleSpawnedTime);
  }
  if (self.hasPvpLeagueInfo) {
    size += computeMessageSize(48, self.pvpLeagueInfo);
  }
  if (self.hasNumObstaclesRemoved) {
    size += computeInt32Size(49, self.numObstaclesRemoved);
  }
  if (self.hasLastMiniJobSpawnedTime) {
    size += computeInt64Size(50, self.lastMiniJobSpawnedTime);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (FullUserProto*) parseFromData:(NSData*) data {
  return (FullUserProto*)[[[FullUserProto builder] mergeFromData:data] build];
}
+ (FullUserProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FullUserProto*)[[[FullUserProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (FullUserProto*) parseFromInputStream:(NSInputStream*) input {
  return (FullUserProto*)[[[FullUserProto builder] mergeFromInputStream:input] build];
}
+ (FullUserProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FullUserProto*)[[[FullUserProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FullUserProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (FullUserProto*)[[[FullUserProto builder] mergeFromCodedInputStream:input] build];
}
+ (FullUserProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FullUserProto*)[[[FullUserProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FullUserProto_Builder*) builder {
  return [[[FullUserProto_Builder alloc] init] autorelease];
}
+ (FullUserProto_Builder*) builderWithPrototype:(FullUserProto*) prototype {
  return [[FullUserProto builder] mergeFrom:prototype];
}
- (FullUserProto_Builder*) builder {
  return [FullUserProto builder];
}
@end

@interface FullUserProto_Builder()
@property (retain) FullUserProto* result;
@end

@implementation FullUserProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[FullUserProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (FullUserProto_Builder*) clear {
  self.result = [[[FullUserProto alloc] init] autorelease];
  return self;
}
- (FullUserProto_Builder*) clone {
  return [FullUserProto builderWithPrototype:result];
}
- (FullUserProto*) defaultInstance {
  return [FullUserProto defaultInstance];
}
- (FullUserProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (FullUserProto*) buildPartial {
  FullUserProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (FullUserProto_Builder*) mergeFrom:(FullUserProto*) other {
  if (other == [FullUserProto defaultInstance]) {
    return self;
  }
  if (other.hasUserId) {
    [self setUserId:other.userId];
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.hasLevel) {
    [self setLevel:other.level];
  }
  if (other.hasGems) {
    [self setGems:other.gems];
  }
  if (other.hasCash) {
    [self setCash:other.cash];
  }
  if (other.hasOil) {
    [self setOil:other.oil];
  }
  if (other.hasExperience) {
    [self setExperience:other.experience];
  }
  if (other.hasTasksCompleted) {
    [self setTasksCompleted:other.tasksCompleted];
  }
  if (other.hasReferralCode) {
    [self setReferralCode:other.referralCode];
  }
  if (other.hasNumReferrals) {
    [self setNumReferrals:other.numReferrals];
  }
  if (other.hasLastLoginTime) {
    [self setLastLoginTime:other.lastLoginTime];
  }
  if (other.hasLastLogoutTime) {
    [self setLastLogoutTime:other.lastLogoutTime];
  }
  if (other.hasIsFake) {
    [self setIsFake:other.isFake];
  }
  if (other.hasIsAdmin) {
    [self setIsAdmin:other.isAdmin];
  }
  if (other.hasNumCoinsRetrievedFromStructs) {
    [self setNumCoinsRetrievedFromStructs:other.numCoinsRetrievedFromStructs];
  }
  if (other.hasNumOilRetrievedFromStructs) {
    [self setNumOilRetrievedFromStructs:other.numOilRetrievedFromStructs];
  }
  if (other.hasClan) {
    [self mergeClan:other.clan];
  }
  if (other.hasHasReceivedfbReward) {
    [self setHasReceivedfbReward:other.hasReceivedfbReward];
  }
  if (other.hasNumBeginnerSalesPurchased) {
    [self setNumBeginnerSalesPurchased:other.numBeginnerSalesPurchased];
  }
  if (other.hasFacebookId) {
    [self setFacebookId:other.facebookId];
  }
  if (other.hasGameCenterId) {
    [self setGameCenterId:other.gameCenterId];
  }
  if (other.hasLastObstacleSpawnedTime) {
    [self setLastObstacleSpawnedTime:other.lastObstacleSpawnedTime];
  }
  if (other.hasNumObstaclesRemoved) {
    [self setNumObstaclesRemoved:other.numObstaclesRemoved];
  }
  if (other.hasPvpLeagueInfo) {
    [self mergePvpLeagueInfo:other.pvpLeagueInfo];
  }
  if (other.hasLastMiniJobSpawnedTime) {
    [self setLastMiniJobSpawnedTime:other.lastMiniJobSpawnedTime];
  }
  if (other.hasUdidForHistory) {
    [self setUdidForHistory:other.udidForHistory];
  }
  if (other.hasDeviceToken) {
    [self setDeviceToken:other.deviceToken];
  }
  if (other.hasNumBadges) {
    [self setNumBadges:other.numBadges];
  }
  if (other.hasCreateTime) {
    [self setCreateTime:other.createTime];
  }
  if (other.hasApsalarId) {
    [self setApsalarId:other.apsalarId];
  }
  if (other.hasNumConsecutiveDaysPlayed) {
    [self setNumConsecutiveDaysPlayed:other.numConsecutiveDaysPlayed];
  }
  if (other.hasLastWallPostNotificationTime) {
    [self setLastWallPostNotificationTime:other.lastWallPostNotificationTime];
  }
  if (other.hasKabamNaid) {
    [self setKabamNaid:other.kabamNaid];
  }
  if (other.hasFbIdSetOnUserCreate) {
    [self setFbIdSetOnUserCreate:other.fbIdSetOnUserCreate];
  }
  if (other.hasUdid) {
    [self setUdid:other.udid];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (FullUserProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (FullUserProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setUserId:[input readInt32]];
        break;
      }
      case 18: {
        [self setName:[input readString]];
        break;
      }
      case 24: {
        [self setLevel:[input readInt32]];
        break;
      }
      case 32: {
        [self setGems:[input readInt32]];
        break;
      }
      case 40: {
        [self setCash:[input readInt32]];
        break;
      }
      case 48: {
        [self setExperience:[input readInt32]];
        break;
      }
      case 56: {
        [self setTasksCompleted:[input readInt32]];
        break;
      }
      case 90: {
        [self setReferralCode:[input readString]];
        break;
      }
      case 96: {
        [self setNumReferrals:[input readInt32]];
        break;
      }
      case 106: {
        [self setUdid:[input readString]];
        break;
      }
      case 112: {
        [self setLastLoginTime:[input readInt64]];
        break;
      }
      case 120: {
        [self setLastLogoutTime:[input readInt64]];
        break;
      }
      case 130: {
        [self setDeviceToken:[input readString]];
        break;
      }
      case 144: {
        [self setNumBadges:[input readInt32]];
        break;
      }
      case 152: {
        [self setIsFake:[input readBool]];
        break;
      }
      case 160: {
        [self setCreateTime:[input readInt64]];
        break;
      }
      case 168: {
        [self setIsAdmin:[input readBool]];
        break;
      }
      case 176: {
        [self setApsalarId:[input readInt32]];
        break;
      }
      case 184: {
        [self setNumCoinsRetrievedFromStructs:[input readInt32]];
        break;
      }
      case 192: {
        [self setNumConsecutiveDaysPlayed:[input readInt32]];
        break;
      }
      case 202: {
        MinimumClanProto_Builder* subBuilder = [MinimumClanProto builder];
        if (self.hasClan) {
          [subBuilder mergeFrom:self.clan];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setClan:[subBuilder buildPartial]];
        break;
      }
      case 208: {
        [self setLastWallPostNotificationTime:[input readInt64]];
        break;
      }
      case 218: {
        [self setKabamNaid:[input readString]];
        break;
      }
      case 224: {
        [self setHasReceivedfbReward:[input readBool]];
        break;
      }
      case 240: {
        [self setNumBeginnerSalesPurchased:[input readInt32]];
        break;
      }
      case 322: {
        [self setFacebookId:[input readString]];
        break;
      }
      case 336: {
        [self setOil:[input readInt32]];
        break;
      }
      case 344: {
        [self setNumOilRetrievedFromStructs:[input readInt32]];
        break;
      }
      case 352: {
        [self setFbIdSetOnUserCreate:[input readBool]];
        break;
      }
      case 362: {
        [self setGameCenterId:[input readString]];
        break;
      }
      case 370: {
        [self setUdidForHistory:[input readString]];
        break;
      }
      case 376: {
        [self setLastObstacleSpawnedTime:[input readInt64]];
        break;
      }
      case 386: {
        UserPvpLeagueProto_Builder* subBuilder = [UserPvpLeagueProto builder];
        if (self.hasPvpLeagueInfo) {
          [subBuilder mergeFrom:self.pvpLeagueInfo];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setPvpLeagueInfo:[subBuilder buildPartial]];
        break;
      }
      case 392: {
        [self setNumObstaclesRemoved:[input readInt32]];
        break;
      }
      case 400: {
        [self setLastMiniJobSpawnedTime:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasUserId {
  return result.hasUserId;
}
- (int32_t) userId {
  return result.userId;
}
- (FullUserProto_Builder*) setUserId:(int32_t) value {
  result.hasUserId = YES;
  result.userId = value;
  return self;
}
- (FullUserProto_Builder*) clearUserId {
  result.hasUserId = NO;
  result.userId = 0;
  return self;
}
- (BOOL) hasName {
  return result.hasName;
}
- (NSString*) name {
  return result.name;
}
- (FullUserProto_Builder*) setName:(NSString*) value {
  result.hasName = YES;
  result.name = value;
  return self;
}
- (FullUserProto_Builder*) clearName {
  result.hasName = NO;
  result.name = @"";
  return self;
}
- (BOOL) hasLevel {
  return result.hasLevel;
}
- (int32_t) level {
  return result.level;
}
- (FullUserProto_Builder*) setLevel:(int32_t) value {
  result.hasLevel = YES;
  result.level = value;
  return self;
}
- (FullUserProto_Builder*) clearLevel {
  result.hasLevel = NO;
  result.level = 0;
  return self;
}
- (BOOL) hasGems {
  return result.hasGems;
}
- (int32_t) gems {
  return result.gems;
}
- (FullUserProto_Builder*) setGems:(int32_t) value {
  result.hasGems = YES;
  result.gems = value;
  return self;
}
- (FullUserProto_Builder*) clearGems {
  result.hasGems = NO;
  result.gems = 0;
  return self;
}
- (BOOL) hasCash {
  return result.hasCash;
}
- (int32_t) cash {
  return result.cash;
}
- (FullUserProto_Builder*) setCash:(int32_t) value {
  result.hasCash = YES;
  result.cash = value;
  return self;
}
- (FullUserProto_Builder*) clearCash {
  result.hasCash = NO;
  result.cash = 0;
  return self;
}
- (BOOL) hasOil {
  return result.hasOil;
}
- (int32_t) oil {
  return result.oil;
}
- (FullUserProto_Builder*) setOil:(int32_t) value {
  result.hasOil = YES;
  result.oil = value;
  return self;
}
- (FullUserProto_Builder*) clearOil {
  result.hasOil = NO;
  result.oil = 0;
  return self;
}
- (BOOL) hasExperience {
  return result.hasExperience;
}
- (int32_t) experience {
  return result.experience;
}
- (FullUserProto_Builder*) setExperience:(int32_t) value {
  result.hasExperience = YES;
  result.experience = value;
  return self;
}
- (FullUserProto_Builder*) clearExperience {
  result.hasExperience = NO;
  result.experience = 0;
  return self;
}
- (BOOL) hasTasksCompleted {
  return result.hasTasksCompleted;
}
- (int32_t) tasksCompleted {
  return result.tasksCompleted;
}
- (FullUserProto_Builder*) setTasksCompleted:(int32_t) value {
  result.hasTasksCompleted = YES;
  result.tasksCompleted = value;
  return self;
}
- (FullUserProto_Builder*) clearTasksCompleted {
  result.hasTasksCompleted = NO;
  result.tasksCompleted = 0;
  return self;
}
- (BOOL) hasReferralCode {
  return result.hasReferralCode;
}
- (NSString*) referralCode {
  return result.referralCode;
}
- (FullUserProto_Builder*) setReferralCode:(NSString*) value {
  result.hasReferralCode = YES;
  result.referralCode = value;
  return self;
}
- (FullUserProto_Builder*) clearReferralCode {
  result.hasReferralCode = NO;
  result.referralCode = @"";
  return self;
}
- (BOOL) hasNumReferrals {
  return result.hasNumReferrals;
}
- (int32_t) numReferrals {
  return result.numReferrals;
}
- (FullUserProto_Builder*) setNumReferrals:(int32_t) value {
  result.hasNumReferrals = YES;
  result.numReferrals = value;
  return self;
}
- (FullUserProto_Builder*) clearNumReferrals {
  result.hasNumReferrals = NO;
  result.numReferrals = 0;
  return self;
}
- (BOOL) hasLastLoginTime {
  return result.hasLastLoginTime;
}
- (int64_t) lastLoginTime {
  return result.lastLoginTime;
}
- (FullUserProto_Builder*) setLastLoginTime:(int64_t) value {
  result.hasLastLoginTime = YES;
  result.lastLoginTime = value;
  return self;
}
- (FullUserProto_Builder*) clearLastLoginTime {
  result.hasLastLoginTime = NO;
  result.lastLoginTime = 0L;
  return self;
}
- (BOOL) hasLastLogoutTime {
  return result.hasLastLogoutTime;
}
- (int64_t) lastLogoutTime {
  return result.lastLogoutTime;
}
- (FullUserProto_Builder*) setLastLogoutTime:(int64_t) value {
  result.hasLastLogoutTime = YES;
  result.lastLogoutTime = value;
  return self;
}
- (FullUserProto_Builder*) clearLastLogoutTime {
  result.hasLastLogoutTime = NO;
  result.lastLogoutTime = 0L;
  return self;
}
- (BOOL) hasIsFake {
  return result.hasIsFake;
}
- (BOOL) isFake {
  return result.isFake;
}
- (FullUserProto_Builder*) setIsFake:(BOOL) value {
  result.hasIsFake = YES;
  result.isFake = value;
  return self;
}
- (FullUserProto_Builder*) clearIsFake {
  result.hasIsFake = NO;
  result.isFake = NO;
  return self;
}
- (BOOL) hasIsAdmin {
  return result.hasIsAdmin;
}
- (BOOL) isAdmin {
  return result.isAdmin;
}
- (FullUserProto_Builder*) setIsAdmin:(BOOL) value {
  result.hasIsAdmin = YES;
  result.isAdmin = value;
  return self;
}
- (FullUserProto_Builder*) clearIsAdmin {
  result.hasIsAdmin = NO;
  result.isAdmin = NO;
  return self;
}
- (BOOL) hasNumCoinsRetrievedFromStructs {
  return result.hasNumCoinsRetrievedFromStructs;
}
- (int32_t) numCoinsRetrievedFromStructs {
  return result.numCoinsRetrievedFromStructs;
}
- (FullUserProto_Builder*) setNumCoinsRetrievedFromStructs:(int32_t) value {
  result.hasNumCoinsRetrievedFromStructs = YES;
  result.numCoinsRetrievedFromStructs = value;
  return self;
}
- (FullUserProto_Builder*) clearNumCoinsRetrievedFromStructs {
  result.hasNumCoinsRetrievedFromStructs = NO;
  result.numCoinsRetrievedFromStructs = 0;
  return self;
}
- (BOOL) hasNumOilRetrievedFromStructs {
  return result.hasNumOilRetrievedFromStructs;
}
- (int32_t) numOilRetrievedFromStructs {
  return result.numOilRetrievedFromStructs;
}
- (FullUserProto_Builder*) setNumOilRetrievedFromStructs:(int32_t) value {
  result.hasNumOilRetrievedFromStructs = YES;
  result.numOilRetrievedFromStructs = value;
  return self;
}
- (FullUserProto_Builder*) clearNumOilRetrievedFromStructs {
  result.hasNumOilRetrievedFromStructs = NO;
  result.numOilRetrievedFromStructs = 0;
  return self;
}
- (BOOL) hasClan {
  return result.hasClan;
}
- (MinimumClanProto*) clan {
  return result.clan;
}
- (FullUserProto_Builder*) setClan:(MinimumClanProto*) value {
  result.hasClan = YES;
  result.clan = value;
  return self;
}
- (FullUserProto_Builder*) setClanBuilder:(MinimumClanProto_Builder*) builderForValue {
  return [self setClan:[builderForValue build]];
}
- (FullUserProto_Builder*) mergeClan:(MinimumClanProto*) value {
  if (result.hasClan &&
      result.clan != [MinimumClanProto defaultInstance]) {
    result.clan =
      [[[MinimumClanProto builderWithPrototype:result.clan] mergeFrom:value] buildPartial];
  } else {
    result.clan = value;
  }
  result.hasClan = YES;
  return self;
}
- (FullUserProto_Builder*) clearClan {
  result.hasClan = NO;
  result.clan = [MinimumClanProto defaultInstance];
  return self;
}
- (BOOL) hasHasReceivedfbReward {
  return result.hasHasReceivedfbReward;
}
- (BOOL) hasReceivedfbReward {
  return result.hasReceivedfbReward;
}
- (FullUserProto_Builder*) setHasReceivedfbReward:(BOOL) value {
  result.hasHasReceivedfbReward = YES;
  result.hasReceivedfbReward = value;
  return self;
}
- (FullUserProto_Builder*) clearHasReceivedfbReward {
  result.hasHasReceivedfbReward = NO;
  result.hasReceivedfbReward = NO;
  return self;
}
- (BOOL) hasNumBeginnerSalesPurchased {
  return result.hasNumBeginnerSalesPurchased;
}
- (int32_t) numBeginnerSalesPurchased {
  return result.numBeginnerSalesPurchased;
}
- (FullUserProto_Builder*) setNumBeginnerSalesPurchased:(int32_t) value {
  result.hasNumBeginnerSalesPurchased = YES;
  result.numBeginnerSalesPurchased = value;
  return self;
}
- (FullUserProto_Builder*) clearNumBeginnerSalesPurchased {
  result.hasNumBeginnerSalesPurchased = NO;
  result.numBeginnerSalesPurchased = 0;
  return self;
}
- (BOOL) hasFacebookId {
  return result.hasFacebookId;
}
- (NSString*) facebookId {
  return result.facebookId;
}
- (FullUserProto_Builder*) setFacebookId:(NSString*) value {
  result.hasFacebookId = YES;
  result.facebookId = value;
  return self;
}
- (FullUserProto_Builder*) clearFacebookId {
  result.hasFacebookId = NO;
  result.facebookId = @"";
  return self;
}
- (BOOL) hasGameCenterId {
  return result.hasGameCenterId;
}
- (NSString*) gameCenterId {
  return result.gameCenterId;
}
- (FullUserProto_Builder*) setGameCenterId:(NSString*) value {
  result.hasGameCenterId = YES;
  result.gameCenterId = value;
  return self;
}
- (FullUserProto_Builder*) clearGameCenterId {
  result.hasGameCenterId = NO;
  result.gameCenterId = @"";
  return self;
}
- (BOOL) hasLastObstacleSpawnedTime {
  return result.hasLastObstacleSpawnedTime;
}
- (int64_t) lastObstacleSpawnedTime {
  return result.lastObstacleSpawnedTime;
}
- (FullUserProto_Builder*) setLastObstacleSpawnedTime:(int64_t) value {
  result.hasLastObstacleSpawnedTime = YES;
  result.lastObstacleSpawnedTime = value;
  return self;
}
- (FullUserProto_Builder*) clearLastObstacleSpawnedTime {
  result.hasLastObstacleSpawnedTime = NO;
  result.lastObstacleSpawnedTime = 0L;
  return self;
}
- (BOOL) hasNumObstaclesRemoved {
  return result.hasNumObstaclesRemoved;
}
- (int32_t) numObstaclesRemoved {
  return result.numObstaclesRemoved;
}
- (FullUserProto_Builder*) setNumObstaclesRemoved:(int32_t) value {
  result.hasNumObstaclesRemoved = YES;
  result.numObstaclesRemoved = value;
  return self;
}
- (FullUserProto_Builder*) clearNumObstaclesRemoved {
  result.hasNumObstaclesRemoved = NO;
  result.numObstaclesRemoved = 0;
  return self;
}
- (BOOL) hasPvpLeagueInfo {
  return result.hasPvpLeagueInfo;
}
- (UserPvpLeagueProto*) pvpLeagueInfo {
  return result.pvpLeagueInfo;
}
- (FullUserProto_Builder*) setPvpLeagueInfo:(UserPvpLeagueProto*) value {
  result.hasPvpLeagueInfo = YES;
  result.pvpLeagueInfo = value;
  return self;
}
- (FullUserProto_Builder*) setPvpLeagueInfoBuilder:(UserPvpLeagueProto_Builder*) builderForValue {
  return [self setPvpLeagueInfo:[builderForValue build]];
}
- (FullUserProto_Builder*) mergePvpLeagueInfo:(UserPvpLeagueProto*) value {
  if (result.hasPvpLeagueInfo &&
      result.pvpLeagueInfo != [UserPvpLeagueProto defaultInstance]) {
    result.pvpLeagueInfo =
      [[[UserPvpLeagueProto builderWithPrototype:result.pvpLeagueInfo] mergeFrom:value] buildPartial];
  } else {
    result.pvpLeagueInfo = value;
  }
  result.hasPvpLeagueInfo = YES;
  return self;
}
- (FullUserProto_Builder*) clearPvpLeagueInfo {
  result.hasPvpLeagueInfo = NO;
  result.pvpLeagueInfo = [UserPvpLeagueProto defaultInstance];
  return self;
}
- (BOOL) hasLastMiniJobSpawnedTime {
  return result.hasLastMiniJobSpawnedTime;
}
- (int64_t) lastMiniJobSpawnedTime {
  return result.lastMiniJobSpawnedTime;
}
- (FullUserProto_Builder*) setLastMiniJobSpawnedTime:(int64_t) value {
  result.hasLastMiniJobSpawnedTime = YES;
  result.lastMiniJobSpawnedTime = value;
  return self;
}
- (FullUserProto_Builder*) clearLastMiniJobSpawnedTime {
  result.hasLastMiniJobSpawnedTime = NO;
  result.lastMiniJobSpawnedTime = 0L;
  return self;
}
- (BOOL) hasUdidForHistory {
  return result.hasUdidForHistory;
}
- (NSString*) udidForHistory {
  return result.udidForHistory;
}
- (FullUserProto_Builder*) setUdidForHistory:(NSString*) value {
  result.hasUdidForHistory = YES;
  result.udidForHistory = value;
  return self;
}
- (FullUserProto_Builder*) clearUdidForHistory {
  result.hasUdidForHistory = NO;
  result.udidForHistory = @"";
  return self;
}
- (BOOL) hasDeviceToken {
  return result.hasDeviceToken;
}
- (NSString*) deviceToken {
  return result.deviceToken;
}
- (FullUserProto_Builder*) setDeviceToken:(NSString*) value {
  result.hasDeviceToken = YES;
  result.deviceToken = value;
  return self;
}
- (FullUserProto_Builder*) clearDeviceToken {
  result.hasDeviceToken = NO;
  result.deviceToken = @"";
  return self;
}
- (BOOL) hasNumBadges {
  return result.hasNumBadges;
}
- (int32_t) numBadges {
  return result.numBadges;
}
- (FullUserProto_Builder*) setNumBadges:(int32_t) value {
  result.hasNumBadges = YES;
  result.numBadges = value;
  return self;
}
- (FullUserProto_Builder*) clearNumBadges {
  result.hasNumBadges = NO;
  result.numBadges = 0;
  return self;
}
- (BOOL) hasCreateTime {
  return result.hasCreateTime;
}
- (int64_t) createTime {
  return result.createTime;
}
- (FullUserProto_Builder*) setCreateTime:(int64_t) value {
  result.hasCreateTime = YES;
  result.createTime = value;
  return self;
}
- (FullUserProto_Builder*) clearCreateTime {
  result.hasCreateTime = NO;
  result.createTime = 0L;
  return self;
}
- (BOOL) hasApsalarId {
  return result.hasApsalarId;
}
- (int32_t) apsalarId {
  return result.apsalarId;
}
- (FullUserProto_Builder*) setApsalarId:(int32_t) value {
  result.hasApsalarId = YES;
  result.apsalarId = value;
  return self;
}
- (FullUserProto_Builder*) clearApsalarId {
  result.hasApsalarId = NO;
  result.apsalarId = 0;
  return self;
}
- (BOOL) hasNumConsecutiveDaysPlayed {
  return result.hasNumConsecutiveDaysPlayed;
}
- (int32_t) numConsecutiveDaysPlayed {
  return result.numConsecutiveDaysPlayed;
}
- (FullUserProto_Builder*) setNumConsecutiveDaysPlayed:(int32_t) value {
  result.hasNumConsecutiveDaysPlayed = YES;
  result.numConsecutiveDaysPlayed = value;
  return self;
}
- (FullUserProto_Builder*) clearNumConsecutiveDaysPlayed {
  result.hasNumConsecutiveDaysPlayed = NO;
  result.numConsecutiveDaysPlayed = 0;
  return self;
}
- (BOOL) hasLastWallPostNotificationTime {
  return result.hasLastWallPostNotificationTime;
}
- (int64_t) lastWallPostNotificationTime {
  return result.lastWallPostNotificationTime;
}
- (FullUserProto_Builder*) setLastWallPostNotificationTime:(int64_t) value {
  result.hasLastWallPostNotificationTime = YES;
  result.lastWallPostNotificationTime = value;
  return self;
}
- (FullUserProto_Builder*) clearLastWallPostNotificationTime {
  result.hasLastWallPostNotificationTime = NO;
  result.lastWallPostNotificationTime = 0L;
  return self;
}
- (BOOL) hasKabamNaid {
  return result.hasKabamNaid;
}
- (NSString*) kabamNaid {
  return result.kabamNaid;
}
- (FullUserProto_Builder*) setKabamNaid:(NSString*) value {
  result.hasKabamNaid = YES;
  result.kabamNaid = value;
  return self;
}
- (FullUserProto_Builder*) clearKabamNaid {
  result.hasKabamNaid = NO;
  result.kabamNaid = @"";
  return self;
}
- (BOOL) hasFbIdSetOnUserCreate {
  return result.hasFbIdSetOnUserCreate;
}
- (BOOL) fbIdSetOnUserCreate {
  return result.fbIdSetOnUserCreate;
}
- (FullUserProto_Builder*) setFbIdSetOnUserCreate:(BOOL) value {
  result.hasFbIdSetOnUserCreate = YES;
  result.fbIdSetOnUserCreate = value;
  return self;
}
- (FullUserProto_Builder*) clearFbIdSetOnUserCreate {
  result.hasFbIdSetOnUserCreate = NO;
  result.fbIdSetOnUserCreate = NO;
  return self;
}
- (BOOL) hasUdid {
  return result.hasUdid;
}
- (NSString*) udid {
  return result.udid;
}
- (FullUserProto_Builder*) setUdid:(NSString*) value {
  result.hasUdid = YES;
  result.udid = value;
  return self;
}
- (FullUserProto_Builder*) clearUdid {
  result.hasUdid = NO;
  result.udid = @"";
  return self;
}
@end

@interface StaticUserLevelInfoProto ()
@property int32_t level;
@property int32_t requiredExperience;
@end

@implementation StaticUserLevelInfoProto

- (BOOL) hasLevel {
  return !!hasLevel_;
}
- (void) setHasLevel:(BOOL) value {
  hasLevel_ = !!value;
}
@synthesize level;
- (BOOL) hasRequiredExperience {
  return !!hasRequiredExperience_;
}
- (void) setHasRequiredExperience:(BOOL) value {
  hasRequiredExperience_ = !!value;
}
@synthesize requiredExperience;
- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.level = 0;
    self.requiredExperience = 0;
  }
  return self;
}
static StaticUserLevelInfoProto* defaultStaticUserLevelInfoProtoInstance = nil;
+ (void) initialize {
  if (self == [StaticUserLevelInfoProto class]) {
    defaultStaticUserLevelInfoProtoInstance = [[StaticUserLevelInfoProto alloc] init];
  }
}
+ (StaticUserLevelInfoProto*) defaultInstance {
  return defaultStaticUserLevelInfoProtoInstance;
}
- (StaticUserLevelInfoProto*) defaultInstance {
  return defaultStaticUserLevelInfoProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasLevel) {
    [output writeInt32:1 value:self.level];
  }
  if (self.hasRequiredExperience) {
    [output writeInt32:2 value:self.requiredExperience];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasLevel) {
    size += computeInt32Size(1, self.level);
  }
  if (self.hasRequiredExperience) {
    size += computeInt32Size(2, self.requiredExperience);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (StaticUserLevelInfoProto*) parseFromData:(NSData*) data {
  return (StaticUserLevelInfoProto*)[[[StaticUserLevelInfoProto builder] mergeFromData:data] build];
}
+ (StaticUserLevelInfoProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (StaticUserLevelInfoProto*)[[[StaticUserLevelInfoProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (StaticUserLevelInfoProto*) parseFromInputStream:(NSInputStream*) input {
  return (StaticUserLevelInfoProto*)[[[StaticUserLevelInfoProto builder] mergeFromInputStream:input] build];
}
+ (StaticUserLevelInfoProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (StaticUserLevelInfoProto*)[[[StaticUserLevelInfoProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (StaticUserLevelInfoProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (StaticUserLevelInfoProto*)[[[StaticUserLevelInfoProto builder] mergeFromCodedInputStream:input] build];
}
+ (StaticUserLevelInfoProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (StaticUserLevelInfoProto*)[[[StaticUserLevelInfoProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (StaticUserLevelInfoProto_Builder*) builder {
  return [[[StaticUserLevelInfoProto_Builder alloc] init] autorelease];
}
+ (StaticUserLevelInfoProto_Builder*) builderWithPrototype:(StaticUserLevelInfoProto*) prototype {
  return [[StaticUserLevelInfoProto builder] mergeFrom:prototype];
}
- (StaticUserLevelInfoProto_Builder*) builder {
  return [StaticUserLevelInfoProto builder];
}
@end

@interface StaticUserLevelInfoProto_Builder()
@property (retain) StaticUserLevelInfoProto* result;
@end

@implementation StaticUserLevelInfoProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[StaticUserLevelInfoProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (StaticUserLevelInfoProto_Builder*) clear {
  self.result = [[[StaticUserLevelInfoProto alloc] init] autorelease];
  return self;
}
- (StaticUserLevelInfoProto_Builder*) clone {
  return [StaticUserLevelInfoProto builderWithPrototype:result];
}
- (StaticUserLevelInfoProto*) defaultInstance {
  return [StaticUserLevelInfoProto defaultInstance];
}
- (StaticUserLevelInfoProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (StaticUserLevelInfoProto*) buildPartial {
  StaticUserLevelInfoProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (StaticUserLevelInfoProto_Builder*) mergeFrom:(StaticUserLevelInfoProto*) other {
  if (other == [StaticUserLevelInfoProto defaultInstance]) {
    return self;
  }
  if (other.hasLevel) {
    [self setLevel:other.level];
  }
  if (other.hasRequiredExperience) {
    [self setRequiredExperience:other.requiredExperience];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (StaticUserLevelInfoProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (StaticUserLevelInfoProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setLevel:[input readInt32]];
        break;
      }
      case 16: {
        [self setRequiredExperience:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasLevel {
  return result.hasLevel;
}
- (int32_t) level {
  return result.level;
}
- (StaticUserLevelInfoProto_Builder*) setLevel:(int32_t) value {
  result.hasLevel = YES;
  result.level = value;
  return self;
}
- (StaticUserLevelInfoProto_Builder*) clearLevel {
  result.hasLevel = NO;
  result.level = 0;
  return self;
}
- (BOOL) hasRequiredExperience {
  return result.hasRequiredExperience;
}
- (int32_t) requiredExperience {
  return result.requiredExperience;
}
- (StaticUserLevelInfoProto_Builder*) setRequiredExperience:(int32_t) value {
  result.hasRequiredExperience = YES;
  result.requiredExperience = value;
  return self;
}
- (StaticUserLevelInfoProto_Builder*) clearRequiredExperience {
  result.hasRequiredExperience = NO;
  result.requiredExperience = 0;
  return self;
}
@end

@interface UserPvpLeagueProto ()
@property int32_t userId;
@property int32_t leagueId;
@property int32_t rank;
@property int32_t elo;
@property int32_t battlesWon;
@property int32_t battlesLost;
@property int64_t shieldEndTime;
@end

@implementation UserPvpLeagueProto

- (BOOL) hasUserId {
  return !!hasUserId_;
}
- (void) setHasUserId:(BOOL) value {
  hasUserId_ = !!value;
}
@synthesize userId;
- (BOOL) hasLeagueId {
  return !!hasLeagueId_;
}
- (void) setHasLeagueId:(BOOL) value {
  hasLeagueId_ = !!value;
}
@synthesize leagueId;
- (BOOL) hasRank {
  return !!hasRank_;
}
- (void) setHasRank:(BOOL) value {
  hasRank_ = !!value;
}
@synthesize rank;
- (BOOL) hasElo {
  return !!hasElo_;
}
- (void) setHasElo:(BOOL) value {
  hasElo_ = !!value;
}
@synthesize elo;
- (BOOL) hasBattlesWon {
  return !!hasBattlesWon_;
}
- (void) setHasBattlesWon:(BOOL) value {
  hasBattlesWon_ = !!value;
}
@synthesize battlesWon;
- (BOOL) hasBattlesLost {
  return !!hasBattlesLost_;
}
- (void) setHasBattlesLost:(BOOL) value {
  hasBattlesLost_ = !!value;
}
@synthesize battlesLost;
- (BOOL) hasShieldEndTime {
  return !!hasShieldEndTime_;
}
- (void) setHasShieldEndTime:(BOOL) value {
  hasShieldEndTime_ = !!value;
}
@synthesize shieldEndTime;
- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.userId = 0;
    self.leagueId = 0;
    self.rank = 0;
    self.elo = 0;
    self.battlesWon = 0;
    self.battlesLost = 0;
    self.shieldEndTime = 0L;
  }
  return self;
}
static UserPvpLeagueProto* defaultUserPvpLeagueProtoInstance = nil;
+ (void) initialize {
  if (self == [UserPvpLeagueProto class]) {
    defaultUserPvpLeagueProtoInstance = [[UserPvpLeagueProto alloc] init];
  }
}
+ (UserPvpLeagueProto*) defaultInstance {
  return defaultUserPvpLeagueProtoInstance;
}
- (UserPvpLeagueProto*) defaultInstance {
  return defaultUserPvpLeagueProtoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUserId) {
    [output writeInt32:1 value:self.userId];
  }
  if (self.hasLeagueId) {
    [output writeInt32:2 value:self.leagueId];
  }
  if (self.hasRank) {
    [output writeInt32:3 value:self.rank];
  }
  if (self.hasElo) {
    [output writeInt32:4 value:self.elo];
  }
  if (self.hasBattlesWon) {
    [output writeInt32:5 value:self.battlesWon];
  }
  if (self.hasBattlesLost) {
    [output writeInt32:6 value:self.battlesLost];
  }
  if (self.hasShieldEndTime) {
    [output writeInt64:7 value:self.shieldEndTime];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasUserId) {
    size += computeInt32Size(1, self.userId);
  }
  if (self.hasLeagueId) {
    size += computeInt32Size(2, self.leagueId);
  }
  if (self.hasRank) {
    size += computeInt32Size(3, self.rank);
  }
  if (self.hasElo) {
    size += computeInt32Size(4, self.elo);
  }
  if (self.hasBattlesWon) {
    size += computeInt32Size(5, self.battlesWon);
  }
  if (self.hasBattlesLost) {
    size += computeInt32Size(6, self.battlesLost);
  }
  if (self.hasShieldEndTime) {
    size += computeInt64Size(7, self.shieldEndTime);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (UserPvpLeagueProto*) parseFromData:(NSData*) data {
  return (UserPvpLeagueProto*)[[[UserPvpLeagueProto builder] mergeFromData:data] build];
}
+ (UserPvpLeagueProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UserPvpLeagueProto*)[[[UserPvpLeagueProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (UserPvpLeagueProto*) parseFromInputStream:(NSInputStream*) input {
  return (UserPvpLeagueProto*)[[[UserPvpLeagueProto builder] mergeFromInputStream:input] build];
}
+ (UserPvpLeagueProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UserPvpLeagueProto*)[[[UserPvpLeagueProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (UserPvpLeagueProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (UserPvpLeagueProto*)[[[UserPvpLeagueProto builder] mergeFromCodedInputStream:input] build];
}
+ (UserPvpLeagueProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UserPvpLeagueProto*)[[[UserPvpLeagueProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (UserPvpLeagueProto_Builder*) builder {
  return [[[UserPvpLeagueProto_Builder alloc] init] autorelease];
}
+ (UserPvpLeagueProto_Builder*) builderWithPrototype:(UserPvpLeagueProto*) prototype {
  return [[UserPvpLeagueProto builder] mergeFrom:prototype];
}
- (UserPvpLeagueProto_Builder*) builder {
  return [UserPvpLeagueProto builder];
}
@end

@interface UserPvpLeagueProto_Builder()
@property (retain) UserPvpLeagueProto* result;
@end

@implementation UserPvpLeagueProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[UserPvpLeagueProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (UserPvpLeagueProto_Builder*) clear {
  self.result = [[[UserPvpLeagueProto alloc] init] autorelease];
  return self;
}
- (UserPvpLeagueProto_Builder*) clone {
  return [UserPvpLeagueProto builderWithPrototype:result];
}
- (UserPvpLeagueProto*) defaultInstance {
  return [UserPvpLeagueProto defaultInstance];
}
- (UserPvpLeagueProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (UserPvpLeagueProto*) buildPartial {
  UserPvpLeagueProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (UserPvpLeagueProto_Builder*) mergeFrom:(UserPvpLeagueProto*) other {
  if (other == [UserPvpLeagueProto defaultInstance]) {
    return self;
  }
  if (other.hasUserId) {
    [self setUserId:other.userId];
  }
  if (other.hasLeagueId) {
    [self setLeagueId:other.leagueId];
  }
  if (other.hasRank) {
    [self setRank:other.rank];
  }
  if (other.hasElo) {
    [self setElo:other.elo];
  }
  if (other.hasBattlesWon) {
    [self setBattlesWon:other.battlesWon];
  }
  if (other.hasBattlesLost) {
    [self setBattlesLost:other.battlesLost];
  }
  if (other.hasShieldEndTime) {
    [self setShieldEndTime:other.shieldEndTime];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (UserPvpLeagueProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (UserPvpLeagueProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setUserId:[input readInt32]];
        break;
      }
      case 16: {
        [self setLeagueId:[input readInt32]];
        break;
      }
      case 24: {
        [self setRank:[input readInt32]];
        break;
      }
      case 32: {
        [self setElo:[input readInt32]];
        break;
      }
      case 40: {
        [self setBattlesWon:[input readInt32]];
        break;
      }
      case 48: {
        [self setBattlesLost:[input readInt32]];
        break;
      }
      case 56: {
        [self setShieldEndTime:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasUserId {
  return result.hasUserId;
}
- (int32_t) userId {
  return result.userId;
}
- (UserPvpLeagueProto_Builder*) setUserId:(int32_t) value {
  result.hasUserId = YES;
  result.userId = value;
  return self;
}
- (UserPvpLeagueProto_Builder*) clearUserId {
  result.hasUserId = NO;
  result.userId = 0;
  return self;
}
- (BOOL) hasLeagueId {
  return result.hasLeagueId;
}
- (int32_t) leagueId {
  return result.leagueId;
}
- (UserPvpLeagueProto_Builder*) setLeagueId:(int32_t) value {
  result.hasLeagueId = YES;
  result.leagueId = value;
  return self;
}
- (UserPvpLeagueProto_Builder*) clearLeagueId {
  result.hasLeagueId = NO;
  result.leagueId = 0;
  return self;
}
- (BOOL) hasRank {
  return result.hasRank;
}
- (int32_t) rank {
  return result.rank;
}
- (UserPvpLeagueProto_Builder*) setRank:(int32_t) value {
  result.hasRank = YES;
  result.rank = value;
  return self;
}
- (UserPvpLeagueProto_Builder*) clearRank {
  result.hasRank = NO;
  result.rank = 0;
  return self;
}
- (BOOL) hasElo {
  return result.hasElo;
}
- (int32_t) elo {
  return result.elo;
}
- (UserPvpLeagueProto_Builder*) setElo:(int32_t) value {
  result.hasElo = YES;
  result.elo = value;
  return self;
}
- (UserPvpLeagueProto_Builder*) clearElo {
  result.hasElo = NO;
  result.elo = 0;
  return self;
}
- (BOOL) hasBattlesWon {
  return result.hasBattlesWon;
}
- (int32_t) battlesWon {
  return result.battlesWon;
}
- (UserPvpLeagueProto_Builder*) setBattlesWon:(int32_t) value {
  result.hasBattlesWon = YES;
  result.battlesWon = value;
  return self;
}
- (UserPvpLeagueProto_Builder*) clearBattlesWon {
  result.hasBattlesWon = NO;
  result.battlesWon = 0;
  return self;
}
- (BOOL) hasBattlesLost {
  return result.hasBattlesLost;
}
- (int32_t) battlesLost {
  return result.battlesLost;
}
- (UserPvpLeagueProto_Builder*) setBattlesLost:(int32_t) value {
  result.hasBattlesLost = YES;
  result.battlesLost = value;
  return self;
}
- (UserPvpLeagueProto_Builder*) clearBattlesLost {
  result.hasBattlesLost = NO;
  result.battlesLost = 0;
  return self;
}
- (BOOL) hasShieldEndTime {
  return result.hasShieldEndTime;
}
- (int64_t) shieldEndTime {
  return result.shieldEndTime;
}
- (UserPvpLeagueProto_Builder*) setShieldEndTime:(int64_t) value {
  result.hasShieldEndTime = YES;
  result.shieldEndTime = value;
  return self;
}
- (UserPvpLeagueProto_Builder*) clearShieldEndTime {
  result.hasShieldEndTime = NO;
  result.shieldEndTime = 0L;
  return self;
}
@end

